{"ast":null,"code":"const {\n  JWTClaimInvalid\n} = require('../errors');\nconst secs = require('../help/secs');\nconst epoch = require('../help/epoch');\nconst isObject = require('../help/is_object');\nconst verify = require('./verify');\nconst {\n  isString,\n  isRequired,\n  isTimestamp,\n  isStringOrArrayOfStrings\n} = require('./shared_validations');\nconst isPayloadRequired = isRequired.bind(undefined, JWTClaimInvalid);\nconst isPayloadString = isString.bind(undefined, JWTClaimInvalid);\nconst isOptionString = isString.bind(undefined, TypeError);\nconst defineLazyExportWithWarning = (obj, property, name, definition) => {\n  Object.defineProperty(obj, property, {\n    enumerable: true,\n    configurable: true,\n    value(...args) {\n      process.emitWarning(`The ${name} API implements an IETF draft. Breaking draft implementations are included as minor versions of the jose library, therefore, the ~ semver operator should be used and close attention be payed to library changelog as well as the drafts themselves.`, 'DraftWarning');\n      Object.defineProperty(obj, property, {\n        enumerable: true,\n        configurable: true,\n        value: definition\n      });\n      return obj[property](...args);\n    }\n  });\n};\nconst validateCommonOptions = (options, profile) => {\n  if (!isObject(options)) {\n    throw new TypeError('options must be an object');\n  }\n  if (!options.issuer) {\n    throw new TypeError(`\"issuer\" option is required to validate ${profile}`);\n  }\n  if (!options.audience) {\n    throw new TypeError(`\"audience\" option is required to validate ${profile}`);\n  }\n};\nmodule.exports = {\n  IdToken: {\n    verify: (token, key, options = {}) => {\n      validateCommonOptions(options, 'an ID Token');\n      if ('maxAuthAge' in options) {\n        isOptionString(options.maxAuthAge, 'options.maxAuthAge');\n      }\n      if ('nonce' in options) {\n        isOptionString(options.nonce, 'options.nonce');\n      }\n      const unix = epoch(options.now || new Date());\n      const result = verify(token, key, {\n        ...options\n      });\n      const payload = options.complete ? result.payload : result;\n      if (Array.isArray(payload.aud) && payload.aud.length > 1) {\n        isPayloadRequired(payload.azp, '\"azp\" claim', 'azp');\n      }\n      isPayloadRequired(payload.iat, '\"iat\" claim', 'iat');\n      isPayloadRequired(payload.sub, '\"sub\" claim', 'sub');\n      isPayloadRequired(payload.exp, '\"exp\" claim', 'exp');\n      isTimestamp(payload.auth_time, 'auth_time', !!options.maxAuthAge);\n      isPayloadString(payload.nonce, '\"nonce\" claim', 'nonce', !!options.nonce);\n      isPayloadString(payload.acr, '\"acr\" claim', 'acr');\n      isStringOrArrayOfStrings(payload.amr, 'amr');\n      if (options.nonce && payload.nonce !== options.nonce) {\n        throw new JWTClaimInvalid('unexpected \"nonce\" claim value', 'nonce', 'check_failed');\n      }\n      const tolerance = options.clockTolerance ? secs(options.clockTolerance) : 0;\n      if (options.maxAuthAge) {\n        const maxAuthAgeSeconds = secs(options.maxAuthAge);\n        if (payload.auth_time + maxAuthAgeSeconds < unix - tolerance) {\n          throw new JWTClaimInvalid('\"auth_time\" claim timestamp check failed (too much time has elapsed since the last End-User authentication)', 'auth_time', 'check_failed');\n        }\n      }\n      if (Array.isArray(payload.aud) && payload.aud.length > 1 && payload.azp !== options.audience) {\n        throw new JWTClaimInvalid('unexpected \"azp\" claim value', 'azp', 'check_failed');\n      }\n      return result;\n    }\n  },\n  LogoutToken: {},\n  AccessToken: {}\n};\ndefineLazyExportWithWarning(module.exports.LogoutToken, 'verify', 'jose.JWT.LogoutToken.verify', (token, key, options = {}) => {\n  validateCommonOptions(options, 'a Logout Token');\n  const result = verify(token, key, {\n    ...options\n  });\n  const payload = options.complete ? result.payload : result;\n  isPayloadRequired(payload.iat, '\"iat\" claim', 'iat');\n  isPayloadRequired(payload.jti, '\"jti\" claim', 'jti');\n  isPayloadString(payload.sid, '\"sid\" claim', 'sid');\n  if (!('sid' in payload) && !('sub' in payload)) {\n    throw new JWTClaimInvalid('either \"sid\" or \"sub\" (or both) claims must be present');\n  }\n  if ('nonce' in payload) {\n    throw new JWTClaimInvalid('\"nonce\" claim is prohibited', 'nonce', 'prohibited');\n  }\n  if (!('events' in payload)) {\n    throw new JWTClaimInvalid('\"events\" claim is missing', 'events', 'missing');\n  }\n  if (!isObject(payload.events)) {\n    throw new JWTClaimInvalid('\"events\" claim must be an object', 'events', 'invalid');\n  }\n  if (!('http://schemas.openid.net/event/backchannel-logout' in payload.events)) {\n    throw new JWTClaimInvalid('\"http://schemas.openid.net/event/backchannel-logout\" member is missing in the \"events\" claim', 'events', 'invalid');\n  }\n  if (!isObject(payload.events['http://schemas.openid.net/event/backchannel-logout'])) {\n    throw new JWTClaimInvalid('\"http://schemas.openid.net/event/backchannel-logout\" member in the \"events\" claim must be an object', 'events', 'invalid');\n  }\n  return result;\n});\ndefineLazyExportWithWarning(module.exports.AccessToken, 'verify', 'jose.JWT.AccessToken.verify', (token, key, options = {}) => {\n  validateCommonOptions(options, 'a JWT Access Token');\n  isOptionString(options.maxAuthAge, 'options.maxAuthAge');\n  const unix = epoch(options.now || new Date());\n  const typ = 'at+JWT';\n  const result = verify(token, key, {\n    ...options,\n    typ\n  });\n  const payload = options.complete ? result.payload : result;\n  isPayloadRequired(payload.iat, '\"iat\" claim', 'iat');\n  isPayloadRequired(payload.exp, '\"exp\" claim', 'exp');\n  isPayloadRequired(payload.sub, '\"sub\" claim', 'sub');\n  isPayloadRequired(payload.jti, '\"jti\" claim', 'jti');\n  isPayloadString(payload.client_id, '\"client_id\" claim', 'client_id', true);\n  isTimestamp(payload.auth_time, 'auth_time', !!options.maxAuthAge);\n  isPayloadString(payload.acr, '\"acr\" claim', 'acr');\n  isStringOrArrayOfStrings(payload.amr, 'amr');\n  const tolerance = options.clockTolerance ? secs(options.clockTolerance) : 0;\n  if (options.maxAuthAge) {\n    const maxAuthAgeSeconds = secs(options.maxAuthAge);\n    if (payload.auth_time + maxAuthAgeSeconds < unix - tolerance) {\n      throw new JWTClaimInvalid('\"auth_time\" claim timestamp check failed (too much time has elapsed since the last End-User authentication)', 'auth_time', 'check_failed');\n    }\n  }\n  return result;\n});","map":{"version":3,"names":["JWTClaimInvalid","require","secs","epoch","isObject","verify","isString","isRequired","isTimestamp","isStringOrArrayOfStrings","isPayloadRequired","bind","undefined","isPayloadString","isOptionString","TypeError","defineLazyExportWithWarning","obj","property","name","definition","Object","defineProperty","enumerable","configurable","value","args","process","emitWarning","validateCommonOptions","options","profile","issuer","audience","module","exports","IdToken","token","key","maxAuthAge","nonce","unix","now","Date","result","payload","complete","Array","isArray","aud","length","azp","iat","sub","exp","auth_time","acr","amr","tolerance","clockTolerance","maxAuthAgeSeconds","LogoutToken","AccessToken","jti","sid","events","typ","client_id"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/jwt/profiles.js"],"sourcesContent":["const { JWTClaimInvalid } = require('../errors')\nconst secs = require('../help/secs')\nconst epoch = require('../help/epoch')\nconst isObject = require('../help/is_object')\n\nconst verify = require('./verify')\nconst {\n  isString,\n  isRequired,\n  isTimestamp,\n  isStringOrArrayOfStrings\n} = require('./shared_validations')\n\nconst isPayloadRequired = isRequired.bind(undefined, JWTClaimInvalid)\nconst isPayloadString = isString.bind(undefined, JWTClaimInvalid)\nconst isOptionString = isString.bind(undefined, TypeError)\n\nconst defineLazyExportWithWarning = (obj, property, name, definition) => {\n  Object.defineProperty(obj, property, {\n    enumerable: true,\n    configurable: true,\n    value (...args) {\n      process.emitWarning(\n        `The ${name} API implements an IETF draft. Breaking draft implementations are included as minor versions of the jose library, therefore, the ~ semver operator should be used and close attention be payed to library changelog as well as the drafts themselves.`,\n        'DraftWarning'\n      )\n      Object.defineProperty(obj, property, {\n        enumerable: true,\n        configurable: true,\n        value: definition\n      })\n      return obj[property](...args)\n    }\n  })\n}\n\nconst validateCommonOptions = (options, profile) => {\n  if (!isObject(options)) {\n    throw new TypeError('options must be an object')\n  }\n\n  if (!options.issuer) {\n    throw new TypeError(`\"issuer\" option is required to validate ${profile}`)\n  }\n\n  if (!options.audience) {\n    throw new TypeError(`\"audience\" option is required to validate ${profile}`)\n  }\n}\n\nmodule.exports = {\n  IdToken: {\n    verify: (token, key, options = {}) => {\n      validateCommonOptions(options, 'an ID Token')\n\n      if ('maxAuthAge' in options) {\n        isOptionString(options.maxAuthAge, 'options.maxAuthAge')\n      }\n      if ('nonce' in options) {\n        isOptionString(options.nonce, 'options.nonce')\n      }\n\n      const unix = epoch(options.now || new Date())\n      const result = verify(token, key, { ...options })\n      const payload = options.complete ? result.payload : result\n\n      if (Array.isArray(payload.aud) && payload.aud.length > 1) {\n        isPayloadRequired(payload.azp, '\"azp\" claim', 'azp')\n      }\n      isPayloadRequired(payload.iat, '\"iat\" claim', 'iat')\n      isPayloadRequired(payload.sub, '\"sub\" claim', 'sub')\n      isPayloadRequired(payload.exp, '\"exp\" claim', 'exp')\n      isTimestamp(payload.auth_time, 'auth_time', !!options.maxAuthAge)\n      isPayloadString(payload.nonce, '\"nonce\" claim', 'nonce', !!options.nonce)\n      isPayloadString(payload.acr, '\"acr\" claim', 'acr')\n      isStringOrArrayOfStrings(payload.amr, 'amr')\n\n      if (options.nonce && payload.nonce !== options.nonce) {\n        throw new JWTClaimInvalid('unexpected \"nonce\" claim value', 'nonce', 'check_failed')\n      }\n\n      const tolerance = options.clockTolerance ? secs(options.clockTolerance) : 0\n\n      if (options.maxAuthAge) {\n        const maxAuthAgeSeconds = secs(options.maxAuthAge)\n        if (payload.auth_time + maxAuthAgeSeconds < unix - tolerance) {\n          throw new JWTClaimInvalid('\"auth_time\" claim timestamp check failed (too much time has elapsed since the last End-User authentication)', 'auth_time', 'check_failed')\n        }\n      }\n\n      if (Array.isArray(payload.aud) && payload.aud.length > 1 && payload.azp !== options.audience) {\n        throw new JWTClaimInvalid('unexpected \"azp\" claim value', 'azp', 'check_failed')\n      }\n\n      return result\n    }\n  },\n  LogoutToken: {},\n  AccessToken: {}\n}\n\ndefineLazyExportWithWarning(module.exports.LogoutToken, 'verify', 'jose.JWT.LogoutToken.verify', (token, key, options = {}) => {\n  validateCommonOptions(options, 'a Logout Token')\n\n  const result = verify(token, key, { ...options })\n  const payload = options.complete ? result.payload : result\n\n  isPayloadRequired(payload.iat, '\"iat\" claim', 'iat')\n  isPayloadRequired(payload.jti, '\"jti\" claim', 'jti')\n  isPayloadString(payload.sid, '\"sid\" claim', 'sid')\n\n  if (!('sid' in payload) && !('sub' in payload)) {\n    throw new JWTClaimInvalid('either \"sid\" or \"sub\" (or both) claims must be present')\n  }\n\n  if ('nonce' in payload) {\n    throw new JWTClaimInvalid('\"nonce\" claim is prohibited', 'nonce', 'prohibited')\n  }\n\n  if (!('events' in payload)) {\n    throw new JWTClaimInvalid('\"events\" claim is missing', 'events', 'missing')\n  }\n\n  if (!isObject(payload.events)) {\n    throw new JWTClaimInvalid('\"events\" claim must be an object', 'events', 'invalid')\n  }\n\n  if (!('http://schemas.openid.net/event/backchannel-logout' in payload.events)) {\n    throw new JWTClaimInvalid('\"http://schemas.openid.net/event/backchannel-logout\" member is missing in the \"events\" claim', 'events', 'invalid')\n  }\n\n  if (!isObject(payload.events['http://schemas.openid.net/event/backchannel-logout'])) {\n    throw new JWTClaimInvalid('\"http://schemas.openid.net/event/backchannel-logout\" member in the \"events\" claim must be an object', 'events', 'invalid')\n  }\n\n  return result\n})\n\ndefineLazyExportWithWarning(module.exports.AccessToken, 'verify', 'jose.JWT.AccessToken.verify', (token, key, options = {}) => {\n  validateCommonOptions(options, 'a JWT Access Token')\n\n  isOptionString(options.maxAuthAge, 'options.maxAuthAge')\n\n  const unix = epoch(options.now || new Date())\n  const typ = 'at+JWT'\n  const result = verify(token, key, { ...options, typ })\n  const payload = options.complete ? result.payload : result\n\n  isPayloadRequired(payload.iat, '\"iat\" claim', 'iat')\n  isPayloadRequired(payload.exp, '\"exp\" claim', 'exp')\n  isPayloadRequired(payload.sub, '\"sub\" claim', 'sub')\n  isPayloadRequired(payload.jti, '\"jti\" claim', 'jti')\n  isPayloadString(payload.client_id, '\"client_id\" claim', 'client_id', true)\n  isTimestamp(payload.auth_time, 'auth_time', !!options.maxAuthAge)\n  isPayloadString(payload.acr, '\"acr\" claim', 'acr')\n  isStringOrArrayOfStrings(payload.amr, 'amr')\n\n  const tolerance = options.clockTolerance ? secs(options.clockTolerance) : 0\n\n  if (options.maxAuthAge) {\n    const maxAuthAgeSeconds = secs(options.maxAuthAge)\n    if (payload.auth_time + maxAuthAgeSeconds < unix - tolerance) {\n      throw new JWTClaimInvalid('\"auth_time\" claim timestamp check failed (too much time has elapsed since the last End-User authentication)', 'auth_time', 'check_failed')\n    }\n  }\n\n  return result\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}