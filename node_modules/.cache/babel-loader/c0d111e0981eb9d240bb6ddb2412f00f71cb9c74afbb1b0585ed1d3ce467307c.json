{"ast":null,"code":"const stripe = require('stripe')(process.env.sk_test_51ObW35JuImlUjwClMcXxCRaL1p4Dz7H3BL7ySfC67MWmPjY0vEwmqjeqhfnjqrwI2qV6Q7Xi2PVFXN7uCluFHPu000vLRfrBXf);\nconst {\n  v4: uuidv4\n} = require('uuid');\nconst generateReservationId = () => {\n  return 'res-' + uuidv4();\n};\nmodule.exports = {\n  generateReservationId\n};\nconst createPaymentIntent = async (eventId, amount) => {\n  console.log(`Creating Payment Intent for Event ID: ${eventId} with Amount: ${amount}`);\n  try {\n    const paymentIntent = await stripe.paymentIntents.create({\n      amount,\n      currency: 'usd'\n    });\n    console.log(`Payment Intent Created: ${paymentIntent.id}`);\n    return paymentIntent.client_secret;\n  } catch (error) {\n    console.error('Error creating payment intent:', error);\n    throw error;\n  }\n};\n\n// Function to get reservation details\nconst getReservationDetails = (cart, totalCost) => {\n  const reservationDetails = {\n    reservationId: generateReservationId(),\n    items: cart,\n    total: totalCost,\n    user: 'currentUser'\n  };\n  console.log('Generated Reservation Details:', reservationDetails);\n  return reservationDetails;\n};\n\n// Function to handle proceeding to payment\nconst handleProceedToPayment = async () => {\n  try {\n    // Example: sending the first item's price for the payment\n    const response = await fetch('/create-payment-intent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        eventId: cart[0].eventId,\n        amount: cart[0].price\n      })\n    });\n    const {\n      clientSecret\n    } = await response.json();\n    if (clientSecret) {\n      navigate('/payment', {\n        state: {\n          clientSecret\n        }\n      });\n    } else {\n      throw new Error('Payment Intent failed');\n    }\n  } catch (error) {\n    console.error('Error processing payment:', error);\n  }\n};\nmodule.exports = {\n  getReservationDetails,\n  handleProceedToPayment,\n  generateReservationId,\n  createPaymentIntent\n};","map":{"version":3,"names":["stripe","require","process","env","sk_test_51ObW35JuImlUjwClMcXxCRaL1p4Dz7H3BL7ySfC67MWmPjY0vEwmqjeqhfnjqrwI2qV6Q7Xi2PVFXN7uCluFHPu000vLRfrBXf","v4","uuidv4","generateReservationId","module","exports","createPaymentIntent","eventId","amount","console","log","paymentIntent","paymentIntents","create","currency","id","client_secret","error","getReservationDetails","cart","totalCost","reservationDetails","reservationId","items","total","user","handleProceedToPayment","response","fetch","method","headers","body","JSON","stringify","price","clientSecret","json","navigate","state","Error"],"sources":["/Users/chamas/Final-Project/final-project/src/backend/handlers.js"],"sourcesContent":["const stripe = require('stripe')(process.env.sk_test_51ObW35JuImlUjwClMcXxCRaL1p4Dz7H3BL7ySfC67MWmPjY0vEwmqjeqhfnjqrwI2qV6Q7Xi2PVFXN7uCluFHPu000vLRfrBXf);\nconst { v4: uuidv4 } = require('uuid');\n\n\nconst generateReservationId = () => {\n  return 'res-' + uuidv4();\n};\n\nmodule.exports = { generateReservationId };\n\n\nconst createPaymentIntent = async (eventId, amount) => {\n  console.log(`Creating Payment Intent for Event ID: ${eventId} with Amount: ${amount}`);\n  try {\n    const paymentIntent = await stripe.paymentIntents.create({\n      amount,\n      currency: 'usd',\n    });\n    console.log(`Payment Intent Created: ${paymentIntent.id}`);\n    return paymentIntent.client_secret;\n  } catch (error) {\n    console.error('Error creating payment intent:', error);\n    throw error;\n  }\n};\n\n// Function to get reservation details\nconst getReservationDetails = (cart, totalCost) => {\n  const reservationDetails = {\n    reservationId: generateReservationId(),\n    items: cart,\n    total: totalCost,\n    user: 'currentUser',\n  };\n  console.log('Generated Reservation Details:', reservationDetails);\n  return reservationDetails;\n};\n\n// Function to handle proceeding to payment\nconst handleProceedToPayment = async () => {\n  try {\n    // Example: sending the first item's price for the payment\n    const response = await fetch('/create-payment-intent', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ eventId: cart[0].eventId, amount: cart[0].price }),\n    });\n\n    const { clientSecret } = await response.json();\n\n    if (clientSecret) {\n      navigate('/payment', { state: { clientSecret } });\n    } else {\n      throw new Error('Payment Intent failed');\n    }\n  } catch (error) {\n    console.error('Error processing payment:', error);\n  }\n};\n\n\nmodule.exports = {\n  getReservationDetails, \n  handleProceedToPayment,\n  generateReservationId,\n  createPaymentIntent\n};\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACC,OAAO,CAACC,GAAG,CAACC,2GAA2G,CAAC;AACzJ,MAAM;EAAEC,EAAE,EAAEC;AAAO,CAAC,GAAGL,OAAO,CAAC,MAAM,CAAC;AAGtC,MAAMM,qBAAqB,GAAGA,CAAA,KAAM;EAClC,OAAO,MAAM,GAAGD,MAAM,CAAC,CAAC;AAC1B,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAG;EAAEF;AAAsB,CAAC;AAG1C,MAAMG,mBAAmB,GAAG,MAAAA,CAAOC,OAAO,EAAEC,MAAM,KAAK;EACrDC,OAAO,CAACC,GAAG,CAAE,yCAAwCH,OAAQ,iBAAgBC,MAAO,EAAC,CAAC;EACtF,IAAI;IACF,MAAMG,aAAa,GAAG,MAAMf,MAAM,CAACgB,cAAc,CAACC,MAAM,CAAC;MACvDL,MAAM;MACNM,QAAQ,EAAE;IACZ,CAAC,CAAC;IACFL,OAAO,CAACC,GAAG,CAAE,2BAA0BC,aAAa,CAACI,EAAG,EAAC,CAAC;IAC1D,OAAOJ,aAAa,CAACK,aAAa;EACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMC,qBAAqB,GAAGA,CAACC,IAAI,EAAEC,SAAS,KAAK;EACjD,MAAMC,kBAAkB,GAAG;IACzBC,aAAa,EAAEnB,qBAAqB,CAAC,CAAC;IACtCoB,KAAK,EAAEJ,IAAI;IACXK,KAAK,EAAEJ,SAAS;IAChBK,IAAI,EAAE;EACR,CAAC;EACDhB,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEW,kBAAkB,CAAC;EACjE,OAAOA,kBAAkB;AAC3B,CAAC;;AAED;AACA,MAAMK,sBAAsB,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;MACrDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE1B,OAAO,EAAEY,IAAI,CAAC,CAAC,CAAC,CAACZ,OAAO;QAAEC,MAAM,EAAEW,IAAI,CAAC,CAAC,CAAC,CAACe;MAAM,CAAC;IAC1E,CAAC,CAAC;IAEF,MAAM;MAAEC;IAAa,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAE9C,IAAID,YAAY,EAAE;MAChBE,QAAQ,CAAC,UAAU,EAAE;QAAEC,KAAK,EAAE;UAAEH;QAAa;MAAE,CAAC,CAAC;IACnD,CAAC,MAAM;MACL,MAAM,IAAII,KAAK,CAAC,uBAAuB,CAAC;IAC1C;EACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACnD;AACF,CAAC;AAGDb,MAAM,CAACC,OAAO,GAAG;EACfa,qBAAqB;EACrBQ,sBAAsB;EACtBvB,qBAAqB;EACrBG;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}