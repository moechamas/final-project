{"ast":null,"code":"const base64url = require('../help/base64url');\nconst isDisjoint = require('../help/is_disjoint');\nconst isObject = require('../help/is_object');\nconst deepClone = require('../help/deep_clone');\nconst {\n  JWSInvalid\n} = require('../errors');\nconst {\n  sign\n} = require('../jwa');\nconst getKey = require('../help/get_key');\nconst serializers = require('./serializers');\nconst PROCESS_RECIPIENT = Symbol('PROCESS_RECIPIENT');\nclass Sign {\n  constructor(payload) {\n    if (typeof payload === 'string') {\n      payload = base64url.encode(payload);\n    } else if (Buffer.isBuffer(payload)) {\n      payload = base64url.encodeBuffer(payload);\n      this._binary = true;\n    } else if (isObject(payload)) {\n      payload = base64url.JSON.encode(payload);\n    } else {\n      throw new TypeError('payload argument must be a Buffer, string or an object');\n    }\n    this._payload = payload;\n    this._recipients = [];\n  }\n\n  /*\n   * @public\n   */\n  recipient(key, protectedHeader, unprotectedHeader) {\n    key = getKey(key);\n    if (protectedHeader !== undefined && !isObject(protectedHeader)) {\n      throw new TypeError('protectedHeader argument must be a plain object when provided');\n    }\n    if (unprotectedHeader !== undefined && !isObject(unprotectedHeader)) {\n      throw new TypeError('unprotectedHeader argument must be a plain object when provided');\n    }\n    if (!isDisjoint(protectedHeader, unprotectedHeader)) {\n      throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    this._recipients.push({\n      key,\n      protectedHeader: protectedHeader ? deepClone(protectedHeader) : undefined,\n      unprotectedHeader: unprotectedHeader ? deepClone(unprotectedHeader) : undefined\n    });\n    return this;\n  }\n\n  /*\n   * @private\n   */\n  [PROCESS_RECIPIENT](recipient, first) {\n    const {\n      key,\n      protectedHeader,\n      unprotectedHeader\n    } = recipient;\n    if (key.use === 'enc') {\n      throw new TypeError('a key with \"use\":\"enc\" is not usable for signing');\n    }\n    const joseHeader = {\n      protected: protectedHeader || {},\n      unprotected: unprotectedHeader || {}\n    };\n    let alg = joseHeader.protected.alg || joseHeader.unprotected.alg;\n    if (!alg) {\n      alg = key.alg || [...key.algorithms('sign')][0];\n      if (recipient.protectedHeader) {\n        joseHeader.protected.alg = recipient.protectedHeader.alg = alg;\n      } else {\n        joseHeader.protected = recipient.protectedHeader = {\n          alg\n        };\n      }\n    }\n    if (!alg) {\n      throw new JWSInvalid('could not resolve a usable \"alg\" for a recipient');\n    }\n    recipient.header = unprotectedHeader;\n    recipient.protected = Object.keys(joseHeader.protected).length ? base64url.JSON.encode(joseHeader.protected) : '';\n    if (first && joseHeader.protected.crit && joseHeader.protected.crit.includes('b64') && joseHeader.protected.b64 === false) {\n      if (this._binary) {\n        this._payload = base64url.decodeToBuffer(this._payload);\n      } else {\n        this._payload = base64url.decode(this._payload);\n      }\n    }\n    const data = Buffer.concat([Buffer.from(recipient.protected || ''), Buffer.from('.'), Buffer.from(this._payload)]);\n    recipient.signature = base64url.encodeBuffer(sign(alg, key, data));\n  }\n\n  /*\n   * @public\n   */\n  sign(serialization) {\n    const serializer = serializers[serialization];\n    if (!serializer) {\n      throw new TypeError('serialization must be one of \"compact\", \"flattened\", \"general\"');\n    }\n    if (!this._recipients.length) {\n      throw new JWSInvalid('missing recipients');\n    }\n    serializer.validate(this, this._recipients);\n    this._recipients.forEach((recipient, i) => {\n      this[PROCESS_RECIPIENT](recipient, i === 0);\n    });\n    return serializer(this._payload, this._recipients);\n  }\n}\nmodule.exports = Sign;","map":{"version":3,"names":["base64url","require","isDisjoint","isObject","deepClone","JWSInvalid","sign","getKey","serializers","PROCESS_RECIPIENT","Symbol","Sign","constructor","payload","encode","Buffer","isBuffer","encodeBuffer","_binary","JSON","TypeError","_payload","_recipients","recipient","key","protectedHeader","unprotectedHeader","undefined","push","first","use","joseHeader","protected","unprotected","alg","algorithms","header","Object","keys","length","crit","includes","b64","decodeToBuffer","decode","data","concat","from","signature","serialization","serializer","validate","forEach","i","module","exports"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/jws/sign.js"],"sourcesContent":["const base64url = require('../help/base64url')\nconst isDisjoint = require('../help/is_disjoint')\nconst isObject = require('../help/is_object')\nconst deepClone = require('../help/deep_clone')\nconst { JWSInvalid } = require('../errors')\nconst { sign } = require('../jwa')\nconst getKey = require('../help/get_key')\n\nconst serializers = require('./serializers')\n\nconst PROCESS_RECIPIENT = Symbol('PROCESS_RECIPIENT')\n\nclass Sign {\n  constructor (payload) {\n    if (typeof payload === 'string') {\n      payload = base64url.encode(payload)\n    } else if (Buffer.isBuffer(payload)) {\n      payload = base64url.encodeBuffer(payload)\n      this._binary = true\n    } else if (isObject(payload)) {\n      payload = base64url.JSON.encode(payload)\n    } else {\n      throw new TypeError('payload argument must be a Buffer, string or an object')\n    }\n\n    this._payload = payload\n    this._recipients = []\n  }\n\n  /*\n   * @public\n   */\n  recipient (key, protectedHeader, unprotectedHeader) {\n    key = getKey(key)\n\n    if (protectedHeader !== undefined && !isObject(protectedHeader)) {\n      throw new TypeError('protectedHeader argument must be a plain object when provided')\n    }\n\n    if (unprotectedHeader !== undefined && !isObject(unprotectedHeader)) {\n      throw new TypeError('unprotectedHeader argument must be a plain object when provided')\n    }\n\n    if (!isDisjoint(protectedHeader, unprotectedHeader)) {\n      throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint')\n    }\n\n    this._recipients.push({\n      key,\n      protectedHeader: protectedHeader ? deepClone(protectedHeader) : undefined,\n      unprotectedHeader: unprotectedHeader ? deepClone(unprotectedHeader) : undefined\n    })\n\n    return this\n  }\n\n  /*\n   * @private\n   */\n  [PROCESS_RECIPIENT] (recipient, first) {\n    const { key, protectedHeader, unprotectedHeader } = recipient\n\n    if (key.use === 'enc') {\n      throw new TypeError('a key with \"use\":\"enc\" is not usable for signing')\n    }\n\n    const joseHeader = {\n      protected: protectedHeader || {},\n      unprotected: unprotectedHeader || {}\n    }\n\n    let alg = joseHeader.protected.alg || joseHeader.unprotected.alg\n\n    if (!alg) {\n      alg = key.alg || [...key.algorithms('sign')][0]\n      if (recipient.protectedHeader) {\n        joseHeader.protected.alg = recipient.protectedHeader.alg = alg\n      } else {\n        joseHeader.protected = recipient.protectedHeader = { alg }\n      }\n    }\n\n    if (!alg) {\n      throw new JWSInvalid('could not resolve a usable \"alg\" for a recipient')\n    }\n\n    recipient.header = unprotectedHeader\n    recipient.protected = Object.keys(joseHeader.protected).length ? base64url.JSON.encode(joseHeader.protected) : ''\n\n    if (first && joseHeader.protected.crit && joseHeader.protected.crit.includes('b64') && joseHeader.protected.b64 === false) {\n      if (this._binary) {\n        this._payload = base64url.decodeToBuffer(this._payload)\n      } else {\n        this._payload = base64url.decode(this._payload)\n      }\n    }\n\n    const data = Buffer.concat([\n      Buffer.from(recipient.protected || ''),\n      Buffer.from('.'),\n      Buffer.from(this._payload)\n    ])\n\n    recipient.signature = base64url.encodeBuffer(sign(alg, key, data))\n  }\n\n  /*\n   * @public\n   */\n  sign (serialization) {\n    const serializer = serializers[serialization]\n    if (!serializer) {\n      throw new TypeError('serialization must be one of \"compact\", \"flattened\", \"general\"')\n    }\n\n    if (!this._recipients.length) {\n      throw new JWSInvalid('missing recipients')\n    }\n\n    serializer.validate(this, this._recipients)\n\n    this._recipients.forEach((recipient, i) => {\n      this[PROCESS_RECIPIENT](recipient, i === 0)\n    })\n\n    return serializer(this._payload, this._recipients)\n  }\n}\n\nmodule.exports = Sign\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}