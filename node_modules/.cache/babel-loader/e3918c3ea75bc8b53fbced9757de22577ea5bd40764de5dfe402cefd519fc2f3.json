{"ast":null,"code":"const {\n  JWKKeySupport,\n  JOSENotSupported\n} = require('../errors');\nconst {\n  KEY_MANAGEMENT_ENCRYPT,\n  KEY_MANAGEMENT_DECRYPT\n} = require('../help/consts');\nconst {\n  JWA,\n  JWK\n} = require('../registry');\n\n// sign, verify\nrequire('./hmac')(JWA, JWK);\nrequire('./ecdsa')(JWA, JWK);\nrequire('./eddsa')(JWA, JWK);\nrequire('./rsassa_pss')(JWA, JWK);\nrequire('./rsassa')(JWA, JWK);\nrequire('./none')(JWA);\n\n// encrypt, decrypt\nrequire('./aes_cbc_hmac_sha2')(JWA, JWK);\nrequire('./aes_gcm')(JWA, JWK);\n\n// wrapKey, unwrapKey\nrequire('./rsaes')(JWA, JWK);\nrequire('./aes_kw')(JWA, JWK);\nrequire('./aes_gcm_kw')(JWA, JWK);\n\n// deriveKey\nrequire('./pbes2')(JWA, JWK);\nrequire('./ecdh/dir')(JWA, JWK);\nrequire('./ecdh/kw')(JWA, JWK);\nconst check = (key, op, alg) => {\n  const cache = `_${op}_${alg}`;\n  let label;\n  let keyOp;\n  if (op === 'keyManagementEncrypt') {\n    label = 'key management (encryption)';\n    keyOp = KEY_MANAGEMENT_ENCRYPT;\n  } else if (op === 'keyManagementDecrypt') {\n    label = 'key management (decryption)';\n    keyOp = KEY_MANAGEMENT_DECRYPT;\n  }\n  if (cache in key) {\n    if (key[cache]) {\n      return;\n    }\n    throw new JWKKeySupport(`the key does not support ${alg} ${label || op} algorithm`);\n  }\n  let value = true;\n  if (!JWA[op].has(alg)) {\n    throw new JOSENotSupported(`unsupported ${label || op} alg: ${alg}`);\n  } else if (!key.algorithms(keyOp).has(alg)) {\n    value = false;\n  }\n  Object.defineProperty(key, cache, {\n    value,\n    enumerable: false\n  });\n  if (!value) {\n    return check(key, op, alg);\n  }\n};\nmodule.exports = {\n  check,\n  sign: (alg, key, payload) => {\n    check(key, 'sign', alg);\n    return JWA.sign.get(alg)(key, payload);\n  },\n  verify: (alg, key, payload, signature) => {\n    check(key, 'verify', alg);\n    return JWA.verify.get(alg)(key, payload, signature);\n  },\n  keyManagementEncrypt: (alg, key, payload, opts) => {\n    check(key, 'keyManagementEncrypt', alg);\n    return JWA.keyManagementEncrypt.get(alg)(key, payload, opts);\n  },\n  keyManagementDecrypt: (alg, key, payload, opts) => {\n    check(key, 'keyManagementDecrypt', alg);\n    return JWA.keyManagementDecrypt.get(alg)(key, payload, opts);\n  },\n  encrypt: (alg, key, cleartext, opts) => {\n    check(key, 'encrypt', alg);\n    return JWA.encrypt.get(alg)(key, cleartext, opts);\n  },\n  decrypt: (alg, key, ciphertext, opts) => {\n    check(key, 'decrypt', alg);\n    return JWA.decrypt.get(alg)(key, ciphertext, opts);\n  }\n};","map":{"version":3,"names":["JWKKeySupport","JOSENotSupported","require","KEY_MANAGEMENT_ENCRYPT","KEY_MANAGEMENT_DECRYPT","JWA","JWK","check","key","op","alg","cache","label","keyOp","value","has","algorithms","Object","defineProperty","enumerable","module","exports","sign","payload","get","verify","signature","keyManagementEncrypt","opts","keyManagementDecrypt","encrypt","cleartext","decrypt","ciphertext"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/jwa/index.js"],"sourcesContent":["const { JWKKeySupport, JOSENotSupported } = require('../errors')\nconst { KEY_MANAGEMENT_ENCRYPT, KEY_MANAGEMENT_DECRYPT } = require('../help/consts')\n\nconst { JWA, JWK } = require('../registry')\n\n// sign, verify\nrequire('./hmac')(JWA, JWK)\nrequire('./ecdsa')(JWA, JWK)\nrequire('./eddsa')(JWA, JWK)\nrequire('./rsassa_pss')(JWA, JWK)\nrequire('./rsassa')(JWA, JWK)\nrequire('./none')(JWA)\n\n// encrypt, decrypt\nrequire('./aes_cbc_hmac_sha2')(JWA, JWK)\nrequire('./aes_gcm')(JWA, JWK)\n\n// wrapKey, unwrapKey\nrequire('./rsaes')(JWA, JWK)\nrequire('./aes_kw')(JWA, JWK)\nrequire('./aes_gcm_kw')(JWA, JWK)\n\n// deriveKey\nrequire('./pbes2')(JWA, JWK)\nrequire('./ecdh/dir')(JWA, JWK)\nrequire('./ecdh/kw')(JWA, JWK)\n\nconst check = (key, op, alg) => {\n  const cache = `_${op}_${alg}`\n\n  let label\n  let keyOp\n  if (op === 'keyManagementEncrypt') {\n    label = 'key management (encryption)'\n    keyOp = KEY_MANAGEMENT_ENCRYPT\n  } else if (op === 'keyManagementDecrypt') {\n    label = 'key management (decryption)'\n    keyOp = KEY_MANAGEMENT_DECRYPT\n  }\n\n  if (cache in key) {\n    if (key[cache]) {\n      return\n    }\n    throw new JWKKeySupport(`the key does not support ${alg} ${label || op} algorithm`)\n  }\n\n  let value = true\n  if (!JWA[op].has(alg)) {\n    throw new JOSENotSupported(`unsupported ${label || op} alg: ${alg}`)\n  } else if (!key.algorithms(keyOp).has(alg)) {\n    value = false\n  }\n\n  Object.defineProperty(key, cache, { value, enumerable: false })\n\n  if (!value) {\n    return check(key, op, alg)\n  }\n}\n\nmodule.exports = {\n  check,\n  sign: (alg, key, payload) => {\n    check(key, 'sign', alg)\n    return JWA.sign.get(alg)(key, payload)\n  },\n  verify: (alg, key, payload, signature) => {\n    check(key, 'verify', alg)\n    return JWA.verify.get(alg)(key, payload, signature)\n  },\n  keyManagementEncrypt: (alg, key, payload, opts) => {\n    check(key, 'keyManagementEncrypt', alg)\n    return JWA.keyManagementEncrypt.get(alg)(key, payload, opts)\n  },\n  keyManagementDecrypt: (alg, key, payload, opts) => {\n    check(key, 'keyManagementDecrypt', alg)\n    return JWA.keyManagementDecrypt.get(alg)(key, payload, opts)\n  },\n  encrypt: (alg, key, cleartext, opts) => {\n    check(key, 'encrypt', alg)\n    return JWA.encrypt.get(alg)(key, cleartext, opts)\n  },\n  decrypt: (alg, key, ciphertext, opts) => {\n    check(key, 'decrypt', alg)\n    return JWA.decrypt.get(alg)(key, ciphertext, opts)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}