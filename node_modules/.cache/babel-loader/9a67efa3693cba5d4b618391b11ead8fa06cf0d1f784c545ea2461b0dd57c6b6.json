{"ast":null,"code":"var _jsxFileName = \"/Users/chamas/Final-Project/final-project/src/components/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    loginWithRedirect,\n    logout,\n    user,\n    isLoading\n  } = useAuth0();\n  const [isUserAuthenticated, setIsUserAuthenticated] = useState(false);\n  const [sessionId, setSessionId] = useState(null); // State to store the session ID\n\n  useEffect(() => {\n    setIsUserAuthenticated(isAuthenticated);\n  }, [isAuthenticated]);\n  useEffect(() => {\n    const initializeSession = async () => {\n      if (isAuthenticated && user) {\n        try {\n          const response = await fetch('http://localhost:3006/api/session', {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              email: user.email\n            })\n          });\n          if (!response.ok) {\n            throw new Error('Session initialization failed');\n          }\n          const {\n            sessionId\n          } = await response.json();\n          setSessionId(sessionId);\n          localStorage.setItem('sessionId', sessionId);\n          console.log('Retrieved and stored session ID:', sessionId);\n        } catch (error) {\n          console.error('Error initializing session:', error);\n        }\n      }\n    };\n    if (isAuthenticated) {\n      initializeSession();\n    }\n  }, [isAuthenticated, user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isUserAuthenticated,\n      loginWithRedirect,\n      logout,\n      user,\n      isLoading,\n      sessionId\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"4i2NL+zE+i/TbUwg/yPy8uEqWdI=\", false, function () {\n  return [useAuth0];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useAuth0","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","loginWithRedirect","logout","user","isLoading","isUserAuthenticated","setIsUserAuthenticated","sessionId","setSessionId","initializeSession","response","fetch","method","credentials","headers","body","JSON","stringify","email","ok","Error","json","localStorage","setItem","console","log","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/chamas/Final-Project/final-project/src/components/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const { isAuthenticated, loginWithRedirect, logout, user, isLoading } = useAuth0();\n  const [isUserAuthenticated, setIsUserAuthenticated] = useState(false);\n  const [sessionId, setSessionId] = useState(null); // State to store the session ID\n\n  useEffect(() => {\n    setIsUserAuthenticated(isAuthenticated);\n  }, [isAuthenticated]);\n\n  useEffect(() => {\n    const initializeSession = async () => {\n      if (isAuthenticated && user) {\n        try {\n          const response = await fetch('http://localhost:3006/api/session', {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email: user.email }),\n          });\n  \n          if (!response.ok) {\n            throw new Error('Session initialization failed');\n          }\n  \n          const { sessionId } = await response.json();\n          \n          setSessionId(sessionId);\n          \n          localStorage.setItem('sessionId', sessionId);\n          \n          console.log('Retrieved and stored session ID:', sessionId);\n        } catch (error) {\n          console.error('Error initializing session:', error);\n        }\n      }\n    };\n  \n    if (isAuthenticated) {\n      initializeSession();\n    }\n  }, [isAuthenticated, user]);\n\n  return (\n    <AuthContext.Provider value={{ isUserAuthenticated, loginWithRedirect, logout, user, isLoading, sessionId }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM;IAAEC,eAAe;IAAEC,iBAAiB;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC;EAClF,MAAM,CAACY,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElDD,SAAS,CAAC,MAAM;IACde,sBAAsB,CAACN,eAAe,CAAC;EACzC,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErBT,SAAS,CAAC,MAAM;IACd,MAAMkB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAIT,eAAe,IAAIG,IAAI,EAAE;QAC3B,IAAI;UACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;YAChEC,MAAM,EAAE,MAAM;YACdC,WAAW,EAAE,SAAS;YACtBC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEC,KAAK,EAAEf,IAAI,CAACe;YAAM,CAAC;UAC5C,CAAC,CAAC;UAEF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;UAClD;UAEA,MAAM;YAAEb;UAAU,CAAC,GAAG,MAAMG,QAAQ,CAACW,IAAI,CAAC,CAAC;UAE3Cb,YAAY,CAACD,SAAS,CAAC;UAEvBe,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEhB,SAAS,CAAC;UAE5CiB,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAElB,SAAS,CAAC;QAC5D,CAAC,CAAC,OAAOmB,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD;MACF;IACF,CAAC;IAED,IAAI1B,eAAe,EAAE;MACnBS,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACT,eAAe,EAAEG,IAAI,CAAC,CAAC;EAE3B,oBACER,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,mBAAmB;MAAEJ,iBAAiB;MAAEC,MAAM;MAAEC,IAAI;MAAEC,SAAS;MAAEG;IAAU,CAAE;IAAAT,QAAA,EACzGA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjC,EAAA,CAjDWF,YAAY;EAAA,QACiDJ,QAAQ;AAAA;AAAAwC,EAAA,GADrEpC,YAAY;AAmDzB,OAAO,MAAMqC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM7C,UAAU,CAACM,WAAW,CAAC;AAAA;AAACuC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}