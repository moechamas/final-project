{"ast":null,"code":"const {\n  promisify\n} = require('util');\nconst {\n  get: getClient\n} = require('../../client');\n\n// Remove any Back-Channel Logout tokens for this `sub`\nmodule.exports = async (req, config) => {\n  const {\n    issuer: {\n      issuer\n    }\n  } = await getClient(config);\n  const {\n    session,\n    backchannelLogout\n  } = config;\n  const store = backchannelLogout && backchannelLogout.store || session.store;\n  const destroy = promisify(store.destroy).bind(store);\n  await destroy(`${issuer}|${req.oidc.idTokenClaims.sub}`);\n};","map":{"version":3,"names":["promisify","require","get","getClient","module","exports","req","config","issuer","session","backchannelLogout","store","destroy","bind","oidc","idTokenClaims","sub"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/express-openid-connect/lib/hooks/backchannelLogout/onLogIn.js"],"sourcesContent":["const { promisify } = require('util');\nconst { get: getClient } = require('../../client');\n\n// Remove any Back-Channel Logout tokens for this `sub`\nmodule.exports = async (req, config) => {\n  const {\n    issuer: { issuer },\n  } = await getClient(config);\n  const { session, backchannelLogout } = config;\n  const store = (backchannelLogout && backchannelLogout.store) || session.store;\n  const destroy = promisify(store.destroy).bind(store);\n  await destroy(`${issuer}|${req.oidc.idTokenClaims.sub}`);\n};\n"],"mappings":"AAAA,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;AACrC,MAAM;EAAEC,GAAG,EAAEC;AAAU,CAAC,GAAGF,OAAO,CAAC,cAAc,CAAC;;AAElD;AACAG,MAAM,CAACC,OAAO,GAAG,OAAOC,GAAG,EAAEC,MAAM,KAAK;EACtC,MAAM;IACJC,MAAM,EAAE;MAAEA;IAAO;EACnB,CAAC,GAAG,MAAML,SAAS,CAACI,MAAM,CAAC;EAC3B,MAAM;IAAEE,OAAO;IAAEC;EAAkB,CAAC,GAAGH,MAAM;EAC7C,MAAMI,KAAK,GAAID,iBAAiB,IAAIA,iBAAiB,CAACC,KAAK,IAAKF,OAAO,CAACE,KAAK;EAC7E,MAAMC,OAAO,GAAGZ,SAAS,CAACW,KAAK,CAACC,OAAO,CAAC,CAACC,IAAI,CAACF,KAAK,CAAC;EACpD,MAAMC,OAAO,CAAE,GAAEJ,MAAO,IAAGF,GAAG,CAACQ,IAAI,CAACC,aAAa,CAACC,GAAI,EAAC,CAAC;AAC1D,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}