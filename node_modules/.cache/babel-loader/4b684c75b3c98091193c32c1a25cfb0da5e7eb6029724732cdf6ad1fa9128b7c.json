{"ast":null,"code":"var _jsxFileName = \"/Users/chamas/Final-Project/final-project/src/components/CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [totalCost, setTotalCost] = useState(0);\n  const addToCart = newItem => {\n    console.log(\"Adding item to cart\", newItem);\n    const existingItemIndex = cart.findIndex(item => item.eventId === newItem.eventId);\n    console.log(\"Existing item index\", existingItemIndex);\n    if (existingItemIndex > -1) {\n      console.log(\"Item exists, updating quantity\");\n      // Item exists, update the quantity\n      const updatedCart = cart.map((item, index) => {\n        if (index === existingItemIndex) {\n          return {\n            ...item,\n            quantity: item.quantity + 1\n          };\n        }\n        return item;\n      });\n      setCart(updatedCart);\n    } else {\n      console.log(\"Item does not exist, adding new item\");\n      // Item does not exist, add new item\n      setCart([...cart, {\n        ...newItem,\n        quantity: 1\n      }]);\n    }\n  };\n  const removeFromCart = eventId => {\n    const existingItemIndex = cart.findIndex(item => item.eventId === eventId);\n    if (existingItemIndex > -1 && cart[existingItemIndex].quantity > 1) {\n      // Decrement quantity\n      const updatedCart = cart.map((item, index) => {\n        if (index === existingItemIndex) {\n          return {\n            ...item,\n            quantity: item.quantity - 1\n          };\n        }\n        return item;\n      });\n      setCart(updatedCart);\n    } else {\n      // Remove item completely\n      const updatedCart = cart.filter(item => item.eventId !== eventId);\n      setCart(updatedCart);\n    }\n  };\n  useEffect(() => {\n    // Calculate the total cost whenever the cart changes\n    const total = cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    const updatedTotal = isNaN(total) ? 0 : total;\n    console.log('Total Cost:', updatedTotal);\n    setTotalCost(updatedTotal);\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      totalCost\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"VHo73zjNy6wE9tLd94aYTh14kHE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","totalCost","setTotalCost","addToCart","newItem","console","log","existingItemIndex","findIndex","item","eventId","updatedCart","map","index","quantity","removeFromCart","filter","total","reduce","acc","price","updatedTotal","isNaN","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chamas/Final-Project/final-project/src/components/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const [totalCost, setTotalCost] = useState(0);\n\n  const addToCart = (newItem) => {\n    console.log(\"Adding item to cart\", newItem);\n    const existingItemIndex = cart.findIndex(item => item.eventId === newItem.eventId);\n    console.log(\"Existing item index\", existingItemIndex);\n  \n    if (existingItemIndex > -1) {\n      console.log(\"Item exists, updating quantity\");\n      // Item exists, update the quantity\n      const updatedCart = cart.map((item, index) => {\n        if (index === existingItemIndex) {\n          return { ...item, quantity: item.quantity + 1 };\n        }\n        return item;\n      });\n      setCart(updatedCart);\n    } else {\n      console.log(\"Item does not exist, adding new item\");\n      // Item does not exist, add new item\n      setCart([...cart, { ...newItem, quantity: 1 }]);\n    }\n  };\n  \n\n  const removeFromCart = (eventId) => {\n    const existingItemIndex = cart.findIndex(item => item.eventId === eventId);\n    if (existingItemIndex > -1 && cart[existingItemIndex].quantity > 1) {\n      // Decrement quantity\n      const updatedCart = cart.map((item, index) => {\n        if (index === existingItemIndex) {\n          return { ...item, quantity: item.quantity - 1 };\n        }\n        return item;\n      });\n      setCart(updatedCart);\n    } else {\n      // Remove item completely\n      const updatedCart = cart.filter(item => item.eventId !== eventId);\n      setCart(updatedCart);\n    }\n  };\n\n  useEffect(() => {\n    // Calculate the total cost whenever the cart changes\n    const total = cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    const updatedTotal = isNaN(total) ? 0 : total; \n    console.log('Total Cost:', updatedTotal); \n    setTotalCost(updatedTotal);\n  }, [cart]);\n  \n  \n\n  return (\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, totalCost }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}