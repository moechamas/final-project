{"ast":null,"code":"const {\n  improvedDH\n} = require('../../help/runtime_support');\nif (improvedDH) {\n  const {\n    diffieHellman\n  } = require('crypto');\n  const {\n    KeyObject\n  } = require('../../help/key_object');\n  const importKey = require('../../jwk/import');\n  module.exports = ({\n    keyObject: privateKey\n  }, publicKey) => {\n    if (!(publicKey instanceof KeyObject)) {\n      ({\n        keyObject: publicKey\n      } = importKey(publicKey));\n    }\n    return diffieHellman({\n      privateKey,\n      publicKey\n    });\n  };\n} else {\n  const {\n    createECDH,\n    constants: {\n      POINT_CONVERSION_UNCOMPRESSED\n    }\n  } = require('crypto');\n  const base64url = require('../../help/base64url');\n  const crvToCurve = crv => {\n    switch (crv) {\n      case 'P-256':\n        return 'prime256v1';\n      case 'P-384':\n        return 'secp384r1';\n      case 'P-521':\n        return 'secp521r1';\n    }\n  };\n  const UNCOMPRESSED = Buffer.alloc(1, POINT_CONVERSION_UNCOMPRESSED);\n  const pubToBuffer = (x, y) => Buffer.concat([UNCOMPRESSED, base64url.decodeToBuffer(x), base64url.decodeToBuffer(y)]);\n  module.exports = ({\n    crv,\n    d\n  }, {\n    x,\n    y\n  }) => {\n    const curve = crvToCurve(crv);\n    const exchange = createECDH(curve);\n    exchange.setPrivateKey(base64url.decodeToBuffer(d));\n    return exchange.computeSecret(pubToBuffer(x, y));\n  };\n}","map":{"version":3,"names":["improvedDH","require","diffieHellman","KeyObject","importKey","module","exports","keyObject","privateKey","publicKey","createECDH","constants","POINT_CONVERSION_UNCOMPRESSED","base64url","crvToCurve","crv","UNCOMPRESSED","Buffer","alloc","pubToBuffer","x","y","concat","decodeToBuffer","d","curve","exchange","setPrivateKey","computeSecret"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/jwa/ecdh/compute_secret.js"],"sourcesContent":["const { improvedDH } = require('../../help/runtime_support')\n\nif (improvedDH) {\n  const { diffieHellman } = require('crypto')\n\n  const { KeyObject } = require('../../help/key_object')\n  const importKey = require('../../jwk/import')\n\n  module.exports = ({ keyObject: privateKey }, publicKey) => {\n    if (!(publicKey instanceof KeyObject)) {\n      ({ keyObject: publicKey } = importKey(publicKey))\n    }\n\n    return diffieHellman({ privateKey, publicKey })\n  }\n} else {\n  const { createECDH, constants: { POINT_CONVERSION_UNCOMPRESSED } } = require('crypto')\n\n  const base64url = require('../../help/base64url')\n\n  const crvToCurve = (crv) => {\n    switch (crv) {\n      case 'P-256':\n        return 'prime256v1'\n      case 'P-384':\n        return 'secp384r1'\n      case 'P-521':\n        return 'secp521r1'\n    }\n  }\n\n  const UNCOMPRESSED = Buffer.alloc(1, POINT_CONVERSION_UNCOMPRESSED)\n  const pubToBuffer = (x, y) => Buffer.concat([UNCOMPRESSED, base64url.decodeToBuffer(x), base64url.decodeToBuffer(y)])\n\n  module.exports = ({ crv, d }, { x, y }) => {\n    const curve = crvToCurve(crv)\n    const exchange = createECDH(curve)\n\n    exchange.setPrivateKey(base64url.decodeToBuffer(d))\n\n    return exchange.computeSecret(pubToBuffer(x, y))\n  }\n}\n"],"mappings":"AAAA,MAAM;EAAEA;AAAW,CAAC,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AAE5D,IAAID,UAAU,EAAE;EACd,MAAM;IAAEE;EAAc,CAAC,GAAGD,OAAO,CAAC,QAAQ,CAAC;EAE3C,MAAM;IAAEE;EAAU,CAAC,GAAGF,OAAO,CAAC,uBAAuB,CAAC;EACtD,MAAMG,SAAS,GAAGH,OAAO,CAAC,kBAAkB,CAAC;EAE7CI,MAAM,CAACC,OAAO,GAAG,CAAC;IAAEC,SAAS,EAAEC;EAAW,CAAC,EAAEC,SAAS,KAAK;IACzD,IAAI,EAAEA,SAAS,YAAYN,SAAS,CAAC,EAAE;MACrC,CAAC;QAAEI,SAAS,EAAEE;MAAU,CAAC,GAAGL,SAAS,CAACK,SAAS,CAAC;IAClD;IAEA,OAAOP,aAAa,CAAC;MAAEM,UAAU;MAAEC;IAAU,CAAC,CAAC;EACjD,CAAC;AACH,CAAC,MAAM;EACL,MAAM;IAAEC,UAAU;IAAEC,SAAS,EAAE;MAAEC;IAA8B;EAAE,CAAC,GAAGX,OAAO,CAAC,QAAQ,CAAC;EAEtF,MAAMY,SAAS,GAAGZ,OAAO,CAAC,sBAAsB,CAAC;EAEjD,MAAMa,UAAU,GAAIC,GAAG,IAAK;IAC1B,QAAQA,GAAG;MACT,KAAK,OAAO;QACV,OAAO,YAAY;MACrB,KAAK,OAAO;QACV,OAAO,WAAW;MACpB,KAAK,OAAO;QACV,OAAO,WAAW;IACtB;EACF,CAAC;EAED,MAAMC,YAAY,GAAGC,MAAM,CAACC,KAAK,CAAC,CAAC,EAAEN,6BAA6B,CAAC;EACnE,MAAMO,WAAW,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAKJ,MAAM,CAACK,MAAM,CAAC,CAACN,YAAY,EAAEH,SAAS,CAACU,cAAc,CAACH,CAAC,CAAC,EAAEP,SAAS,CAACU,cAAc,CAACF,CAAC,CAAC,CAAC,CAAC;EAErHhB,MAAM,CAACC,OAAO,GAAG,CAAC;IAAES,GAAG;IAAES;EAAE,CAAC,EAAE;IAAEJ,CAAC;IAAEC;EAAE,CAAC,KAAK;IACzC,MAAMI,KAAK,GAAGX,UAAU,CAACC,GAAG,CAAC;IAC7B,MAAMW,QAAQ,GAAGhB,UAAU,CAACe,KAAK,CAAC;IAElCC,QAAQ,CAACC,aAAa,CAACd,SAAS,CAACU,cAAc,CAACC,CAAC,CAAC,CAAC;IAEnD,OAAOE,QAAQ,CAACE,aAAa,CAACT,WAAW,CAACC,CAAC,EAAEC,CAAC,CAAC,CAAC;EAClD,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}