{"ast":null,"code":"const base64url = require('base64url');\nconst debug = require('../debug')('getLoginState');\n\n/**\n * Generate the state value for use during login transactions. It is used to store the intended\n * return URL after the user authenticates. State is not used to carry unique PRNG values here\n * because the library utilizes either nonce or PKCE for CSRF protection.\n *\n * @param {RequestHandler} req\n * @param {object} options\n *\n * @return {object}\n */\nfunction defaultState(req, options) {\n  const state = {\n    returnTo: options.returnTo || req.originalUrl\n  };\n  debug('adding default state %O', state);\n  return state;\n}\n\n/**\n * Prepare a state object to send.\n *\n * @param {object} stateObject\n *\n * @return {string}\n */\nfunction encodeState(stateObject = {}) {\n  // this filters out nonce, code_verifier, and max_age from the state object so that the values are\n  // only stored in its dedicated transient cookie\n  const {\n    nonce,\n    code_verifier,\n    max_age,\n    ...filteredState\n  } = stateObject; // eslint-disable-line no-unused-vars\n  return base64url.encode(JSON.stringify(filteredState));\n}\n\n/**\n * Decode a state value.\n *\n * @param {string} stateValue\n *\n * @return {object}\n */\nfunction decodeState(stateValue) {\n  try {\n    return JSON.parse(base64url.decode(stateValue));\n  } catch (e) {\n    return false;\n  }\n}\nmodule.exports.defaultState = defaultState;\nmodule.exports.encodeState = encodeState;\nmodule.exports.decodeState = decodeState;","map":{"version":3,"names":["base64url","require","debug","defaultState","req","options","state","returnTo","originalUrl","encodeState","stateObject","nonce","code_verifier","max_age","filteredState","encode","JSON","stringify","decodeState","stateValue","parse","decode","e","module","exports"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/express-openid-connect/lib/hooks/getLoginState.js"],"sourcesContent":["const base64url = require('base64url');\nconst debug = require('../debug')('getLoginState');\n\n/**\n * Generate the state value for use during login transactions. It is used to store the intended\n * return URL after the user authenticates. State is not used to carry unique PRNG values here\n * because the library utilizes either nonce or PKCE for CSRF protection.\n *\n * @param {RequestHandler} req\n * @param {object} options\n *\n * @return {object}\n */\nfunction defaultState(req, options) {\n  const state = { returnTo: options.returnTo || req.originalUrl };\n  debug('adding default state %O', state);\n  return state;\n}\n\n/**\n * Prepare a state object to send.\n *\n * @param {object} stateObject\n *\n * @return {string}\n */\nfunction encodeState(stateObject = {}) {\n  // this filters out nonce, code_verifier, and max_age from the state object so that the values are\n  // only stored in its dedicated transient cookie\n  const { nonce, code_verifier, max_age, ...filteredState } = stateObject; // eslint-disable-line no-unused-vars\n  return base64url.encode(JSON.stringify(filteredState));\n}\n\n/**\n * Decode a state value.\n *\n * @param {string} stateValue\n *\n * @return {object}\n */\nfunction decodeState(stateValue) {\n  try {\n    return JSON.parse(base64url.decode(stateValue));\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports.defaultState = defaultState;\nmodule.exports.encodeState = encodeState;\nmodule.exports.decodeState = decodeState;\n"],"mappings":"AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AACtC,MAAMC,KAAK,GAAGD,OAAO,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,YAAYA,CAACC,GAAG,EAAEC,OAAO,EAAE;EAClC,MAAMC,KAAK,GAAG;IAAEC,QAAQ,EAAEF,OAAO,CAACE,QAAQ,IAAIH,GAAG,CAACI;EAAY,CAAC;EAC/DN,KAAK,CAAC,yBAAyB,EAAEI,KAAK,CAAC;EACvC,OAAOA,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,WAAWA,CAACC,WAAW,GAAG,CAAC,CAAC,EAAE;EACrC;EACA;EACA,MAAM;IAAEC,KAAK;IAAEC,aAAa;IAAEC,OAAO;IAAE,GAAGC;EAAc,CAAC,GAAGJ,WAAW,CAAC,CAAC;EACzE,OAAOV,SAAS,CAACe,MAAM,CAACC,IAAI,CAACC,SAAS,CAACH,aAAa,CAAC,CAAC;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,WAAWA,CAACC,UAAU,EAAE;EAC/B,IAAI;IACF,OAAOH,IAAI,CAACI,KAAK,CAACpB,SAAS,CAACqB,MAAM,CAACF,UAAU,CAAC,CAAC;EACjD,CAAC,CAAC,OAAOG,CAAC,EAAE;IACV,OAAO,KAAK;EACd;AACF;AAEAC,MAAM,CAACC,OAAO,CAACrB,YAAY,GAAGA,YAAY;AAC1CoB,MAAM,CAACC,OAAO,CAACf,WAAW,GAAGA,WAAW;AACxCc,MAAM,CAACC,OAAO,CAACN,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}