{"ast":null,"code":"const {\n  createHmac\n} = require('crypto');\nconst {\n  KEYOBJECT\n} = require('../help/consts');\nconst timingSafeEqual = require('../help/timing_safe_equal');\nconst resolveNodeAlg = require('../help/node_alg');\nconst {\n  asInput\n} = require('../help/key_object');\nconst sign = (jwaAlg, hmacAlg, {\n  [KEYOBJECT]: keyObject\n}, payload) => {\n  const hmac = createHmac(hmacAlg, asInput(keyObject, false));\n  hmac.update(payload);\n  return hmac.digest();\n};\nconst verify = (jwaAlg, hmacAlg, key, payload, signature) => {\n  const expected = sign(jwaAlg, hmacAlg, key, payload);\n  const actual = signature;\n  return timingSafeEqual(actual, expected);\n};\nmodule.exports = (JWA, JWK) => {\n  ['HS256', 'HS384', 'HS512'].forEach(jwaAlg => {\n    const hmacAlg = resolveNodeAlg(jwaAlg);\n    JWA.sign.set(jwaAlg, sign.bind(undefined, jwaAlg, hmacAlg));\n    JWA.verify.set(jwaAlg, verify.bind(undefined, jwaAlg, hmacAlg));\n    JWK.oct.sign[jwaAlg] = JWK.oct.verify[jwaAlg] = key => key.use === 'sig' || key.use === undefined;\n  });\n};","map":{"version":3,"names":["createHmac","require","KEYOBJECT","timingSafeEqual","resolveNodeAlg","asInput","sign","jwaAlg","hmacAlg","keyObject","payload","hmac","update","digest","verify","key","signature","expected","actual","module","exports","JWA","JWK","forEach","set","bind","undefined","oct","use"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/jwa/hmac.js"],"sourcesContent":["const { createHmac } = require('crypto')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst timingSafeEqual = require('../help/timing_safe_equal')\nconst resolveNodeAlg = require('../help/node_alg')\nconst { asInput } = require('../help/key_object')\n\nconst sign = (jwaAlg, hmacAlg, { [KEYOBJECT]: keyObject }, payload) => {\n  const hmac = createHmac(hmacAlg, asInput(keyObject, false))\n  hmac.update(payload)\n  return hmac.digest()\n}\n\nconst verify = (jwaAlg, hmacAlg, key, payload, signature) => {\n  const expected = sign(jwaAlg, hmacAlg, key, payload)\n  const actual = signature\n\n  return timingSafeEqual(actual, expected)\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['HS256', 'HS384', 'HS512'].forEach((jwaAlg) => {\n    const hmacAlg = resolveNodeAlg(jwaAlg)\n    JWA.sign.set(jwaAlg, sign.bind(undefined, jwaAlg, hmacAlg))\n    JWA.verify.set(jwaAlg, verify.bind(undefined, jwaAlg, hmacAlg))\n    JWK.oct.sign[jwaAlg] = JWK.oct.verify[jwaAlg] = key => key.use === 'sig' || key.use === undefined\n  })\n}\n"],"mappings":"AAAA,MAAM;EAAEA;AAAW,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAExC,MAAM;EAAEC;AAAU,CAAC,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC/C,MAAME,eAAe,GAAGF,OAAO,CAAC,2BAA2B,CAAC;AAC5D,MAAMG,cAAc,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAClD,MAAM;EAAEI;AAAQ,CAAC,GAAGJ,OAAO,CAAC,oBAAoB,CAAC;AAEjD,MAAMK,IAAI,GAAGA,CAACC,MAAM,EAAEC,OAAO,EAAE;EAAE,CAACN,SAAS,GAAGO;AAAU,CAAC,EAAEC,OAAO,KAAK;EACrE,MAAMC,IAAI,GAAGX,UAAU,CAACQ,OAAO,EAAEH,OAAO,CAACI,SAAS,EAAE,KAAK,CAAC,CAAC;EAC3DE,IAAI,CAACC,MAAM,CAACF,OAAO,CAAC;EACpB,OAAOC,IAAI,CAACE,MAAM,CAAC,CAAC;AACtB,CAAC;AAED,MAAMC,MAAM,GAAGA,CAACP,MAAM,EAAEC,OAAO,EAAEO,GAAG,EAAEL,OAAO,EAAEM,SAAS,KAAK;EAC3D,MAAMC,QAAQ,GAAGX,IAAI,CAACC,MAAM,EAAEC,OAAO,EAAEO,GAAG,EAAEL,OAAO,CAAC;EACpD,MAAMQ,MAAM,GAAGF,SAAS;EAExB,OAAOb,eAAe,CAACe,MAAM,EAAED,QAAQ,CAAC;AAC1C,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC7B,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAACC,OAAO,CAAEhB,MAAM,IAAK;IAC9C,MAAMC,OAAO,GAAGJ,cAAc,CAACG,MAAM,CAAC;IACtCc,GAAG,CAACf,IAAI,CAACkB,GAAG,CAACjB,MAAM,EAAED,IAAI,CAACmB,IAAI,CAACC,SAAS,EAAEnB,MAAM,EAAEC,OAAO,CAAC,CAAC;IAC3Da,GAAG,CAACP,MAAM,CAACU,GAAG,CAACjB,MAAM,EAAEO,MAAM,CAACW,IAAI,CAACC,SAAS,EAAEnB,MAAM,EAAEC,OAAO,CAAC,CAAC;IAC/Dc,GAAG,CAACK,GAAG,CAACrB,IAAI,CAACC,MAAM,CAAC,GAAGe,GAAG,CAACK,GAAG,CAACb,MAAM,CAACP,MAAM,CAAC,GAAGQ,GAAG,IAAIA,GAAG,CAACa,GAAG,KAAK,KAAK,IAAIb,GAAG,CAACa,GAAG,KAAKF,SAAS;EACnG,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}