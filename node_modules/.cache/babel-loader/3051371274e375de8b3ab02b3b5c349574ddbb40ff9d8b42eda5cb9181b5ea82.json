{"ast":null,"code":"const {\n  deflateRawSync\n} = require('zlib');\nconst {\n  KEYOBJECT\n} = require('../help/consts');\nconst generateIV = require('../help/generate_iv');\nconst base64url = require('../help/base64url');\nconst getKey = require('../help/get_key');\nconst isObject = require('../help/is_object');\nconst {\n  createSecretKey\n} = require('../help/key_object');\nconst deepClone = require('../help/deep_clone');\nconst importKey = require('../jwk/import');\nconst {\n  JWEInvalid\n} = require('../errors');\nconst {\n  check,\n  keyManagementEncrypt,\n  encrypt\n} = require('../jwa');\nconst serializers = require('./serializers');\nconst generateCEK = require('./generate_cek');\nconst validateHeaders = require('./validate_headers');\nconst PROCESS_RECIPIENT = Symbol('PROCESS_RECIPIENT');\nclass Encrypt {\n  constructor(cleartext, protectedHeader, aad, unprotectedHeader) {\n    if (!Buffer.isBuffer(cleartext) && typeof cleartext !== 'string') {\n      throw new TypeError('cleartext argument must be a Buffer or a string');\n    }\n    cleartext = Buffer.from(cleartext);\n    if (aad !== undefined && !Buffer.isBuffer(aad) && typeof aad !== 'string') {\n      throw new TypeError('aad argument must be a Buffer or a string when provided');\n    }\n    aad = aad ? Buffer.from(aad) : undefined;\n    if (protectedHeader !== undefined && !isObject(protectedHeader)) {\n      throw new TypeError('protectedHeader argument must be a plain object when provided');\n    }\n    if (unprotectedHeader !== undefined && !isObject(unprotectedHeader)) {\n      throw new TypeError('unprotectedHeader argument must be a plain object when provided');\n    }\n    this._recipients = [];\n    this._cleartext = cleartext;\n    this._aad = aad;\n    this._unprotected = unprotectedHeader ? deepClone(unprotectedHeader) : undefined;\n    this._protected = protectedHeader ? deepClone(protectedHeader) : undefined;\n  }\n\n  /*\n   * @public\n   */\n  recipient(key, header) {\n    key = getKey(key);\n    if (header !== undefined && !isObject(header)) {\n      throw new TypeError('header argument must be a plain object when provided');\n    }\n    this._recipients.push({\n      key,\n      header: header ? deepClone(header) : undefined\n    });\n    return this;\n  }\n\n  /*\n   * @private\n   */\n  [PROCESS_RECIPIENT](recipient) {\n    const unprotectedHeader = this._unprotected;\n    const protectedHeader = this._protected;\n    const {\n      length: recipientCount\n    } = this._recipients;\n    const jweHeader = {\n      ...protectedHeader,\n      ...unprotectedHeader,\n      ...recipient.header\n    };\n    const {\n      key\n    } = recipient;\n    const enc = jweHeader.enc;\n    let alg = jweHeader.alg;\n    if (key.use === 'sig') {\n      throw new TypeError('a key with \"use\":\"sig\" is not usable for encryption');\n    }\n    if (alg === 'dir') {\n      check(key, 'encrypt', enc);\n    } else if (alg) {\n      check(key, 'keyManagementEncrypt', alg);\n    } else {\n      alg = key.alg || [...key.algorithms('wrapKey')][0] || [...key.algorithms('deriveKey')][0];\n      if (alg === 'ECDH-ES' && recipientCount !== 1) {\n        alg = [...key.algorithms('deriveKey')][1];\n      }\n      if (!alg) {\n        throw new JWEInvalid('could not resolve a usable \"alg\" for a recipient');\n      }\n      if (recipientCount === 1) {\n        if (protectedHeader) {\n          protectedHeader.alg = alg;\n        } else {\n          this._protected = {\n            alg\n          };\n        }\n      } else {\n        if (recipient.header) {\n          recipient.header.alg = alg;\n        } else {\n          recipient.header = {\n            alg\n          };\n        }\n      }\n    }\n    let wrapped;\n    let generatedHeader;\n    if (key.kty === 'oct' && alg === 'dir') {\n      this._cek = importKey(key[KEYOBJECT], {\n        use: 'enc',\n        alg: enc\n      });\n    } else {\n      check(this._cek, 'encrypt', enc);\n      ({\n        wrapped,\n        header: generatedHeader\n      } = keyManagementEncrypt(alg, key, this._cek[KEYOBJECT].export(), {\n        enc,\n        alg\n      }));\n      if (alg === 'ECDH-ES') {\n        this._cek = importKey(createSecretKey(wrapped), {\n          use: 'enc',\n          alg: enc\n        });\n      }\n    }\n    if (alg === 'dir' || alg === 'ECDH-ES') {\n      recipient.encrypted_key = '';\n    } else {\n      recipient.encrypted_key = base64url.encodeBuffer(wrapped);\n    }\n    if (generatedHeader) {\n      recipient.generatedHeader = generatedHeader;\n    }\n  }\n\n  /*\n   * @public\n   */\n  encrypt(serialization) {\n    const serializer = serializers[serialization];\n    if (!serializer) {\n      throw new TypeError('serialization must be one of \"compact\", \"flattened\", \"general\"');\n    }\n    if (!this._recipients.length) {\n      throw new JWEInvalid('missing recipients');\n    }\n    serializer.validate(this._protected, this._unprotected, this._aad, this._recipients);\n    let enc = validateHeaders(this._protected, this._unprotected, this._recipients, false, this._protected ? this._protected.crit : undefined);\n    if (!enc) {\n      enc = 'A128CBC-HS256';\n      if (this._protected) {\n        this._protected.enc = enc;\n      } else {\n        this._protected = {\n          enc\n        };\n      }\n    }\n    const final = {};\n    this._cek = generateCEK(enc);\n    for (const recipient of this._recipients) {\n      this[PROCESS_RECIPIENT](recipient);\n    }\n    const iv = generateIV(enc);\n    final.iv = base64url.encodeBuffer(iv);\n    if (this._recipients.length === 1 && this._recipients[0].generatedHeader) {\n      const [{\n        generatedHeader\n      }] = this._recipients;\n      delete this._recipients[0].generatedHeader;\n      this._protected = {\n        ...this._protected,\n        ...generatedHeader\n      };\n    }\n    if (this._protected) {\n      final.protected = base64url.JSON.encode(this._protected);\n    }\n    final.unprotected = this._unprotected;\n    let aad;\n    if (this._aad) {\n      final.aad = base64url.encode(this._aad);\n      aad = Buffer.concat([Buffer.from(final.protected || ''), Buffer.from('.'), Buffer.from(final.aad)]);\n    } else {\n      aad = Buffer.from(final.protected || '');\n    }\n    let cleartext = this._cleartext;\n    if (this._protected && 'zip' in this._protected) {\n      cleartext = deflateRawSync(cleartext);\n    }\n    const {\n      ciphertext,\n      tag\n    } = encrypt(enc, this._cek, cleartext, {\n      iv,\n      aad\n    });\n    final.tag = base64url.encodeBuffer(tag);\n    final.ciphertext = base64url.encodeBuffer(ciphertext);\n    return serializer(final, this._recipients);\n  }\n}\nmodule.exports = Encrypt;","map":{"version":3,"names":["deflateRawSync","require","KEYOBJECT","generateIV","base64url","getKey","isObject","createSecretKey","deepClone","importKey","JWEInvalid","check","keyManagementEncrypt","encrypt","serializers","generateCEK","validateHeaders","PROCESS_RECIPIENT","Symbol","Encrypt","constructor","cleartext","protectedHeader","aad","unprotectedHeader","Buffer","isBuffer","TypeError","from","undefined","_recipients","_cleartext","_aad","_unprotected","_protected","recipient","key","header","push","length","recipientCount","jweHeader","enc","alg","use","algorithms","wrapped","generatedHeader","kty","_cek","export","encrypted_key","encodeBuffer","serialization","serializer","validate","crit","final","iv","protected","JSON","encode","unprotected","concat","ciphertext","tag","module","exports"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/jwe/encrypt.js"],"sourcesContent":["const { deflateRawSync } = require('zlib')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst generateIV = require('../help/generate_iv')\nconst base64url = require('../help/base64url')\nconst getKey = require('../help/get_key')\nconst isObject = require('../help/is_object')\nconst { createSecretKey } = require('../help/key_object')\nconst deepClone = require('../help/deep_clone')\nconst importKey = require('../jwk/import')\nconst { JWEInvalid } = require('../errors')\nconst { check, keyManagementEncrypt, encrypt } = require('../jwa')\n\nconst serializers = require('./serializers')\nconst generateCEK = require('./generate_cek')\nconst validateHeaders = require('./validate_headers')\n\nconst PROCESS_RECIPIENT = Symbol('PROCESS_RECIPIENT')\n\nclass Encrypt {\n  constructor (cleartext, protectedHeader, aad, unprotectedHeader) {\n    if (!Buffer.isBuffer(cleartext) && typeof cleartext !== 'string') {\n      throw new TypeError('cleartext argument must be a Buffer or a string')\n    }\n    cleartext = Buffer.from(cleartext)\n\n    if (aad !== undefined && !Buffer.isBuffer(aad) && typeof aad !== 'string') {\n      throw new TypeError('aad argument must be a Buffer or a string when provided')\n    }\n    aad = aad ? Buffer.from(aad) : undefined\n\n    if (protectedHeader !== undefined && !isObject(protectedHeader)) {\n      throw new TypeError('protectedHeader argument must be a plain object when provided')\n    }\n\n    if (unprotectedHeader !== undefined && !isObject(unprotectedHeader)) {\n      throw new TypeError('unprotectedHeader argument must be a plain object when provided')\n    }\n\n    this._recipients = []\n    this._cleartext = cleartext\n    this._aad = aad\n    this._unprotected = unprotectedHeader ? deepClone(unprotectedHeader) : undefined\n    this._protected = protectedHeader ? deepClone(protectedHeader) : undefined\n  }\n\n  /*\n   * @public\n   */\n  recipient (key, header) {\n    key = getKey(key)\n\n    if (header !== undefined && !isObject(header)) {\n      throw new TypeError('header argument must be a plain object when provided')\n    }\n\n    this._recipients.push({\n      key,\n      header: header ? deepClone(header) : undefined\n    })\n\n    return this\n  }\n\n  /*\n   * @private\n   */\n  [PROCESS_RECIPIENT] (recipient) {\n    const unprotectedHeader = this._unprotected\n    const protectedHeader = this._protected\n    const { length: recipientCount } = this._recipients\n\n    const jweHeader = {\n      ...protectedHeader,\n      ...unprotectedHeader,\n      ...recipient.header\n    }\n    const { key } = recipient\n\n    const enc = jweHeader.enc\n    let alg = jweHeader.alg\n\n    if (key.use === 'sig') {\n      throw new TypeError('a key with \"use\":\"sig\" is not usable for encryption')\n    }\n\n    if (alg === 'dir') {\n      check(key, 'encrypt', enc)\n    } else if (alg) {\n      check(key, 'keyManagementEncrypt', alg)\n    } else {\n      alg = key.alg || [...key.algorithms('wrapKey')][0] || [...key.algorithms('deriveKey')][0]\n\n      if (alg === 'ECDH-ES' && recipientCount !== 1) {\n        alg = [...key.algorithms('deriveKey')][1]\n      }\n\n      if (!alg) {\n        throw new JWEInvalid('could not resolve a usable \"alg\" for a recipient')\n      }\n\n      if (recipientCount === 1) {\n        if (protectedHeader) {\n          protectedHeader.alg = alg\n        } else {\n          this._protected = { alg }\n        }\n      } else {\n        if (recipient.header) {\n          recipient.header.alg = alg\n        } else {\n          recipient.header = { alg }\n        }\n      }\n    }\n\n    let wrapped\n    let generatedHeader\n\n    if (key.kty === 'oct' && alg === 'dir') {\n      this._cek = importKey(key[KEYOBJECT], { use: 'enc', alg: enc })\n    } else {\n      check(this._cek, 'encrypt', enc)\n      ;({ wrapped, header: generatedHeader } = keyManagementEncrypt(alg, key, this._cek[KEYOBJECT].export(), { enc, alg }))\n      if (alg === 'ECDH-ES') {\n        this._cek = importKey(createSecretKey(wrapped), { use: 'enc', alg: enc })\n      }\n    }\n\n    if (alg === 'dir' || alg === 'ECDH-ES') {\n      recipient.encrypted_key = ''\n    } else {\n      recipient.encrypted_key = base64url.encodeBuffer(wrapped)\n    }\n\n    if (generatedHeader) {\n      recipient.generatedHeader = generatedHeader\n    }\n  }\n\n  /*\n   * @public\n   */\n  encrypt (serialization) {\n    const serializer = serializers[serialization]\n    if (!serializer) {\n      throw new TypeError('serialization must be one of \"compact\", \"flattened\", \"general\"')\n    }\n\n    if (!this._recipients.length) {\n      throw new JWEInvalid('missing recipients')\n    }\n\n    serializer.validate(this._protected, this._unprotected, this._aad, this._recipients)\n\n    let enc = validateHeaders(this._protected, this._unprotected, this._recipients, false, this._protected ? this._protected.crit : undefined)\n    if (!enc) {\n      enc = 'A128CBC-HS256'\n      if (this._protected) {\n        this._protected.enc = enc\n      } else {\n        this._protected = { enc }\n      }\n    }\n    const final = {}\n    this._cek = generateCEK(enc)\n\n    for (const recipient of this._recipients) {\n      this[PROCESS_RECIPIENT](recipient)\n    }\n\n    const iv = generateIV(enc)\n    final.iv = base64url.encodeBuffer(iv)\n\n    if (this._recipients.length === 1 && this._recipients[0].generatedHeader) {\n      const [{ generatedHeader }] = this._recipients\n      delete this._recipients[0].generatedHeader\n      this._protected = {\n        ...this._protected,\n        ...generatedHeader\n      }\n    }\n\n    if (this._protected) {\n      final.protected = base64url.JSON.encode(this._protected)\n    }\n    final.unprotected = this._unprotected\n\n    let aad\n    if (this._aad) {\n      final.aad = base64url.encode(this._aad)\n      aad = Buffer.concat([\n        Buffer.from(final.protected || ''),\n        Buffer.from('.'),\n        Buffer.from(final.aad)\n      ])\n    } else {\n      aad = Buffer.from(final.protected || '')\n    }\n\n    let cleartext = this._cleartext\n    if (this._protected && 'zip' in this._protected) {\n      cleartext = deflateRawSync(cleartext)\n    }\n\n    const { ciphertext, tag } = encrypt(enc, this._cek, cleartext, { iv, aad })\n    final.tag = base64url.encodeBuffer(tag)\n    final.ciphertext = base64url.encodeBuffer(ciphertext)\n\n    return serializer(final, this._recipients)\n  }\n}\n\nmodule.exports = Encrypt\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}