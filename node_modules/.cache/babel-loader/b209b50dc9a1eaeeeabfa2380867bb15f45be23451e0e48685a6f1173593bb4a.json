{"ast":null,"code":"const {\n  inherits\n} = require('util');\nconst {\n  Reporter\n} = require('../base/reporter');\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {\n  if (data instanceof DecoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' && Buffer.isBuffer(data.base) && data.constructor.name === 'DecoderBuffer' && typeof data.offset === 'number' && typeof data.length === 'number' && typeof data.save === 'function' && typeof data.restore === 'function' && typeof data.isEmpty === 'function' && typeof data.readUInt8 === 'function' && typeof data.skip === 'function' && typeof data.raw === 'function';\n  return isCompatible;\n};\nDecoderBuffer.prototype.save = function save() {\n  return {\n    offset: this.offset,\n    reporter: Reporter.prototype.save.call(this)\n  };\n};\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  const res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n  return res;\n};\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length) {\n    return this.base.readUInt8(this.offset++, true);\n  } else {\n    return this.error(fail || 'DecoderBuffer overrun');\n  }\n};\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length)) {\n    return this.error(fail || 'DecoderBuffer overrun');\n  }\n  const res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n};\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n};\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function (item) {\n      if (!EncoderBuffer.isEncoderBuffer(item)) {\n        item = new EncoderBuffer(item, reporter);\n      }\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(value >= 0 && value <= 0xff)) {\n      return reporter.error('non-byte EncoderBuffer value');\n    }\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error(`Unsupported type: ${typeof value}`);\n  }\n}\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {\n  if (data instanceof EncoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' && data.constructor.name === 'EncoderBuffer' && typeof data.length === 'number' && typeof data.join === 'function';\n  return isCompatible;\n};\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out) {\n    out = Buffer.alloc(this.length);\n  }\n  if (!offset) {\n    offset = 0;\n  }\n  if (this.length === 0) {\n    return out;\n  }\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function (item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number') {\n      out[offset] = this.value;\n    } else if (typeof this.value === 'string') {\n      out.write(this.value, offset);\n    } else if (Buffer.isBuffer(this.value)) {\n      this.value.copy(out, offset);\n    }\n    offset += this.length;\n  }\n  return out;\n};\nmodule.exports = {\n  DecoderBuffer,\n  EncoderBuffer\n};","map":{"version":3,"names":["inherits","require","Reporter","DecoderBuffer","base","options","call","Buffer","isBuffer","error","offset","length","isDecoderBuffer","data","isCompatible","constructor","name","save","restore","isEmpty","readUInt8","skip","raw","prototype","reporter","res","fail","bytes","_reporterState","slice","EncoderBuffer","value","Array","isArray","map","item","isEncoderBuffer","byteLength","join","out","alloc","forEach","write","copy","module","exports"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/@panva/asn1.js/lib/asn1/base/buffer.js"],"sourcesContent":["const { inherits } = require('util')\n\nconst { Reporter } = require('../base/reporter')\n\nfunction DecoderBuffer (base, options) {\n  Reporter.call(this, options)\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer')\n    return\n  }\n\n  this.base = base\n  this.offset = 0\n  this.length = base.length\n}\ninherits(DecoderBuffer, Reporter)\n\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer (data) {\n  if (data instanceof DecoderBuffer) {\n    return true\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    Buffer.isBuffer(data.base) &&\n    data.constructor.name === 'DecoderBuffer' &&\n    typeof data.offset === 'number' &&\n    typeof data.length === 'number' &&\n    typeof data.save === 'function' &&\n    typeof data.restore === 'function' &&\n    typeof data.isEmpty === 'function' &&\n    typeof data.readUInt8 === 'function' &&\n    typeof data.skip === 'function' &&\n    typeof data.raw === 'function'\n\n  return isCompatible\n}\n\nDecoderBuffer.prototype.save = function save () {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) }\n}\n\nDecoderBuffer.prototype.restore = function restore (save) {\n  // Return skipped data\n  const res = new DecoderBuffer(this.base)\n  res.offset = save.offset\n  res.length = this.offset\n\n  this.offset = save.offset\n  Reporter.prototype.restore.call(this, save.reporter)\n\n  return res\n}\n\nDecoderBuffer.prototype.isEmpty = function isEmpty () {\n  return this.offset === this.length\n}\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8 (fail) {\n  if (this.offset + 1 <= this.length) { return this.base.readUInt8(this.offset++, true) } else { return this.error(fail || 'DecoderBuffer overrun') }\n}\n\nDecoderBuffer.prototype.skip = function skip (bytes, fail) {\n  if (!(this.offset + bytes <= this.length)) { return this.error(fail || 'DecoderBuffer overrun') }\n\n  const res = new DecoderBuffer(this.base)\n\n  // Share reporter state\n  res._reporterState = this._reporterState\n\n  res.offset = this.offset\n  res.length = this.offset + bytes\n  this.offset += bytes\n  return res\n}\n\nDecoderBuffer.prototype.raw = function raw (save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length)\n}\n\nfunction EncoderBuffer (value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0\n    this.value = value.map(function (item) {\n      if (!EncoderBuffer.isEncoderBuffer(item)) { item = new EncoderBuffer(item, reporter) }\n      this.length += item.length\n      return item\n    }, this)\n  } else if (typeof value === 'number') {\n    if (!(value >= 0 && value <= 0xff)) { return reporter.error('non-byte EncoderBuffer value') }\n    this.value = value\n    this.length = 1\n  } else if (typeof value === 'string') {\n    this.value = value\n    this.length = Buffer.byteLength(value)\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value\n    this.length = value.length\n  } else {\n    return reporter.error(`Unsupported type: ${typeof value}`)\n  }\n}\n\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer (data) {\n  if (data instanceof EncoderBuffer) {\n    return true\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    data.constructor.name === 'EncoderBuffer' &&\n    typeof data.length === 'number' &&\n    typeof data.join === 'function'\n\n  return isCompatible\n}\n\nEncoderBuffer.prototype.join = function join (out, offset) {\n  if (!out) { out = Buffer.alloc(this.length) }\n  if (!offset) { offset = 0 }\n\n  if (this.length === 0) { return out }\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function (item) {\n      item.join(out, offset)\n      offset += item.length\n    })\n  } else {\n    if (typeof this.value === 'number') { out[offset] = this.value } else if (typeof this.value === 'string') { out.write(this.value, offset) } else if (Buffer.isBuffer(this.value)) { this.value.copy(out, offset) }\n    offset += this.length\n  }\n\n  return out\n}\n\nmodule.exports = {\n  DecoderBuffer,\n  EncoderBuffer\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}