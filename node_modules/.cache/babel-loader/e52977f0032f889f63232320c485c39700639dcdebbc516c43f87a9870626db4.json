{"ast":null,"code":"const isDisjoint = require('../help/is_disjoint');\nconst base64url = require('../help/base64url');\nlet validateCrit = require('../help/validate_crit');\nconst {\n  JWEInvalid,\n  JOSENotSupported\n} = require('../errors');\nvalidateCrit = validateCrit.bind(undefined, JWEInvalid);\nmodule.exports = (prot, unprotected, recipients, checkAlgorithms, crit) => {\n  if (typeof prot === 'string') {\n    try {\n      prot = base64url.JSON.decode(prot);\n    } catch (err) {\n      throw new JWEInvalid('could not parse JWE protected header');\n    }\n  }\n  let alg = [];\n  const enc = new Set();\n  if (!isDisjoint(prot, unprotected) || !recipients.every(({\n    header\n  }) => {\n    if (typeof header === 'object') {\n      alg.push(header.alg);\n      enc.add(header.enc);\n    }\n    const combined = {\n      ...unprotected,\n      ...header\n    };\n    validateCrit(prot, combined, crit);\n    if ('zip' in combined) {\n      throw new JWEInvalid('\"zip\" Header Parameter MUST be integrity protected');\n    } else if (prot && 'zip' in prot && prot.zip !== 'DEF') {\n      throw new JOSENotSupported('only \"DEF\" compression algorithm is supported');\n    }\n    return isDisjoint(header, prot) && isDisjoint(header, unprotected);\n  })) {\n    throw new JWEInvalid('JWE Shared Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint');\n  }\n  if (typeof prot === 'object') {\n    alg.push(prot.alg);\n    enc.add(prot.enc);\n  }\n  if (typeof unprotected === 'object') {\n    alg.push(unprotected.alg);\n    enc.add(unprotected.enc);\n  }\n  alg = alg.filter(Boolean);\n  enc.delete(undefined);\n  if (recipients.length !== 1) {\n    if (alg.includes('dir') || alg.includes('ECDH-ES')) {\n      throw new JWEInvalid('dir and ECDH-ES alg may only be used with a single recipient');\n    }\n  }\n  if (checkAlgorithms) {\n    if (alg.length !== recipients.length) {\n      throw new JWEInvalid('missing Key Management algorithm');\n    }\n    if (enc.size === 0) {\n      throw new JWEInvalid('missing Content Encryption algorithm');\n    } else if (enc.size !== 1) {\n      throw new JWEInvalid('there must only be one Content Encryption algorithm');\n    }\n  } else {\n    if (enc.size > 1) {\n      throw new JWEInvalid('there must only be one Content Encryption algorithm');\n    }\n  }\n  return [...enc][0];\n};","map":{"version":3,"names":["isDisjoint","require","base64url","validateCrit","JWEInvalid","JOSENotSupported","bind","undefined","module","exports","prot","unprotected","recipients","checkAlgorithms","crit","JSON","decode","err","alg","enc","Set","every","header","push","add","combined","zip","filter","Boolean","delete","length","includes","size"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/jwe/validate_headers.js"],"sourcesContent":["const isDisjoint = require('../help/is_disjoint')\nconst base64url = require('../help/base64url')\nlet validateCrit = require('../help/validate_crit')\nconst { JWEInvalid, JOSENotSupported } = require('../errors')\n\nvalidateCrit = validateCrit.bind(undefined, JWEInvalid)\n\nmodule.exports = (prot, unprotected, recipients, checkAlgorithms, crit) => {\n  if (typeof prot === 'string') {\n    try {\n      prot = base64url.JSON.decode(prot)\n    } catch (err) {\n      throw new JWEInvalid('could not parse JWE protected header')\n    }\n  }\n\n  let alg = []\n  const enc = new Set()\n  if (!isDisjoint(prot, unprotected) || !recipients.every(({ header }) => {\n    if (typeof header === 'object') {\n      alg.push(header.alg)\n      enc.add(header.enc)\n    }\n    const combined = { ...unprotected, ...header }\n    validateCrit(prot, combined, crit)\n    if ('zip' in combined) {\n      throw new JWEInvalid('\"zip\" Header Parameter MUST be integrity protected')\n    } else if (prot && 'zip' in prot && prot.zip !== 'DEF') {\n      throw new JOSENotSupported('only \"DEF\" compression algorithm is supported')\n    }\n    return isDisjoint(header, prot) && isDisjoint(header, unprotected)\n  })) {\n    throw new JWEInvalid('JWE Shared Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint')\n  }\n\n  if (typeof prot === 'object') {\n    alg.push(prot.alg)\n    enc.add(prot.enc)\n  }\n  if (typeof unprotected === 'object') {\n    alg.push(unprotected.alg)\n    enc.add(unprotected.enc)\n  }\n\n  alg = alg.filter(Boolean)\n  enc.delete(undefined)\n\n  if (recipients.length !== 1) {\n    if (alg.includes('dir') || alg.includes('ECDH-ES')) {\n      throw new JWEInvalid('dir and ECDH-ES alg may only be used with a single recipient')\n    }\n  }\n\n  if (checkAlgorithms) {\n    if (alg.length !== recipients.length) {\n      throw new JWEInvalid('missing Key Management algorithm')\n    }\n    if (enc.size === 0) {\n      throw new JWEInvalid('missing Content Encryption algorithm')\n    } else if (enc.size !== 1) {\n      throw new JWEInvalid('there must only be one Content Encryption algorithm')\n    }\n  } else {\n    if (enc.size > 1) {\n      throw new JWEInvalid('there must only be one Content Encryption algorithm')\n    }\n  }\n\n  return [...enc][0]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}