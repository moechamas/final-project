{"ast":null,"code":"/* global BigInt */\nconst {\n  inherits\n} = require('util');\nconst Node = require('../base/node');\nconst der = require('../constants/der');\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\nDERNode.prototype._encodeComposite = function encodeComposite(tag, primitive, cls, content) {\n  const encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    const header = Buffer.alloc(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([header, content]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  let lenOctets = 1;\n  for (let i = content.length; i >= 0x100; i >>= 8) {\n    lenOctets++;\n  }\n  const header = Buffer.alloc(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8) {\n    header[i] = j & 0xff;\n  }\n  return this._createEncoderBuffer([header, content]);\n};\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([str.unused | 0, str.data]);\n  } else if (tag === 'bmpstr') {\n    const buf = Buffer.alloc(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error(`Encoding of string type: ${tag} unsupported`);\n  }\n};\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values) {\n      return this.reporter.error('string objid given, but no values map found');\n    }\n    if (!Object.prototype.hasOwnProperty.call(values, id)) {\n      return this.reporter.error('objid not found in values map');\n    }\n    id = values[id].split(/[\\s.]+/g);\n    for (let i = 0; i < id.length; i++) {\n      id[i] |= 0;\n    }\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (let i = 0; i < id.length; i++) {\n      id[i] |= 0;\n    }\n  }\n  if (!Array.isArray(id)) {\n    return this.reporter.error(`objid() should be either array or string, got: ${JSON.stringify(id)}`);\n  }\n  if (!relative) {\n    if (id[1] >= 40) {\n      return this.reporter.error('Second objid identifier OOB');\n    }\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  let size = 0;\n  for (let i = 0; i < id.length; i++) {\n    let ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7) {\n      size++;\n    }\n  }\n  const objid = Buffer.alloc(size);\n  let offset = objid.length - 1;\n  for (let i = id.length - 1; i >= 0; i--) {\n    let ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0) {\n      objid[offset--] = 0x80 | ident & 0x7f;\n    }\n  }\n  return this._createEncoderBuffer(objid);\n};\nfunction two(num) {\n  if (num < 10) {\n    return `0${num}`;\n  } else {\n    return num;\n  }\n}\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  let str;\n  const date = new Date(time);\n  if (tag === 'gentime') {\n    str = [two(date.getUTCFullYear()), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');\n  } else if (tag === 'utctime') {\n    str = [two(date.getUTCFullYear() % 100), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');\n  } else {\n    this.reporter.error(`Encoding ${tag} time is not supported yet`);\n  }\n  return this._encodeStr(str, 'octstr');\n};\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\nfunction bnToBuf(bn) {\n  var hex = BigInt(bn).toString(16);\n  if (hex.length % 2) {\n    hex = '0' + hex;\n  }\n  var len = hex.length / 2;\n  var u8 = new Uint8Array(len);\n  var i = 0;\n  var j = 0;\n  while (i < len) {\n    u8[i] = parseInt(hex.slice(j, j + 2), 16);\n    i += 1;\n    j += 2;\n  }\n  return u8;\n}\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values) {\n      return this.reporter.error('String int or enum given, but no values map');\n    }\n    if (!Object.prototype.hasOwnProperty.call(values, num)) {\n      return this.reporter.error(`Values map doesn't contain: ${JSON.stringify(num)}`);\n    }\n    num = values[num];\n  }\n  if (typeof num === 'bigint') {\n    const numArray = [...bnToBuf(num)];\n    if (numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = Buffer.from(numArray);\n  }\n  if (Buffer.isBuffer(num)) {\n    let size = num.length;\n    if (num.length === 0) {\n      size++;\n    }\n    const out = Buffer.alloc(size);\n    num.copy(out);\n    if (num.length === 0) {\n      out[0] = 0;\n    }\n    return this._createEncoderBuffer(out);\n  }\n  if (num < 0x80) {\n    return this._createEncoderBuffer(num);\n  }\n  if (num < 0x100) {\n    return this._createEncoderBuffer([0, num]);\n  }\n  let size = 1;\n  for (let i = num; i >= 0x100; i >>= 8) {\n    size++;\n  }\n  const out = new Array(size);\n  for (let i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if (out[0] & 0x80) {\n    out.unshift(0);\n  }\n  return this._createEncoderBuffer(Buffer.from(out));\n};\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function') {\n    entity = entity(obj);\n  }\n  return entity._getEncoder('der').tree;\n};\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  const state = this._baseState;\n  let i;\n  if (state.default === null) {\n    return false;\n  }\n  const data = dataBuffer.join();\n  if (state.defaultBuffer === undefined) {\n    state.defaultBuffer = this._encodeValue(state.default, reporter, parent).join();\n  }\n  if (data.length !== state.defaultBuffer.length) {\n    return false;\n  }\n  for (i = 0; i < data.length; i++) {\n    if (data[i] !== state.defaultBuffer[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  let res;\n  if (tag === 'seqof') {\n    tag = 'seq';\n  } else if (tag === 'setof') {\n    tag = 'set';\n  }\n  if (Object.prototype.hasOwnProperty.call(der.tagByName, tag)) {\n    res = der.tagByName[tag];\n  } else if (typeof tag === 'number' && (tag | 0) === tag) {\n    res = tag;\n  } else {\n    return reporter.error(`Unknown tag: ${tag}`);\n  }\n  if (res >= 0x1f) {\n    return reporter.error('Multi-octet tag encoding unsupported');\n  }\n  if (!primitive) {\n    res |= 0x20;\n  }\n  res |= der.tagClassByName[cls || 'universal'] << 6;\n  return res;\n}\nmodule.exports = DEREncoder;","map":{"version":3,"names":["inherits","require","Node","der","DEREncoder","entity","enc","name","tree","DERNode","_init","body","prototype","encode","data","reporter","_encode","join","parent","call","_encodeComposite","encodeComposite","tag","primitive","cls","content","encodedTag","encodeTag","length","header","Buffer","alloc","_createEncoderBuffer","lenOctets","i","j","_encodeStr","encodeStr","str","unused","buf","writeUInt16BE","charCodeAt","_isNumstr","error","_isPrintstr","test","_encodeObjid","encodeObjid","id","values","relative","Object","hasOwnProperty","split","Array","isArray","slice","JSON","stringify","splice","size","ident","objid","offset","two","num","_encodeTime","encodeTime","time","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","_encodeNull","encodeNull","bnToBuf","bn","hex","BigInt","toString","len","u8","Uint8Array","parseInt","_encodeInt","encodeInt","numArray","unshift","from","isBuffer","out","copy","_encodeBool","encodeBool","value","_use","use","obj","_getEncoder","_skipDefault","skipDefault","dataBuffer","state","_baseState","default","defaultBuffer","undefined","_encodeValue","res","tagByName","tagClassByName","module","exports"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/@panva/asn1.js/lib/asn1/encoders/der.js"],"sourcesContent":["/* global BigInt */\nconst { inherits } = require('util')\n\nconst Node = require('../base/node')\nconst der = require('../constants/der')\n\nfunction DEREncoder (entity) {\n  this.enc = 'der'\n  this.name = entity.name\n  this.entity = entity\n\n  // Construct base tree\n  this.tree = new DERNode()\n  this.tree._init(entity.body)\n}\n\nDEREncoder.prototype.encode = function encode (data, reporter) {\n  return this.tree._encode(data, reporter).join()\n}\n\n// Tree methods\n\nfunction DERNode (parent) {\n  Node.call(this, 'der', parent)\n}\ninherits(DERNode, Node)\n\nDERNode.prototype._encodeComposite = function encodeComposite (tag,\n  primitive,\n  cls,\n  content) {\n  const encodedTag = encodeTag(tag, primitive, cls, this.reporter)\n\n  // Short form\n  if (content.length < 0x80) {\n    const header = Buffer.alloc(2)\n    header[0] = encodedTag\n    header[1] = content.length\n    return this._createEncoderBuffer([header, content])\n  }\n\n  // Long form\n  // Count octets required to store length\n  let lenOctets = 1\n  for (let i = content.length; i >= 0x100; i >>= 8) { lenOctets++ }\n\n  const header = Buffer.alloc(1 + 1 + lenOctets)\n  header[0] = encodedTag\n  header[1] = 0x80 | lenOctets\n\n  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8) { header[i] = j & 0xff }\n\n  return this._createEncoderBuffer([header, content])\n}\n\nDERNode.prototype._encodeStr = function encodeStr (str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([str.unused | 0, str.data])\n  } else if (tag === 'bmpstr') {\n    const buf = Buffer.alloc(str.length * 2)\n    for (let i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2)\n    }\n    return this._createEncoderBuffer(buf)\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports only digits and space')\n    }\n    return this._createEncoderBuffer(str)\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark')\n    }\n    return this._createEncoderBuffer(str)\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str)\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str)\n  } else {\n    return this.reporter.error(`Encoding of string type: ${tag} unsupported`)\n  }\n}\n\nDERNode.prototype._encodeObjid = function encodeObjid (id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values) { return this.reporter.error('string objid given, but no values map found') }\n    if (!Object.prototype.hasOwnProperty.call(values, id)) { return this.reporter.error('objid not found in values map') }\n    id = values[id].split(/[\\s.]+/g)\n    for (let i = 0; i < id.length; i++) { id[i] |= 0 }\n  } else if (Array.isArray(id)) {\n    id = id.slice()\n    for (let i = 0; i < id.length; i++) { id[i] |= 0 }\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error(`objid() should be either array or string, got: ${JSON.stringify(id)}`)\n  }\n\n  if (!relative) {\n    if (id[1] >= 40) { return this.reporter.error('Second objid identifier OOB') }\n    id.splice(0, 2, id[0] * 40 + id[1])\n  }\n\n  // Count number of octets\n  let size = 0\n  for (let i = 0; i < id.length; i++) {\n    let ident = id[i]\n    for (size++; ident >= 0x80; ident >>= 7) { size++ }\n  }\n\n  const objid = Buffer.alloc(size)\n  let offset = objid.length - 1\n  for (let i = id.length - 1; i >= 0; i--) {\n    let ident = id[i]\n    objid[offset--] = ident & 0x7f\n    while ((ident >>= 7) > 0) { objid[offset--] = 0x80 | (ident & 0x7f) }\n  }\n\n  return this._createEncoderBuffer(objid)\n}\n\nfunction two (num) {\n  if (num < 10) { return `0${num}` } else { return num }\n}\n\nDERNode.prototype._encodeTime = function encodeTime (time, tag) {\n  let str\n  const date = new Date(time)\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getUTCFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('')\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getUTCFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('')\n  } else {\n    this.reporter.error(`Encoding ${tag} time is not supported yet`)\n  }\n\n  return this._encodeStr(str, 'octstr')\n}\n\nDERNode.prototype._encodeNull = function encodeNull () {\n  return this._createEncoderBuffer('')\n}\n\nfunction bnToBuf (bn) {\n  var hex = BigInt(bn).toString(16)\n  if (hex.length % 2) { hex = '0' + hex }\n\n  var len = hex.length / 2\n  var u8 = new Uint8Array(len)\n\n  var i = 0\n  var j = 0\n  while (i < len) {\n    u8[i] = parseInt(hex.slice(j, j + 2), 16)\n    i += 1\n    j += 2\n  }\n\n  return u8\n}\n\nDERNode.prototype._encodeInt = function encodeInt (num, values) {\n  if (typeof num === 'string') {\n    if (!values) { return this.reporter.error('String int or enum given, but no values map') }\n    if (!Object.prototype.hasOwnProperty.call(values, num)) {\n      return this.reporter.error(`Values map doesn't contain: ${JSON.stringify(num)}`)\n    }\n    num = values[num]\n  }\n\n  if (typeof num === 'bigint') {\n    const numArray = [...bnToBuf(num)]\n    if (numArray[0] & 0x80) {\n      numArray.unshift(0)\n    }\n    num = Buffer.from(numArray)\n  }\n\n  if (Buffer.isBuffer(num)) {\n    let size = num.length\n    if (num.length === 0) { size++ }\n\n    const out = Buffer.alloc(size)\n    num.copy(out)\n    if (num.length === 0) { out[0] = 0 }\n    return this._createEncoderBuffer(out)\n  }\n\n  if (num < 0x80) { return this._createEncoderBuffer(num) }\n\n  if (num < 0x100) { return this._createEncoderBuffer([0, num]) }\n\n  let size = 1\n  for (let i = num; i >= 0x100; i >>= 8) { size++ }\n\n  const out = new Array(size)\n  for (let i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff\n    num >>= 8\n  }\n  if (out[0] & 0x80) {\n    out.unshift(0)\n  }\n\n  return this._createEncoderBuffer(Buffer.from(out))\n}\n\nDERNode.prototype._encodeBool = function encodeBool (value) {\n  return this._createEncoderBuffer(value ? 0xff : 0)\n}\n\nDERNode.prototype._use = function use (entity, obj) {\n  if (typeof entity === 'function') { entity = entity(obj) }\n  return entity._getEncoder('der').tree\n}\n\nDERNode.prototype._skipDefault = function skipDefault (dataBuffer, reporter, parent) {\n  const state = this._baseState\n  let i\n  if (state.default === null) { return false }\n\n  const data = dataBuffer.join()\n  if (state.defaultBuffer === undefined) { state.defaultBuffer = this._encodeValue(state.default, reporter, parent).join() }\n\n  if (data.length !== state.defaultBuffer.length) { return false }\n\n  for (i = 0; i < data.length; i++) {\n    if (data[i] !== state.defaultBuffer[i]) { return false }\n  }\n\n  return true\n}\n\n// Utility methods\n\nfunction encodeTag (tag, primitive, cls, reporter) {\n  let res\n\n  if (tag === 'seqof') { tag = 'seq' } else if (tag === 'setof') { tag = 'set' }\n\n  if (Object.prototype.hasOwnProperty.call(der.tagByName, tag)) { res = der.tagByName[tag] } else if (typeof tag === 'number' && (tag | 0) === tag) { res = tag } else { return reporter.error(`Unknown tag: ${tag}`) }\n\n  if (res >= 0x1f) { return reporter.error('Multi-octet tag encoding unsupported') }\n\n  if (!primitive) { res |= 0x20 }\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6)\n\n  return res\n}\n\nmodule.exports = DEREncoder\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}