{"ast":null,"code":"const {\n  strict: assert\n} = require('assert');\nconst {\n  Reporter\n} = require('../base/reporter');\nconst {\n  DecoderBuffer,\n  EncoderBuffer\n} = require('../base/buffer');\n\n// Supported tags\nconst tags = ['seq', 'seqof', 'set', 'setof', 'objid', 'bool', 'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc', 'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str', 'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'];\n\n// Public methods list\nconst methods = ['key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice', 'any', 'contains'].concat(tags);\n\n// Overrided methods list\nconst overrided = ['_peekTag', '_decodeTag', '_use', '_decodeStr', '_decodeObjid', '_decodeTime', '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList', '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime', '_encodeNull', '_encodeInt', '_encodeBool'];\nfunction Node(enc, parent, name) {\n  const state = {};\n  this._baseState = state;\n  state.name = name;\n  state.enc = enc;\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state.default = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nconst stateProps = ['enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice', 'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit', 'implicit', 'contains'];\nNode.prototype.clone = function clone() {\n  const state = this._baseState;\n  const cstate = {};\n  stateProps.forEach(function (prop) {\n    cstate[prop] = state[prop];\n  });\n  const res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\nNode.prototype._wrap = function wrap() {\n  const state = this._baseState;\n  methods.forEach(function (method) {\n    this[method] = function _wrappedMethod() {\n      const clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\nNode.prototype._init = function init(body) {\n  const state = this._baseState;\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function (child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\nNode.prototype._useArgs = function useArgs(args) {\n  const state = this._baseState;\n\n  // Filter children and args\n  const children = args.filter(function (arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function (arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function (child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function (arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object) {\n        return arg;\n      }\n      const res = {};\n      Object.keys(arg).forEach(function (key) {\n        if (key == (key | 0)) {\n          key |= 0;\n        } // eslint-disable-line eqeqeq\n        const value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function (method) {\n  Node.prototype[method] = function _overrided() {\n    const state = this._baseState;\n    throw new Error(`${method} not implemented for encoding: ${state.enc}`);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function (tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    const state = this._baseState;\n    const args = Array.prototype.slice.call(arguments);\n    assert(state.tag === null);\n    state.tag = tag;\n    this._useArgs(args);\n    return this;\n  };\n});\nNode.prototype.use = function use(item) {\n  assert(item);\n  const state = this._baseState;\n  assert(state.use === null);\n  state.use = item;\n  return this;\n};\nNode.prototype.optional = function optional() {\n  const state = this._baseState;\n  state.optional = true;\n  return this;\n};\nNode.prototype.def = function def(val) {\n  const state = this._baseState;\n  assert(state.default === null);\n  state.default = val;\n  state.optional = true;\n  return this;\n};\nNode.prototype.explicit = function explicit(num) {\n  const state = this._baseState;\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n  return this;\n};\nNode.prototype.implicit = function implicit(num) {\n  const state = this._baseState;\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n  return this;\n};\nNode.prototype.obj = function obj() {\n  const state = this._baseState;\n  const args = Array.prototype.slice.call(arguments);\n  state.obj = true;\n  if (args.length !== 0) {\n    this._useArgs(args);\n  }\n  return this;\n};\nNode.prototype.key = function key(newKey) {\n  const state = this._baseState;\n  assert(state.key === null);\n  state.key = newKey;\n  return this;\n};\nNode.prototype.any = function any() {\n  const state = this._baseState;\n  state.any = true;\n  return this;\n};\nNode.prototype.choice = function choice(obj) {\n  const state = this._baseState;\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function (key) {\n    return obj[key];\n  }));\n  return this;\n};\nNode.prototype.contains = function contains(item) {\n  const state = this._baseState;\n  assert(state.use === null);\n  state.contains = item;\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null) {\n    return input.wrapResult(state.children[0]._decode(input, options));\n  }\n  let result = state.default;\n  let present = true;\n  let prevKey = null;\n  if (state.key !== null) {\n    prevKey = input.enterKey(state.key);\n  }\n\n  // Check if tag is there\n  if (state.optional) {\n    let tag = null;\n    if (state.explicit !== null) {\n      tag = state.explicit;\n    } else if (state.implicit !== null) {\n      tag = state.implicit;\n    } else if (state.tag !== null) {\n      tag = state.tag;\n    }\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save();\n      try {\n        if (state.choice === null) {\n          this._decodeGeneric(state.tag, input, options);\n        } else {\n          this._decodeChoice(input, options);\n        }\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n      if (input.isError(present)) {\n        return present;\n      }\n    }\n  }\n\n  // Push object on stack\n  let prevObj;\n  if (state.obj && present) {\n    prevObj = input.enterObject();\n  }\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit)) {\n        return explicit;\n      }\n      input = explicit;\n    }\n    const start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      let save;\n      if (state.any) {\n        save = input.save();\n      }\n      const body = this._decodeTag(input, state.implicit !== null ? state.implicit : state.tag, state.any);\n      if (input.isError(body)) {\n        return body;\n      }\n      if (state.any) {\n        result = input.raw(save);\n      } else {\n        input = body;\n      }\n    }\n    if (options && options.track && state.tag !== null) {\n      options.track(input.path(), start, input.length, 'tagged');\n    }\n    if (options && options.track && state.tag !== null) {\n      options.track(input.path(), input.offset, input.length, 'content');\n    }\n\n    // Select proper method for tag\n    if (state.any) {\n      // no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options);\n    } else {\n      result = this._decodeChoice(input, options);\n    }\n    if (input.isError(result)) {\n      return result;\n    }\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present) {\n    result = input.leaveObject(prevObj);\n  }\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true)) {\n    input.leaveKey(prevKey, state.key, result);\n  } else if (prevKey !== null) {\n    input.exitKey(prevKey);\n  }\n  return result;\n};\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  const state = this._baseState;\n  if (tag === 'seq' || tag === 'set') {\n    return null;\n  }\n  if (tag === 'seqof' || tag === 'setof') {\n    return this._decodeList(input, tag, state.args[0], options);\n  } else if (/str$/.test(tag)) {\n    return this._decodeStr(input, tag, options);\n  } else if (tag === 'objid' && state.args) {\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  } else if (tag === 'objid') {\n    return this._decodeObjid(input, null, null, options);\n  } else if (tag === 'gentime' || tag === 'utctime') {\n    return this._decodeTime(input, tag, options);\n  } else if (tag === 'null_') {\n    return this._decodeNull(input, options);\n  } else if (tag === 'bool') {\n    return this._decodeBool(input, options);\n  } else if (tag === 'objDesc') {\n    return this._decodeStr(input, tag, options);\n  } else if (tag === 'int' || tag === 'enum') {\n    return this._decodeInt(input, state.args && state.args[0], options);\n  }\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)._decode(input, options);\n  } else {\n    return input.error(`unknown tag: ${tag}`);\n  }\n};\nNode.prototype._getUse = function _getUse(entity, obj) {\n  const state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  const state = this._baseState;\n  let result = null;\n  let match = false;\n  Object.keys(state.choice).some(function (key) {\n    const save = input.save();\n    const node = state.choice[key];\n    try {\n      const value = node._decode(input, options);\n      if (input.isError(value)) {\n        return false;\n      }\n      result = {\n        type: key,\n        value: value\n      };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n  if (!match) {\n    return input.error('Choice not matched');\n  }\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\nNode.prototype._encode = function encode(data, reporter, parent) {\n  const state = this._baseState;\n  if (state.default !== null && state.default === data) {\n    return;\n  }\n  const result = this._encodeValue(data, reporter, parent);\n  if (result === undefined) {\n    return;\n  }\n  if (this._skipDefault(result, reporter, parent)) {\n    return;\n  }\n  return result;\n};\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null) {\n    return state.children[0]._encode(data, reporter || new Reporter());\n  }\n  let result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state.default !== null) {\n      data = state.default;\n    } else {\n      return;\n    }\n  }\n\n  // Encode children first\n  let content = null;\n  let primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function (child) {\n      if (child._baseState.tag === 'null_') {\n        return child._encode(null, reporter, data);\n      }\n      if (child._baseState.key === null) {\n        return reporter.error('Child should have a key');\n      }\n      const prevKey = reporter.enterKey(child._baseState.key);\n      if (typeof data !== 'object') {\n        return reporter.error('Child expected, but input is not object');\n      }\n      const res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n      return res;\n    }, this).filter(function (child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      if (!(state.args && state.args.length === 1)) {\n        return reporter.error(`Too many args for: ${state.tag}`);\n      }\n      if (!Array.isArray(data)) {\n        return reporter.error('seqof/setof, but data is not Array');\n      }\n      const child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function (item) {\n        const state = this._baseState;\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag;\n    const cls = state.implicit === null ? 'universal' : 'context';\n    if (tag === null) {\n      if (state.use === null) {\n        reporter.error('Tag could be omitted only for .use()');\n      }\n    } else {\n      if (state.use === null) {\n        result = this._encodeComposite(tag, primitive, cls, content);\n      }\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null) {\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n  }\n  return result;\n};\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  const state = this._baseState;\n  const node = state.choice[data.type];\n  if (!node) {\n    assert(false, `${data.type} not found in ${JSON.stringify(Object.keys(state.choice))}`);\n  }\n  return node._encode(data.value, reporter);\n};\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  const state = this._baseState;\n  if (/str$/.test(tag)) {\n    return this._encodeStr(data, tag);\n  } else if (tag === 'objid' && state.args) {\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  } else if (tag === 'objid') {\n    return this._encodeObjid(data, null, null);\n  } else if (tag === 'gentime' || tag === 'utctime') {\n    return this._encodeTime(data, tag);\n  } else if (tag === 'null_') {\n    return this._encodeNull();\n  } else if (tag === 'int' || tag === 'enum') {\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  } else if (tag === 'bool') {\n    return this._encodeBool(data);\n  } else if (tag === 'objDesc') {\n    return this._encodeStr(data, tag);\n  } else {\n    throw new Error(`Unsupported tag: ${tag}`);\n  }\n};\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);\n};\nmodule.exports = Node;","map":{"version":3,"names":["strict","assert","require","Reporter","DecoderBuffer","EncoderBuffer","tags","methods","concat","overrided","Node","enc","parent","name","state","_baseState","children","tag","args","reverseArgs","choice","optional","any","obj","use","useDecoder","key","default","explicit","implicit","contains","_wrap","stateProps","prototype","clone","cstate","forEach","prop","res","constructor","wrap","method","_wrappedMethod","push","apply","arguments","_init","init","body","call","filter","child","equal","length","_useArgs","useArgs","arg","map","Object","keys","value","_overrided","Error","_tagMethod","Array","slice","item","def","val","num","newKey","_decode","decode","input","options","wrapResult","result","present","prevKey","enterKey","save","_decodeGeneric","_decodeChoice","e","restore","_peekTag","isError","prevObj","enterObject","_decodeTag","start","offset","raw","track","path","decodeChildren","data","_getUse","_reporterState","leaveObject","leaveKey","exitKey","decodeGeneric","_decodeList","test","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeBool","_decodeInt","error","entity","_use","decodeChoice","match","some","node","type","_createEncoderBuffer","createEncoderBuffer","reporter","_encode","encode","_encodeValue","undefined","_skipDefault","content","primitive","_encodeChoice","isArray","_encodePrimitive","cls","_encodeComposite","encodeChoice","JSON","stringify","encodePrimitive","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool","_isNumstr","isNumstr","str","_isPrintstr","isPrintstr","module","exports"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/@panva/asn1.js/lib/asn1/base/node.js"],"sourcesContent":["const { strict: assert } = require('assert')\n\nconst { Reporter } = require('../base/reporter')\nconst { DecoderBuffer, EncoderBuffer } = require('../base/buffer')\n\n// Supported tags\nconst tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n]\n\n// Public methods list\nconst methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags)\n\n// Overrided methods list\nconst overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n]\n\nfunction Node (enc, parent, name) {\n  const state = {}\n  this._baseState = state\n\n  state.name = name\n  state.enc = enc\n\n  state.parent = parent || null\n  state.children = null\n\n  // State\n  state.tag = null\n  state.args = null\n  state.reverseArgs = null\n  state.choice = null\n  state.optional = false\n  state.any = false\n  state.obj = false\n  state.use = null\n  state.useDecoder = null\n  state.key = null\n  state.default = null\n  state.explicit = null\n  state.implicit = null\n  state.contains = null\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = []\n    this._wrap()\n  }\n}\n\nconst stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n]\n\nNode.prototype.clone = function clone () {\n  const state = this._baseState\n  const cstate = {}\n  stateProps.forEach(function (prop) {\n    cstate[prop] = state[prop]\n  })\n  const res = new this.constructor(cstate.parent)\n  res._baseState = cstate\n  return res\n}\n\nNode.prototype._wrap = function wrap () {\n  const state = this._baseState\n  methods.forEach(function (method) {\n    this[method] = function _wrappedMethod () {\n      const clone = new this.constructor(this)\n      state.children.push(clone)\n      return clone[method].apply(clone, arguments)\n    }\n  }, this)\n}\n\nNode.prototype._init = function init (body) {\n  const state = this._baseState\n\n  assert(state.parent === null)\n  body.call(this)\n\n  // Filter children\n  state.children = state.children.filter(function (child) {\n    return child._baseState.parent === this\n  }, this)\n  assert.equal(state.children.length, 1, 'Root node can have only one child')\n}\n\nNode.prototype._useArgs = function useArgs (args) {\n  const state = this._baseState\n\n  // Filter children and args\n  const children = args.filter(function (arg) {\n    return arg instanceof this.constructor\n  }, this)\n  args = args.filter(function (arg) {\n    return !(arg instanceof this.constructor)\n  }, this)\n\n  if (children.length !== 0) {\n    assert(state.children === null)\n    state.children = children\n\n    // Replace parent to maintain backward link\n    children.forEach(function (child) {\n      child._baseState.parent = this\n    }, this)\n  }\n  if (args.length !== 0) {\n    assert(state.args === null)\n    state.args = args\n    state.reverseArgs = args.map(function (arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object) { return arg }\n\n      const res = {}\n      Object.keys(arg).forEach(function (key) {\n        if (key == (key | 0)) { key |= 0 } // eslint-disable-line eqeqeq\n        const value = arg[key]\n        res[value] = key\n      })\n      return res\n    })\n  }\n}\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function (method) {\n  Node.prototype[method] = function _overrided () {\n    const state = this._baseState\n    throw new Error(`${method} not implemented for encoding: ${state.enc}`)\n  }\n})\n\n//\n// Public methods\n//\n\ntags.forEach(function (tag) {\n  Node.prototype[tag] = function _tagMethod () {\n    const state = this._baseState\n    const args = Array.prototype.slice.call(arguments)\n\n    assert(state.tag === null)\n    state.tag = tag\n\n    this._useArgs(args)\n\n    return this\n  }\n})\n\nNode.prototype.use = function use (item) {\n  assert(item)\n  const state = this._baseState\n\n  assert(state.use === null)\n  state.use = item\n\n  return this\n}\n\nNode.prototype.optional = function optional () {\n  const state = this._baseState\n\n  state.optional = true\n\n  return this\n}\n\nNode.prototype.def = function def (val) {\n  const state = this._baseState\n\n  assert(state.default === null)\n  state.default = val\n  state.optional = true\n\n  return this\n}\n\nNode.prototype.explicit = function explicit (num) {\n  const state = this._baseState\n\n  assert(state.explicit === null && state.implicit === null)\n  state.explicit = num\n\n  return this\n}\n\nNode.prototype.implicit = function implicit (num) {\n  const state = this._baseState\n\n  assert(state.explicit === null && state.implicit === null)\n  state.implicit = num\n\n  return this\n}\n\nNode.prototype.obj = function obj () {\n  const state = this._baseState\n  const args = Array.prototype.slice.call(arguments)\n\n  state.obj = true\n\n  if (args.length !== 0) { this._useArgs(args) }\n\n  return this\n}\n\nNode.prototype.key = function key (newKey) {\n  const state = this._baseState\n\n  assert(state.key === null)\n  state.key = newKey\n\n  return this\n}\n\nNode.prototype.any = function any () {\n  const state = this._baseState\n\n  state.any = true\n\n  return this\n}\n\nNode.prototype.choice = function choice (obj) {\n  const state = this._baseState\n\n  assert(state.choice === null)\n  state.choice = obj\n  this._useArgs(Object.keys(obj).map(function (key) {\n    return obj[key]\n  }))\n\n  return this\n}\n\nNode.prototype.contains = function contains (item) {\n  const state = this._baseState\n\n  assert(state.use === null)\n  state.contains = item\n\n  return this\n}\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode (input, options) {\n  const state = this._baseState\n\n  // Decode root node\n  if (state.parent === null) { return input.wrapResult(state.children[0]._decode(input, options)) }\n\n  let result = state.default\n  let present = true\n\n  let prevKey = null\n  if (state.key !== null) { prevKey = input.enterKey(state.key) }\n\n  // Check if tag is there\n  if (state.optional) {\n    let tag = null\n    if (state.explicit !== null) { tag = state.explicit } else if (state.implicit !== null) { tag = state.implicit } else if (state.tag !== null) { tag = state.tag }\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save()\n      try {\n        if (state.choice === null) { this._decodeGeneric(state.tag, input, options) } else { this._decodeChoice(input, options) }\n        present = true\n      } catch (e) {\n        present = false\n      }\n      input.restore(save)\n    } else {\n      present = this._peekTag(input, tag, state.any)\n\n      if (input.isError(present)) { return present }\n    }\n  }\n\n  // Push object on stack\n  let prevObj\n  if (state.obj && present) { prevObj = input.enterObject() }\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit)\n      if (input.isError(explicit)) { return explicit }\n      input = explicit\n    }\n\n    const start = input.offset\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      let save\n      if (state.any) { save = input.save() }\n      const body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      )\n      if (input.isError(body)) { return body }\n\n      if (state.any) { result = input.raw(save) } else { input = body }\n    }\n\n    if (options && options.track && state.tag !== null) { options.track(input.path(), start, input.length, 'tagged') }\n\n    if (options && options.track && state.tag !== null) { options.track(input.path(), input.offset, input.length, 'content') }\n\n    // Select proper method for tag\n    if (state.any) {\n      // no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options)\n    } else {\n      result = this._decodeChoice(input, options)\n    }\n\n    if (input.isError(result)) { return result }\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren (child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options)\n      })\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result)\n      result = this._getUse(state.contains, input._reporterState.obj)\n        ._decode(data, options)\n    }\n  }\n\n  // Pop object\n  if (state.obj && present) { result = input.leaveObject(prevObj) }\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true)) { input.leaveKey(prevKey, state.key, result) } else if (prevKey !== null) { input.exitKey(prevKey) }\n\n  return result\n}\n\nNode.prototype._decodeGeneric = function decodeGeneric (tag, input, options) {\n  const state = this._baseState\n\n  if (tag === 'seq' || tag === 'set') { return null }\n  if (tag === 'seqof' || tag === 'setof') { return this._decodeList(input, tag, state.args[0], options) } else if (/str$/.test(tag)) { return this._decodeStr(input, tag, options) } else if (tag === 'objid' && state.args) { return this._decodeObjid(input, state.args[0], state.args[1], options) } else if (tag === 'objid') { return this._decodeObjid(input, null, null, options) } else if (tag === 'gentime' || tag === 'utctime') { return this._decodeTime(input, tag, options) } else if (tag === 'null_') { return this._decodeNull(input, options) } else if (tag === 'bool') { return this._decodeBool(input, options) } else if (tag === 'objDesc') { return this._decodeStr(input, tag, options) } else if (tag === 'int' || tag === 'enum') { return this._decodeInt(input, state.args && state.args[0], options) }\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n      ._decode(input, options)\n  } else {\n    return input.error(`unknown tag: ${tag}`)\n  }\n}\n\nNode.prototype._getUse = function _getUse (entity, obj) {\n  const state = this._baseState\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj)\n  assert(state.useDecoder._baseState.parent === null)\n  state.useDecoder = state.useDecoder._baseState.children[0]\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone()\n    state.useDecoder._baseState.implicit = state.implicit\n  }\n  return state.useDecoder\n}\n\nNode.prototype._decodeChoice = function decodeChoice (input, options) {\n  const state = this._baseState\n  let result = null\n  let match = false\n\n  Object.keys(state.choice).some(function (key) {\n    const save = input.save()\n    const node = state.choice[key]\n    try {\n      const value = node._decode(input, options)\n      if (input.isError(value)) { return false }\n\n      result = { type: key, value: value }\n      match = true\n    } catch (e) {\n      input.restore(save)\n      return false\n    }\n    return true\n  }, this)\n\n  if (!match) { return input.error('Choice not matched') }\n\n  return result\n}\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer (data) {\n  return new EncoderBuffer(data, this.reporter)\n}\n\nNode.prototype._encode = function encode (data, reporter, parent) {\n  const state = this._baseState\n  if (state.default !== null && state.default === data) { return }\n\n  const result = this._encodeValue(data, reporter, parent)\n  if (result === undefined) { return }\n\n  if (this._skipDefault(result, reporter, parent)) { return }\n\n  return result\n}\n\nNode.prototype._encodeValue = function encode (data, reporter, parent) {\n  const state = this._baseState\n\n  // Decode root node\n  if (state.parent === null) { return state.children[0]._encode(data, reporter || new Reporter()) }\n\n  let result = null\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state.default !== null) { data = state.default } else { return }\n  }\n\n  // Encode children first\n  let content = null\n  let primitive = false\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data)\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter)\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter)\n    primitive = true\n  } else if (state.children) {\n    content = state.children.map(function (child) {\n      if (child._baseState.tag === 'null_') { return child._encode(null, reporter, data) }\n\n      if (child._baseState.key === null) { return reporter.error('Child should have a key') }\n      const prevKey = reporter.enterKey(child._baseState.key)\n\n      if (typeof data !== 'object') { return reporter.error('Child expected, but input is not object') }\n\n      const res = child._encode(data[child._baseState.key], reporter, data)\n      reporter.leaveKey(prevKey)\n\n      return res\n    }, this).filter(function (child) {\n      return child\n    })\n    content = this._createEncoderBuffer(content)\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      if (!(state.args && state.args.length === 1)) { return reporter.error(`Too many args for: ${state.tag}`) }\n\n      if (!Array.isArray(data)) { return reporter.error('seqof/setof, but data is not Array') }\n\n      const child = this.clone()\n      child._baseState.implicit = null\n      content = this._createEncoderBuffer(data.map(function (item) {\n        const state = this._baseState\n\n        return this._getUse(state.args[0], data)._encode(item, reporter)\n      }, child))\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter)\n    } else {\n      content = this._encodePrimitive(state.tag, data)\n      primitive = true\n    }\n  }\n\n  // Encode data itself\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag\n    const cls = state.implicit === null ? 'universal' : 'context'\n\n    if (tag === null) {\n      if (state.use === null) { reporter.error('Tag could be omitted only for .use()') }\n    } else {\n      if (state.use === null) { result = this._encodeComposite(tag, primitive, cls, content) }\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null) { result = this._encodeComposite(state.explicit, false, 'context', result) }\n\n  return result\n}\n\nNode.prototype._encodeChoice = function encodeChoice (data, reporter) {\n  const state = this._baseState\n\n  const node = state.choice[data.type]\n  if (!node) {\n    assert(\n      false,\n      `${data.type} not found in ${JSON.stringify(Object.keys(state.choice))}`\n    )\n  }\n  return node._encode(data.value, reporter)\n}\n\nNode.prototype._encodePrimitive = function encodePrimitive (tag, data) {\n  const state = this._baseState\n\n  if (/str$/.test(tag)) { return this._encodeStr(data, tag) } else if (tag === 'objid' && state.args) { return this._encodeObjid(data, state.reverseArgs[0], state.args[1]) } else if (tag === 'objid') { return this._encodeObjid(data, null, null) } else if (tag === 'gentime' || tag === 'utctime') { return this._encodeTime(data, tag) } else if (tag === 'null_') { return this._encodeNull() } else if (tag === 'int' || tag === 'enum') { return this._encodeInt(data, state.args && state.reverseArgs[0]) } else if (tag === 'bool') { return this._encodeBool(data) } else if (tag === 'objDesc') { return this._encodeStr(data, tag) } else { throw new Error(`Unsupported tag: ${tag}`) }\n}\n\nNode.prototype._isNumstr = function isNumstr (str) {\n  return /^[0-9 ]*$/.test(str)\n}\n\nNode.prototype._isPrintstr = function isPrintstr (str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str)\n}\n\nmodule.exports = Node\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}