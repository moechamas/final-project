{"ast":null,"code":"const errors = require('../errors');\nconst Key = require('../jwk/key/base');\nconst importKey = require('../jwk/import');\nconst {\n  KeyStore\n} = require('../jwks/keystore');\nmodule.exports = (input, keyStoreAllowed = false) => {\n  if (input instanceof Key) {\n    return input;\n  }\n  if (input instanceof KeyStore) {\n    if (!keyStoreAllowed) {\n      throw new TypeError('key argument for this operation must not be a JWKS.KeyStore instance');\n    }\n    return input;\n  }\n  try {\n    return importKey(input);\n  } catch (err) {\n    if (err instanceof errors.JOSEError && !(err instanceof errors.JWKImportFailed)) {\n      throw err;\n    }\n    let msg;\n    if (keyStoreAllowed) {\n      msg = 'key must be an instance of a key instantiated by JWK.asKey, a valid JWK.asKey input, or a JWKS.KeyStore instance';\n    } else {\n      msg = 'key must be an instance of a key instantiated by JWK.asKey, or a valid JWK.asKey input';\n    }\n    throw new TypeError(msg);\n  }\n};","map":{"version":3,"names":["errors","require","Key","importKey","KeyStore","module","exports","input","keyStoreAllowed","TypeError","err","JOSEError","JWKImportFailed","msg"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/help/get_key.js"],"sourcesContent":["const errors = require('../errors')\nconst Key = require('../jwk/key/base')\nconst importKey = require('../jwk/import')\nconst { KeyStore } = require('../jwks/keystore')\n\nmodule.exports = (input, keyStoreAllowed = false) => {\n  if (input instanceof Key) {\n    return input\n  }\n\n  if (input instanceof KeyStore) {\n    if (!keyStoreAllowed) {\n      throw new TypeError('key argument for this operation must not be a JWKS.KeyStore instance')\n    }\n\n    return input\n  }\n\n  try {\n    return importKey(input)\n  } catch (err) {\n    if (err instanceof errors.JOSEError && !(err instanceof errors.JWKImportFailed)) {\n      throw err\n    }\n\n    let msg\n    if (keyStoreAllowed) {\n      msg = 'key must be an instance of a key instantiated by JWK.asKey, a valid JWK.asKey input, or a JWKS.KeyStore instance'\n    } else {\n      msg = 'key must be an instance of a key instantiated by JWK.asKey, or a valid JWK.asKey input'\n    }\n\n    throw new TypeError(msg)\n  }\n}\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,WAAW,CAAC;AACnC,MAAMC,GAAG,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AACtC,MAAME,SAAS,GAAGF,OAAO,CAAC,eAAe,CAAC;AAC1C,MAAM;EAAEG;AAAS,CAAC,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAEhDI,MAAM,CAACC,OAAO,GAAG,CAACC,KAAK,EAAEC,eAAe,GAAG,KAAK,KAAK;EACnD,IAAID,KAAK,YAAYL,GAAG,EAAE;IACxB,OAAOK,KAAK;EACd;EAEA,IAAIA,KAAK,YAAYH,QAAQ,EAAE;IAC7B,IAAI,CAACI,eAAe,EAAE;MACpB,MAAM,IAAIC,SAAS,CAAC,sEAAsE,CAAC;IAC7F;IAEA,OAAOF,KAAK;EACd;EAEA,IAAI;IACF,OAAOJ,SAAS,CAACI,KAAK,CAAC;EACzB,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZ,IAAIA,GAAG,YAAYV,MAAM,CAACW,SAAS,IAAI,EAAED,GAAG,YAAYV,MAAM,CAACY,eAAe,CAAC,EAAE;MAC/E,MAAMF,GAAG;IACX;IAEA,IAAIG,GAAG;IACP,IAAIL,eAAe,EAAE;MACnBK,GAAG,GAAG,kHAAkH;IAC1H,CAAC,MAAM;MACLA,GAAG,GAAG,wFAAwF;IAChG;IAEA,MAAM,IAAIJ,SAAS,CAACI,GAAG,CAAC;EAC1B;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}