{"ast":null,"code":"const {\n  createCipheriv,\n  createDecipheriv,\n  getCiphers\n} = require('crypto');\nconst {\n  KEYOBJECT\n} = require('../help/consts');\nconst {\n  asInput\n} = require('../help/key_object');\nconst checkInput = data => {\n  if (data !== undefined && data.length % 8 !== 0) {\n    throw new Error('invalid data length');\n  }\n};\nconst wrapKey = (alg, {\n  [KEYOBJECT]: keyObject\n}, payload) => {\n  const key = asInput(keyObject, false);\n  const cipher = createCipheriv(alg, key, Buffer.alloc(8, 'a6', 'hex'));\n  return {\n    wrapped: Buffer.concat([cipher.update(payload), cipher.final()])\n  };\n};\nconst unwrapKey = (alg, {\n  [KEYOBJECT]: keyObject\n}, payload) => {\n  const key = asInput(keyObject, false);\n  checkInput(payload);\n  const cipher = createDecipheriv(alg, key, Buffer.alloc(8, 'a6', 'hex'));\n  return Buffer.concat([cipher.update(payload), cipher.final()]);\n};\nmodule.exports = (JWA, JWK) => {\n  ['A128KW', 'A192KW', 'A256KW'].forEach(jwaAlg => {\n    const size = parseInt(jwaAlg.substr(1, 3), 10);\n    const alg = `aes${size}-wrap`;\n    if (getCiphers().includes(alg)) {\n      JWA.keyManagementEncrypt.set(jwaAlg, wrapKey.bind(undefined, alg));\n      JWA.keyManagementDecrypt.set(jwaAlg, unwrapKey.bind(undefined, alg));\n      JWK.oct.wrapKey[jwaAlg] = JWK.oct.unwrapKey[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.length === size;\n    }\n  });\n};","map":{"version":3,"names":["createCipheriv","createDecipheriv","getCiphers","require","KEYOBJECT","asInput","checkInput","data","undefined","length","Error","wrapKey","alg","keyObject","payload","key","cipher","Buffer","alloc","wrapped","concat","update","final","unwrapKey","module","exports","JWA","JWK","forEach","jwaAlg","size","parseInt","substr","includes","keyManagementEncrypt","set","bind","keyManagementDecrypt","oct","use"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/jwa/aes_kw.js"],"sourcesContent":["const { createCipheriv, createDecipheriv, getCiphers } = require('crypto')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst { asInput } = require('../help/key_object')\n\nconst checkInput = (data) => {\n  if (data !== undefined && data.length % 8 !== 0) {\n    throw new Error('invalid data length')\n  }\n}\n\nconst wrapKey = (alg, { [KEYOBJECT]: keyObject }, payload) => {\n  const key = asInput(keyObject, false)\n  const cipher = createCipheriv(alg, key, Buffer.alloc(8, 'a6', 'hex'))\n\n  return { wrapped: Buffer.concat([cipher.update(payload), cipher.final()]) }\n}\n\nconst unwrapKey = (alg, { [KEYOBJECT]: keyObject }, payload) => {\n  const key = asInput(keyObject, false)\n  checkInput(payload)\n  const cipher = createDecipheriv(alg, key, Buffer.alloc(8, 'a6', 'hex'))\n\n  return Buffer.concat([cipher.update(payload), cipher.final()])\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['A128KW', 'A192KW', 'A256KW'].forEach((jwaAlg) => {\n    const size = parseInt(jwaAlg.substr(1, 3), 10)\n    const alg = `aes${size}-wrap`\n    if (getCiphers().includes(alg)) {\n      JWA.keyManagementEncrypt.set(jwaAlg, wrapKey.bind(undefined, alg))\n      JWA.keyManagementDecrypt.set(jwaAlg, unwrapKey.bind(undefined, alg))\n      JWK.oct.wrapKey[jwaAlg] = JWK.oct.unwrapKey[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.length === size\n    }\n  })\n}\n"],"mappings":"AAAA,MAAM;EAAEA,cAAc;EAAEC,gBAAgB;EAAEC;AAAW,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE1E,MAAM;EAAEC;AAAU,CAAC,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC/C,MAAM;EAAEE;AAAQ,CAAC,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAEjD,MAAMG,UAAU,GAAIC,IAAI,IAAK;EAC3B,IAAIA,IAAI,KAAKC,SAAS,IAAID,IAAI,CAACE,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;IAC/C,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACxC;AACF,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAE;EAAE,CAACR,SAAS,GAAGS;AAAU,CAAC,EAAEC,OAAO,KAAK;EAC5D,MAAMC,GAAG,GAAGV,OAAO,CAACQ,SAAS,EAAE,KAAK,CAAC;EACrC,MAAMG,MAAM,GAAGhB,cAAc,CAACY,GAAG,EAAEG,GAAG,EAAEE,MAAM,CAACC,KAAK,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;EAErE,OAAO;IAAEC,OAAO,EAAEF,MAAM,CAACG,MAAM,CAAC,CAACJ,MAAM,CAACK,MAAM,CAACP,OAAO,CAAC,EAAEE,MAAM,CAACM,KAAK,CAAC,CAAC,CAAC;EAAE,CAAC;AAC7E,CAAC;AAED,MAAMC,SAAS,GAAGA,CAACX,GAAG,EAAE;EAAE,CAACR,SAAS,GAAGS;AAAU,CAAC,EAAEC,OAAO,KAAK;EAC9D,MAAMC,GAAG,GAAGV,OAAO,CAACQ,SAAS,EAAE,KAAK,CAAC;EACrCP,UAAU,CAACQ,OAAO,CAAC;EACnB,MAAME,MAAM,GAAGf,gBAAgB,CAACW,GAAG,EAAEG,GAAG,EAAEE,MAAM,CAACC,KAAK,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;EAEvE,OAAOD,MAAM,CAACG,MAAM,CAAC,CAACJ,MAAM,CAACK,MAAM,CAACP,OAAO,CAAC,EAAEE,MAAM,CAACM,KAAK,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC7B,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAACC,OAAO,CAAEC,MAAM,IAAK;IACjD,MAAMC,IAAI,GAAGC,QAAQ,CAACF,MAAM,CAACG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;IAC9C,MAAMpB,GAAG,GAAI,MAAKkB,IAAK,OAAM;IAC7B,IAAI5B,UAAU,CAAC,CAAC,CAAC+B,QAAQ,CAACrB,GAAG,CAAC,EAAE;MAC9Bc,GAAG,CAACQ,oBAAoB,CAACC,GAAG,CAACN,MAAM,EAAElB,OAAO,CAACyB,IAAI,CAAC5B,SAAS,EAAEI,GAAG,CAAC,CAAC;MAClEc,GAAG,CAACW,oBAAoB,CAACF,GAAG,CAACN,MAAM,EAAEN,SAAS,CAACa,IAAI,CAAC5B,SAAS,EAAEI,GAAG,CAAC,CAAC;MACpEe,GAAG,CAACW,GAAG,CAAC3B,OAAO,CAACkB,MAAM,CAAC,GAAGF,GAAG,CAACW,GAAG,CAACf,SAAS,CAACM,MAAM,CAAC,GAAGd,GAAG,IAAI,CAACA,GAAG,CAACwB,GAAG,KAAK,KAAK,IAAIxB,GAAG,CAACwB,GAAG,KAAK/B,SAAS,KAAKO,GAAG,CAACN,MAAM,KAAKqB,IAAI;IAClI;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}