{"ast":null,"code":"const {\n  sign: signOneShot,\n  verify: verifyOneShot\n} = require('crypto');\nconst {\n  KEYOBJECT\n} = require('../help/consts');\nconst {\n  edDSASupported\n} = require('../help/runtime_support');\nconst sign = ({\n  [KEYOBJECT]: keyObject\n}, payload) => {\n  if (typeof payload === 'string') {\n    payload = Buffer.from(payload);\n  }\n  return signOneShot(undefined, payload, keyObject);\n};\nconst verify = ({\n  [KEYOBJECT]: keyObject\n}, payload, signature) => {\n  return verifyOneShot(undefined, payload, keyObject, signature);\n};\nmodule.exports = (JWA, JWK) => {\n  if (edDSASupported) {\n    JWA.sign.set('EdDSA', sign);\n    JWA.verify.set('EdDSA', verify);\n    JWK.OKP.sign.EdDSA = key => key.private && JWK.OKP.verify.EdDSA(key);\n    JWK.OKP.verify.EdDSA = key => (key.use === 'sig' || key.use === undefined) && key.keyObject.asymmetricKeyType.startsWith('ed');\n  }\n};","map":{"version":3,"names":["sign","signOneShot","verify","verifyOneShot","require","KEYOBJECT","edDSASupported","keyObject","payload","Buffer","from","undefined","signature","module","exports","JWA","JWK","set","OKP","EdDSA","key","private","use","asymmetricKeyType","startsWith"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/jwa/eddsa.js"],"sourcesContent":["const { sign: signOneShot, verify: verifyOneShot } = require('crypto')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst { edDSASupported } = require('../help/runtime_support')\n\nconst sign = ({ [KEYOBJECT]: keyObject }, payload) => {\n  if (typeof payload === 'string') {\n    payload = Buffer.from(payload)\n  }\n  return signOneShot(undefined, payload, keyObject)\n}\n\nconst verify = ({ [KEYOBJECT]: keyObject }, payload, signature) => {\n  return verifyOneShot(undefined, payload, keyObject, signature)\n}\n\nmodule.exports = (JWA, JWK) => {\n  if (edDSASupported) {\n    JWA.sign.set('EdDSA', sign)\n    JWA.verify.set('EdDSA', verify)\n    JWK.OKP.sign.EdDSA = key => key.private && JWK.OKP.verify.EdDSA(key)\n    JWK.OKP.verify.EdDSA = key => (key.use === 'sig' || key.use === undefined) && key.keyObject.asymmetricKeyType.startsWith('ed')\n  }\n}\n"],"mappings":"AAAA,MAAM;EAAEA,IAAI,EAAEC,WAAW;EAAEC,MAAM,EAAEC;AAAc,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEtE,MAAM;EAAEC;AAAU,CAAC,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC/C,MAAM;EAAEE;AAAe,CAAC,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAE7D,MAAMJ,IAAI,GAAGA,CAAC;EAAE,CAACK,SAAS,GAAGE;AAAU,CAAC,EAAEC,OAAO,KAAK;EACpD,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;IAC/BA,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACF,OAAO,CAAC;EAChC;EACA,OAAOP,WAAW,CAACU,SAAS,EAAEH,OAAO,EAAED,SAAS,CAAC;AACnD,CAAC;AAED,MAAML,MAAM,GAAGA,CAAC;EAAE,CAACG,SAAS,GAAGE;AAAU,CAAC,EAAEC,OAAO,EAAEI,SAAS,KAAK;EACjE,OAAOT,aAAa,CAACQ,SAAS,EAAEH,OAAO,EAAED,SAAS,EAAEK,SAAS,CAAC;AAChE,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC7B,IAAIV,cAAc,EAAE;IAClBS,GAAG,CAACf,IAAI,CAACiB,GAAG,CAAC,OAAO,EAAEjB,IAAI,CAAC;IAC3Be,GAAG,CAACb,MAAM,CAACe,GAAG,CAAC,OAAO,EAAEf,MAAM,CAAC;IAC/Bc,GAAG,CAACE,GAAG,CAAClB,IAAI,CAACmB,KAAK,GAAGC,GAAG,IAAIA,GAAG,CAACC,OAAO,IAAIL,GAAG,CAACE,GAAG,CAAChB,MAAM,CAACiB,KAAK,CAACC,GAAG,CAAC;IACpEJ,GAAG,CAACE,GAAG,CAAChB,MAAM,CAACiB,KAAK,GAAGC,GAAG,IAAI,CAACA,GAAG,CAACE,GAAG,KAAK,KAAK,IAAIF,GAAG,CAACE,GAAG,KAAKX,SAAS,KAAKS,GAAG,CAACb,SAAS,CAACgB,iBAAiB,CAACC,UAAU,CAAC,IAAI,CAAC;EAChI;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}