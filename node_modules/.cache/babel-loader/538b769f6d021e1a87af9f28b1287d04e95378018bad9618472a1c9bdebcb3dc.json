{"ast":null,"code":"const {\n  randomBytes\n} = require('crypto');\nconst {\n  createSecretKey\n} = require('../help/key_object');\nconst {\n  KEYLENGTHS\n} = require('../registry');\nconst Key = require('../jwk/key/oct');\nmodule.exports = alg => {\n  const keyLength = KEYLENGTHS.get(alg);\n  if (!keyLength) {\n    return new Key({\n      type: 'secret'\n    });\n  }\n  return new Key(createSecretKey(randomBytes(keyLength / 8)), {\n    use: 'enc',\n    alg\n  });\n};","map":{"version":3,"names":["randomBytes","require","createSecretKey","KEYLENGTHS","Key","module","exports","alg","keyLength","get","type","use"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/jwe/generate_cek.js"],"sourcesContent":["const { randomBytes } = require('crypto')\n\nconst { createSecretKey } = require('../help/key_object')\nconst { KEYLENGTHS } = require('../registry')\nconst Key = require('../jwk/key/oct')\n\nmodule.exports = (alg) => {\n  const keyLength = KEYLENGTHS.get(alg)\n\n  if (!keyLength) {\n    return new Key({ type: 'secret' })\n  }\n\n  return new Key(createSecretKey(randomBytes(keyLength / 8)), { use: 'enc', alg })\n}\n"],"mappings":"AAAA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEzC,MAAM;EAAEC;AAAgB,CAAC,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AACzD,MAAM;EAAEE;AAAW,CAAC,GAAGF,OAAO,CAAC,aAAa,CAAC;AAC7C,MAAMG,GAAG,GAAGH,OAAO,CAAC,gBAAgB,CAAC;AAErCI,MAAM,CAACC,OAAO,GAAIC,GAAG,IAAK;EACxB,MAAMC,SAAS,GAAGL,UAAU,CAACM,GAAG,CAACF,GAAG,CAAC;EAErC,IAAI,CAACC,SAAS,EAAE;IACd,OAAO,IAAIJ,GAAG,CAAC;MAAEM,IAAI,EAAE;IAAS,CAAC,CAAC;EACpC;EAEA,OAAO,IAAIN,GAAG,CAACF,eAAe,CAACF,WAAW,CAACQ,SAAS,GAAG,CAAC,CAAC,CAAC,EAAE;IAAEG,GAAG,EAAE,KAAK;IAAEJ;EAAI,CAAC,CAAC;AAClF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}