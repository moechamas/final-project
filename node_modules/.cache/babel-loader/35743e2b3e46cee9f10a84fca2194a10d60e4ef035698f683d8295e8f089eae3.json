{"ast":null,"code":"const getEvents = async () => {\n  try {\n    const response = await fetch('/api/events');\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching events:', error);\n    throw error;\n  }\n};\n\n// Function to get reservation details\nconst getReservationDetails = (cart, totalCost) => {\n  return {\n    reservationId: generateReservationId(),\n    // Ensure generateReservationId is defined or imported\n    items: cart,\n    total: totalCost,\n    user: 'currentUser' // Replace with actual user information\n    // Add any other necessary details\n  };\n};\n\n// Function to handle proceeding to payment\nconst handleProceedToPayment = async (cart, totalCost, navigate) => {\n  try {\n    const response = await fetch('/reservations', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        items: cart,\n        totalCost: totalCost,\n        user: 'currentUser'\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const reservationDetails = await response.json();\n    console.log('Reservation Details:', reservationDetails);\n    navigate('/my-orders', {\n      state: {\n        reservationId: reservationDetails.reservationId\n      }\n    });\n  } catch (error) {\n    console.error('Error processing payment:', error);\n  }\n};\nexport { getEvents, getReservationDetails, handleProceedToPayment };","map":{"version":3,"names":["getEvents","response","fetch","ok","Error","json","error","console","getReservationDetails","cart","totalCost","reservationId","generateReservationId","items","total","user","handleProceedToPayment","navigate","method","headers","body","JSON","stringify","reservationDetails","log","state"],"sources":["/Users/chamas/Final-Project/final-project/src/backend/handlers.js"],"sourcesContent":["const getEvents = async () => {\n  try {\n    const response = await fetch('/api/events');\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching events:', error);\n    throw error;\n  }\n};\n\n// Function to get reservation details\nconst getReservationDetails = (cart, totalCost) => {\n  return {\n    reservationId: generateReservationId(), // Ensure generateReservationId is defined or imported\n    items: cart,\n    total: totalCost,\n    user: 'currentUser', // Replace with actual user information\n    // Add any other necessary details\n  };\n};\n\n// Function to handle proceeding to payment\nconst handleProceedToPayment = async (cart, totalCost, navigate) => {\n  try {\n    const response = await fetch('/reservations', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ items: cart, totalCost: totalCost, user: 'currentUser' }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    const reservationDetails = await response.json();\n    console.log('Reservation Details:', reservationDetails);\n    navigate('/my-orders', { state: { reservationId: reservationDetails.reservationId } });\n  } catch (error) {\n    console.error('Error processing payment:', error);\n  }\n};\n  \n  \n  export { getEvents, getReservationDetails, handleProceedToPayment };\n  \n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC5B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;IAC3C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAME,qBAAqB,GAAGA,CAACC,IAAI,EAAEC,SAAS,KAAK;EACjD,OAAO;IACLC,aAAa,EAAEC,qBAAqB,CAAC,CAAC;IAAE;IACxCC,KAAK,EAAEJ,IAAI;IACXK,KAAK,EAAEJ,SAAS;IAChBK,IAAI,EAAE,aAAa,CAAE;IACrB;EACF,CAAC;AACH,CAAC;;AAED;AACA,MAAMC,sBAAsB,GAAG,MAAAA,CAAOP,IAAI,EAAEC,SAAS,EAAEO,QAAQ,KAAK;EAClE,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;MAC5CgB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET,KAAK,EAAEJ,IAAI;QAAEC,SAAS,EAAEA,SAAS;QAAEK,IAAI,EAAE;MAAc,CAAC;IACjF,CAAC,CAAC;IAEF,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,MAAMmB,kBAAkB,GAAG,MAAMtB,QAAQ,CAACI,IAAI,CAAC,CAAC;IAChDE,OAAO,CAACiB,GAAG,CAAC,sBAAsB,EAAED,kBAAkB,CAAC;IACvDN,QAAQ,CAAC,YAAY,EAAE;MAAEQ,KAAK,EAAE;QAAEd,aAAa,EAAEY,kBAAkB,CAACZ;MAAc;IAAE,CAAC,CAAC;EACxF,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACnD;AACF,CAAC;AAGC,SAASN,SAAS,EAAEQ,qBAAqB,EAAEQ,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}