{"ast":null,"code":"const {\n  createSign,\n  createVerify,\n  constants\n} = require('crypto');\nconst {\n  KEYOBJECT\n} = require('../help/consts');\nconst resolveNodeAlg = require('../help/node_alg');\nconst {\n  asInput\n} = require('../help/key_object');\nconst sign = (nodeAlg, {\n  [KEYOBJECT]: keyObject\n}, payload) => {\n  const key = asInput(keyObject, false);\n  return createSign(nodeAlg).update(payload).sign({\n    key,\n    padding: constants.RSA_PKCS1_PSS_PADDING,\n    saltLength: constants.RSA_PSS_SALTLEN_DIGEST\n  });\n};\nconst verify = (nodeAlg, {\n  [KEYOBJECT]: keyObject\n}, payload, signature) => {\n  const key = asInput(keyObject, true);\n  return createVerify(nodeAlg).update(payload).verify({\n    key,\n    padding: constants.RSA_PKCS1_PSS_PADDING,\n    saltLength: constants.RSA_PSS_SALTLEN_DIGEST\n  }, signature);\n};\nconst LENGTHS = {\n  PS256: 528,\n  PS384: 784,\n  PS512: 1040\n};\nmodule.exports = (JWA, JWK) => {\n  ['PS256', 'PS384', 'PS512'].forEach(jwaAlg => {\n    const nodeAlg = resolveNodeAlg(jwaAlg);\n    JWA.sign.set(jwaAlg, sign.bind(undefined, nodeAlg));\n    JWA.verify.set(jwaAlg, verify.bind(undefined, nodeAlg));\n    JWK.RSA.sign[jwaAlg] = key => key.private && JWK.RSA.verify[jwaAlg](key);\n    JWK.RSA.verify[jwaAlg] = key => (key.use === 'sig' || key.use === undefined) && key.length >= LENGTHS[jwaAlg];\n  });\n};","map":{"version":3,"names":["createSign","createVerify","constants","require","KEYOBJECT","resolveNodeAlg","asInput","sign","nodeAlg","keyObject","payload","key","update","padding","RSA_PKCS1_PSS_PADDING","saltLength","RSA_PSS_SALTLEN_DIGEST","verify","signature","LENGTHS","PS256","PS384","PS512","module","exports","JWA","JWK","forEach","jwaAlg","set","bind","undefined","RSA","private","use","length"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/jwa/rsassa_pss.js"],"sourcesContent":["const {\n  createSign,\n  createVerify,\n  constants\n} = require('crypto')\n\nconst { KEYOBJECT } = require('../help/consts')\nconst resolveNodeAlg = require('../help/node_alg')\nconst { asInput } = require('../help/key_object')\n\nconst sign = (nodeAlg, { [KEYOBJECT]: keyObject }, payload) => {\n  const key = asInput(keyObject, false)\n  return createSign(nodeAlg).update(payload).sign({\n    key,\n    padding: constants.RSA_PKCS1_PSS_PADDING,\n    saltLength: constants.RSA_PSS_SALTLEN_DIGEST\n  })\n}\n\nconst verify = (nodeAlg, { [KEYOBJECT]: keyObject }, payload, signature) => {\n  const key = asInput(keyObject, true)\n  return createVerify(nodeAlg).update(payload).verify({\n    key,\n    padding: constants.RSA_PKCS1_PSS_PADDING,\n    saltLength: constants.RSA_PSS_SALTLEN_DIGEST\n  }, signature)\n}\n\nconst LENGTHS = {\n  PS256: 528,\n  PS384: 784,\n  PS512: 1040\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['PS256', 'PS384', 'PS512'].forEach((jwaAlg) => {\n    const nodeAlg = resolveNodeAlg(jwaAlg)\n    JWA.sign.set(jwaAlg, sign.bind(undefined, nodeAlg))\n    JWA.verify.set(jwaAlg, verify.bind(undefined, nodeAlg))\n    JWK.RSA.sign[jwaAlg] = key => key.private && JWK.RSA.verify[jwaAlg](key)\n    JWK.RSA.verify[jwaAlg] = key => (key.use === 'sig' || key.use === undefined) && key.length >= LENGTHS[jwaAlg]\n  })\n}\n"],"mappings":"AAAA,MAAM;EACJA,UAAU;EACVC,YAAY;EACZC;AACF,CAAC,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAErB,MAAM;EAAEC;AAAU,CAAC,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC/C,MAAME,cAAc,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAClD,MAAM;EAAEG;AAAQ,CAAC,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAEjD,MAAMI,IAAI,GAAGA,CAACC,OAAO,EAAE;EAAE,CAACJ,SAAS,GAAGK;AAAU,CAAC,EAAEC,OAAO,KAAK;EAC7D,MAAMC,GAAG,GAAGL,OAAO,CAACG,SAAS,EAAE,KAAK,CAAC;EACrC,OAAOT,UAAU,CAACQ,OAAO,CAAC,CAACI,MAAM,CAACF,OAAO,CAAC,CAACH,IAAI,CAAC;IAC9CI,GAAG;IACHE,OAAO,EAAEX,SAAS,CAACY,qBAAqB;IACxCC,UAAU,EAAEb,SAAS,CAACc;EACxB,CAAC,CAAC;AACJ,CAAC;AAED,MAAMC,MAAM,GAAGA,CAACT,OAAO,EAAE;EAAE,CAACJ,SAAS,GAAGK;AAAU,CAAC,EAAEC,OAAO,EAAEQ,SAAS,KAAK;EAC1E,MAAMP,GAAG,GAAGL,OAAO,CAACG,SAAS,EAAE,IAAI,CAAC;EACpC,OAAOR,YAAY,CAACO,OAAO,CAAC,CAACI,MAAM,CAACF,OAAO,CAAC,CAACO,MAAM,CAAC;IAClDN,GAAG;IACHE,OAAO,EAAEX,SAAS,CAACY,qBAAqB;IACxCC,UAAU,EAAEb,SAAS,CAACc;EACxB,CAAC,EAAEE,SAAS,CAAC;AACf,CAAC;AAED,MAAMC,OAAO,GAAG;EACdC,KAAK,EAAE,GAAG;EACVC,KAAK,EAAE,GAAG;EACVC,KAAK,EAAE;AACT,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC7B,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,IAAK;IAC9C,MAAMpB,OAAO,GAAGH,cAAc,CAACuB,MAAM,CAAC;IACtCH,GAAG,CAAClB,IAAI,CAACsB,GAAG,CAACD,MAAM,EAAErB,IAAI,CAACuB,IAAI,CAACC,SAAS,EAAEvB,OAAO,CAAC,CAAC;IACnDiB,GAAG,CAACR,MAAM,CAACY,GAAG,CAACD,MAAM,EAAEX,MAAM,CAACa,IAAI,CAACC,SAAS,EAAEvB,OAAO,CAAC,CAAC;IACvDkB,GAAG,CAACM,GAAG,CAACzB,IAAI,CAACqB,MAAM,CAAC,GAAGjB,GAAG,IAAIA,GAAG,CAACsB,OAAO,IAAIP,GAAG,CAACM,GAAG,CAACf,MAAM,CAACW,MAAM,CAAC,CAACjB,GAAG,CAAC;IACxEe,GAAG,CAACM,GAAG,CAACf,MAAM,CAACW,MAAM,CAAC,GAAGjB,GAAG,IAAI,CAACA,GAAG,CAACuB,GAAG,KAAK,KAAK,IAAIvB,GAAG,CAACuB,GAAG,KAAKH,SAAS,KAAKpB,GAAG,CAACwB,MAAM,IAAIhB,OAAO,CAACS,MAAM,CAAC;EAC/G,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}