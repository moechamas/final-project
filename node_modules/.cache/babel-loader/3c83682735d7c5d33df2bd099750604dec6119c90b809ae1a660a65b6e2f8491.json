{"ast":null,"code":"var _jsxFileName = \"/Users/chamas/Final-Project/final-project/src/components/PaymentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\nimport { CartContext } from './CartContext';\nimport { useHistory } from 'react-router-dom'; // Assuming you're using react-router\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentPage = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const {\n    totalCost,\n    cart\n  } = useContext(CartContext);\n  const history = useHistory();\n  const handlePaymentSubmission = async event => {\n    event.preventDefault();\n    // Implement Stripe payment logic here\n    console.log('Processing payment...');\n\n    // Dummy payment success logic\n    if (stripe && elements) {\n      // Simulate successful payment\n      console.log('Payment successful! Redirecting to orders page...');\n      history.push('/your-orders'); // Redirect to Your Orders page\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePaymentSubmission,\n      children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !stripe,\n        children: \"Submit Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentPage, \"cn4wmOoHG5cfhZKwwmCAv9FXrSU=\", false, function () {\n  return [useStripe, useElements, useHistory];\n});\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useContext","useStripe","useElements","CardElement","CartContext","useHistory","jsxDEV","_jsxDEV","PaymentPage","_s","stripe","elements","totalCost","cart","history","handlePaymentSubmission","event","preventDefault","console","log","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","disabled","_c","$RefreshReg$"],"sources":["/Users/chamas/Final-Project/final-project/src/components/PaymentPage.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\nimport { CartContext } from './CartContext';\nimport { useHistory } from 'react-router-dom'; // Assuming you're using react-router\n\nconst PaymentPage = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const { totalCost, cart } = useContext(CartContext);\n  const history = useHistory();\n\n  const handlePaymentSubmission = async (event) => {\n    event.preventDefault();\n    // Implement Stripe payment logic here\n    console.log('Processing payment...');\n\n    // Dummy payment success logic\n    if (stripe && elements) {\n      // Simulate successful payment\n      console.log('Payment successful! Redirecting to orders page...');\n      history.push('/your-orders'); // Redirect to Your Orders page\n    }\n  };\n\n  return (\n    <div>\n      <h2>Payment Information</h2>\n      <form onSubmit={handlePaymentSubmission}>\n        <CardElement />\n        <button type=\"submit\" disabled={!stripe}>Submit Payment</button>\n      </form>\n    </div>\n  );\n};\n\nexport default PaymentPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,SAAS,EAAEC,WAAW,EAAEC,WAAW,QAAQ,yBAAyB;AAC7E,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,UAAU,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,MAAM,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEU,SAAS;IAAEC;EAAK,CAAC,GAAGb,UAAU,CAACI,WAAW,CAAC;EACnD,MAAMU,OAAO,GAAGT,UAAU,CAAC,CAAC;EAE5B,MAAMU,uBAAuB,GAAG,MAAOC,KAAK,IAAK;IAC/CA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACAC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;;IAEpC;IACA,IAAIT,MAAM,IAAIC,QAAQ,EAAE;MACtB;MACAO,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;MAChEL,OAAO,CAACM,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;IAChC;EACF,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BlB,OAAA;MAAMmB,QAAQ,EAAEX,uBAAwB;MAAAM,QAAA,gBACtCd,OAAA,CAACJ,WAAW;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACflB,OAAA;QAAQoB,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAE,CAAClB,MAAO;QAAAW,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChB,EAAA,CA5BID,WAAW;EAAA,QACAP,SAAS,EACPC,WAAW,EAEZG,UAAU;AAAA;AAAAwB,EAAA,GAJtBrB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}