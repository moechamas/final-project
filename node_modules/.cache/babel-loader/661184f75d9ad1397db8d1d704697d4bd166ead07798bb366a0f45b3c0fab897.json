{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useAuth } from './AuthContext';\nconst useReservation = () => {\n  _s();\n  const {\n    sessionId\n  } = useAuth();\n  const createReservation = async reservationData => {\n    try {\n      // Include the session ID in the reservation data\n      const reservationWithSessionId = {\n        ...reservationData,\n        sessionId\n      };\n      const response = await fetch('http://localhost:3006/api/reservations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reservationWithSessionId)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create reservation');\n      }\n      const createdReservation = await response.json();\n      console.log('Reservation created:', createdReservation);\n      return createdReservation;\n    } catch (error) {\n      console.error('Error creating reservation:', error);\n      throw error; // Propagate the error to the caller\n    }\n  };\n  return {\n    createReservation\n  };\n};\n_s(useReservation, \"7tXyg/nVnr+owm8NM8udLf01HYQ=\", false, function () {\n  return [useAuth];\n});\nexport default useReservation;","map":{"version":3,"names":["useAuth","useReservation","_s","sessionId","createReservation","reservationData","reservationWithSessionId","response","fetch","method","headers","body","JSON","stringify","ok","Error","createdReservation","json","console","log","error"],"sources":["/Users/chamas/Final-Project/final-project/src/components/useReservation.js"],"sourcesContent":["import { useAuth } from './AuthContext';\n\nconst useReservation = () => {\n  const { sessionId } = useAuth();\n\n  const createReservation = async (reservationData) => {\n    try {\n      // Include the session ID in the reservation data\n      const reservationWithSessionId = { ...reservationData, sessionId };\n\n      const response = await fetch('http://localhost:3006/api/reservations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(reservationWithSessionId),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to create reservation');\n      }\n\n      const createdReservation = await response.json();\n      console.log('Reservation created:', createdReservation);\n      return createdReservation;\n    } catch (error) {\n      console.error('Error creating reservation:', error);\n      throw error; // Propagate the error to the caller\n    }\n  };\n\n  return { createReservation };\n};\n\nexport default useReservation;\n"],"mappings":";AAAA,SAASA,OAAO,QAAQ,eAAe;AAEvC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAU,CAAC,GAAGH,OAAO,CAAC,CAAC;EAE/B,MAAMI,iBAAiB,GAAG,MAAOC,eAAe,IAAK;IACnD,IAAI;MACF;MACA,MAAMC,wBAAwB,GAAG;QAAE,GAAGD,eAAe;QAAEF;MAAU,CAAC;MAElE,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,wBAAwB;MAC/C,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEA,MAAMC,kBAAkB,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAChDC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,kBAAkB,CAAC;MACvD,OAAOA,kBAAkB;IAC3B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK,CAAC,CAAC;IACf;EACF,CAAC;EAED,OAAO;IAAEhB;EAAkB,CAAC;AAC9B,CAAC;AAACF,EAAA,CA9BID,cAAc;EAAA,QACID,OAAO;AAAA;AA+B/B,eAAeC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}