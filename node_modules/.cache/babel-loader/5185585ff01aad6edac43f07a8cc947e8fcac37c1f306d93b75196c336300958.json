{"ast":null,"code":"const {\n  JOSECritNotUnderstood,\n  JWSInvalid\n} = require('../errors');\nconst DEFINED = new Set(['alg', 'jku', 'jwk', 'kid', 'x5u', 'x5c', 'x5t', 'x5t#S256', 'typ', 'cty', 'crit', 'enc', 'zip', 'epk', 'apu', 'apv', 'iv', 'tag', 'p2s', 'p2c']);\nmodule.exports = function validateCrit(Err, protectedHeader, unprotectedHeader, understood) {\n  if (protectedHeader && 'crit' in protectedHeader) {\n    if (!Array.isArray(protectedHeader.crit) || protectedHeader.crit.length === 0 || protectedHeader.crit.some(s => typeof s !== 'string' || !s)) {\n      throw new Err('\"crit\" Header Parameter MUST be an array of non-empty strings when present');\n    }\n    const whitelisted = new Set(understood);\n    const combined = {\n      ...protectedHeader,\n      ...unprotectedHeader\n    };\n    protectedHeader.crit.forEach(parameter => {\n      if (DEFINED.has(parameter)) {\n        throw new Err(`The critical list contains a non-extension Header Parameter ${parameter}`);\n      }\n      if (!whitelisted.has(parameter)) {\n        throw new JOSECritNotUnderstood(`critical \"${parameter}\" is not understood`);\n      }\n      if (parameter === 'b64') {\n        if (!('b64' in protectedHeader)) {\n          throw new JWSInvalid('\"b64\" critical parameter must be integrity protected');\n        }\n        if (typeof protectedHeader.b64 !== 'boolean') {\n          throw new JWSInvalid('\"b64\" critical parameter must be a boolean');\n        }\n      } else if (!(parameter in combined)) {\n        throw new Err(`critical parameter \"${parameter}\" is missing`);\n      }\n    });\n  }\n  if (unprotectedHeader && 'crit' in unprotectedHeader) {\n    throw new Err('\"crit\" Header Parameter MUST be integrity protected when present');\n  }\n};","map":{"version":3,"names":["JOSECritNotUnderstood","JWSInvalid","require","DEFINED","Set","module","exports","validateCrit","Err","protectedHeader","unprotectedHeader","understood","Array","isArray","crit","length","some","s","whitelisted","combined","forEach","parameter","has","b64"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/help/validate_crit.js"],"sourcesContent":["const { JOSECritNotUnderstood, JWSInvalid } = require('../errors')\n\nconst DEFINED = new Set([\n  'alg', 'jku', 'jwk', 'kid', 'x5u', 'x5c', 'x5t', 'x5t#S256', 'typ', 'cty',\n  'crit', 'enc', 'zip', 'epk', 'apu', 'apv', 'iv', 'tag', 'p2s', 'p2c'\n])\n\nmodule.exports = function validateCrit (Err, protectedHeader, unprotectedHeader, understood) {\n  if (protectedHeader && 'crit' in protectedHeader) {\n    if (\n      !Array.isArray(protectedHeader.crit) ||\n      protectedHeader.crit.length === 0 ||\n      protectedHeader.crit.some(s => typeof s !== 'string' || !s)\n    ) {\n      throw new Err('\"crit\" Header Parameter MUST be an array of non-empty strings when present')\n    }\n    const whitelisted = new Set(understood)\n    const combined = { ...protectedHeader, ...unprotectedHeader }\n    protectedHeader.crit.forEach((parameter) => {\n      if (DEFINED.has(parameter)) {\n        throw new Err(`The critical list contains a non-extension Header Parameter ${parameter}`)\n      }\n      if (!whitelisted.has(parameter)) {\n        throw new JOSECritNotUnderstood(`critical \"${parameter}\" is not understood`)\n      }\n      if (parameter === 'b64') {\n        if (!('b64' in protectedHeader)) {\n          throw new JWSInvalid('\"b64\" critical parameter must be integrity protected')\n        }\n        if (typeof protectedHeader.b64 !== 'boolean') {\n          throw new JWSInvalid('\"b64\" critical parameter must be a boolean')\n        }\n      } else if (!(parameter in combined)) {\n        throw new Err(`critical parameter \"${parameter}\" is missing`)\n      }\n    })\n  }\n  if (unprotectedHeader && 'crit' in unprotectedHeader) {\n    throw new Err('\"crit\" Header Parameter MUST be integrity protected when present')\n  }\n}\n"],"mappings":"AAAA,MAAM;EAAEA,qBAAqB;EAAEC;AAAW,CAAC,GAAGC,OAAO,CAAC,WAAW,CAAC;AAElE,MAAMC,OAAO,GAAG,IAAIC,GAAG,CAAC,CACtB,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EACzE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CACrE,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAG,SAASC,YAAYA,CAAEC,GAAG,EAAEC,eAAe,EAAEC,iBAAiB,EAAEC,UAAU,EAAE;EAC3F,IAAIF,eAAe,IAAI,MAAM,IAAIA,eAAe,EAAE;IAChD,IACE,CAACG,KAAK,CAACC,OAAO,CAACJ,eAAe,CAACK,IAAI,CAAC,IACpCL,eAAe,CAACK,IAAI,CAACC,MAAM,KAAK,CAAC,IACjCN,eAAe,CAACK,IAAI,CAACE,IAAI,CAACC,CAAC,IAAI,OAAOA,CAAC,KAAK,QAAQ,IAAI,CAACA,CAAC,CAAC,EAC3D;MACA,MAAM,IAAIT,GAAG,CAAC,4EAA4E,CAAC;IAC7F;IACA,MAAMU,WAAW,GAAG,IAAId,GAAG,CAACO,UAAU,CAAC;IACvC,MAAMQ,QAAQ,GAAG;MAAE,GAAGV,eAAe;MAAE,GAAGC;IAAkB,CAAC;IAC7DD,eAAe,CAACK,IAAI,CAACM,OAAO,CAAEC,SAAS,IAAK;MAC1C,IAAIlB,OAAO,CAACmB,GAAG,CAACD,SAAS,CAAC,EAAE;QAC1B,MAAM,IAAIb,GAAG,CAAE,+DAA8Da,SAAU,EAAC,CAAC;MAC3F;MACA,IAAI,CAACH,WAAW,CAACI,GAAG,CAACD,SAAS,CAAC,EAAE;QAC/B,MAAM,IAAIrB,qBAAqB,CAAE,aAAYqB,SAAU,qBAAoB,CAAC;MAC9E;MACA,IAAIA,SAAS,KAAK,KAAK,EAAE;QACvB,IAAI,EAAE,KAAK,IAAIZ,eAAe,CAAC,EAAE;UAC/B,MAAM,IAAIR,UAAU,CAAC,sDAAsD,CAAC;QAC9E;QACA,IAAI,OAAOQ,eAAe,CAACc,GAAG,KAAK,SAAS,EAAE;UAC5C,MAAM,IAAItB,UAAU,CAAC,4CAA4C,CAAC;QACpE;MACF,CAAC,MAAM,IAAI,EAAEoB,SAAS,IAAIF,QAAQ,CAAC,EAAE;QACnC,MAAM,IAAIX,GAAG,CAAE,uBAAsBa,SAAU,cAAa,CAAC;MAC/D;IACF,CAAC,CAAC;EACJ;EACA,IAAIX,iBAAiB,IAAI,MAAM,IAAIA,iBAAiB,EAAE;IACpD,MAAM,IAAIF,GAAG,CAAC,kEAAkE,CAAC;EACnF;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}