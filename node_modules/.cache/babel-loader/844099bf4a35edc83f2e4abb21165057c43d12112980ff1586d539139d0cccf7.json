{"ast":null,"code":"var _jsxFileName = \"/Users/chamas/Final-Project/final-project/src/components/CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react'; // Corrected imports\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext(); // Ensure this is correctly exported\n\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [totalCost, setTotalCost] = useState(0);\n  const addToCart = item => {\n    // Implement logic to add the item to the cart\n    const updatedCart = [...cart, item]; // Simplified example, adjust as needed\n    setCart(updatedCart);\n    // Optionally update totalCost here or in an effect\n  };\n  useEffect(() => {\n    // Example: Update totalCost whenever cart changes\n    const total = cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    setTotalCost(total);\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      totalCost\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"VHo73zjNy6wE9tLd94aYTh14kHE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","totalCost","setTotalCost","addToCart","item","updatedCart","total","reduce","acc","price","quantity","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chamas/Final-Project/final-project/src/components/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react'; // Corrected imports\n\nexport const CartContext = createContext(); // Ensure this is correctly exported\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const [totalCost, setTotalCost] = useState(0);\n\n  const addToCart = (item) => {\n    // Implement logic to add the item to the cart\n    const updatedCart = [...cart, item]; // Simplified example, adjust as needed\n    setCart(updatedCart);\n    // Optionally update totalCost here or in an effect\n  };\n\n  useEffect(() => {\n    // Example: Update totalCost whenever cart changes\n    const total = cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    setTotalCost(total);\n  }, [cart]);\n\n  return (\n    <CartContext.Provider value={{ cart, addToCart, totalCost }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC,CAAC,CAAC;;AAE5C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAMY,SAAS,GAAIC,IAAI,IAAK;IAC1B;IACA,MAAMC,WAAW,GAAG,CAAC,GAAGN,IAAI,EAAEK,IAAI,CAAC,CAAC,CAAC;IACrCJ,OAAO,CAACK,WAAW,CAAC;IACpB;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,KAAK,GAAGP,IAAI,CAACQ,MAAM,CAAC,CAACC,GAAG,EAAEJ,IAAI,KAAKI,GAAG,GAAGJ,IAAI,CAACK,KAAK,GAAGL,IAAI,CAACM,QAAQ,EAAE,CAAC,CAAC;IAC7ER,YAAY,CAACI,KAAK,CAAC;EACrB,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,IAAI;MAAEI,SAAS;MAAEF;IAAU,CAAE;IAAAJ,QAAA,EACzDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,EAAA,CAtBWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}