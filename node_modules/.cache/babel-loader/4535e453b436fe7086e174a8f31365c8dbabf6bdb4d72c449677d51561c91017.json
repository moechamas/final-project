{"ast":null,"code":"const asn1 = require('@panva/asn1.js');\nconst types = new Map();\nconst AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', require('./algorithm_identifier'));\ntypes.set('AlgorithmIdentifier', AlgorithmIdentifier);\nconst ECPrivateKey = asn1.define('ECPrivateKey', require('./ec_private_key'));\ntypes.set('ECPrivateKey', ECPrivateKey);\nconst PrivateKeyInfo = asn1.define('PrivateKeyInfo', require('./private_key_info')(AlgorithmIdentifier));\ntypes.set('PrivateKeyInfo', PrivateKeyInfo);\nconst PublicKeyInfo = asn1.define('PublicKeyInfo', require('./public_key_info')(AlgorithmIdentifier));\ntypes.set('PublicKeyInfo', PublicKeyInfo);\nconst PrivateKey = asn1.define('PrivateKey', require('./private_key'));\ntypes.set('PrivateKey', PrivateKey);\nconst OneAsymmetricKey = asn1.define('OneAsymmetricKey', require('./one_asymmetric_key')(AlgorithmIdentifier, PrivateKey));\ntypes.set('OneAsymmetricKey', OneAsymmetricKey);\nconst RSAPrivateKey = asn1.define('RSAPrivateKey', require('./rsa_private_key'));\ntypes.set('RSAPrivateKey', RSAPrivateKey);\nconst RSAPublicKey = asn1.define('RSAPublicKey', require('./rsa_public_key'));\ntypes.set('RSAPublicKey', RSAPublicKey);\nmodule.exports = types;","map":{"version":3,"names":["asn1","require","types","Map","AlgorithmIdentifier","define","set","ECPrivateKey","PrivateKeyInfo","PublicKeyInfo","PrivateKey","OneAsymmetricKey","RSAPrivateKey","RSAPublicKey","module","exports"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/help/asn1/index.js"],"sourcesContent":["const asn1 = require('@panva/asn1.js')\n\nconst types = new Map()\n\nconst AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', require('./algorithm_identifier'))\ntypes.set('AlgorithmIdentifier', AlgorithmIdentifier)\n\nconst ECPrivateKey = asn1.define('ECPrivateKey', require('./ec_private_key'))\ntypes.set('ECPrivateKey', ECPrivateKey)\n\nconst PrivateKeyInfo = asn1.define('PrivateKeyInfo', require('./private_key_info')(AlgorithmIdentifier))\ntypes.set('PrivateKeyInfo', PrivateKeyInfo)\n\nconst PublicKeyInfo = asn1.define('PublicKeyInfo', require('./public_key_info')(AlgorithmIdentifier))\ntypes.set('PublicKeyInfo', PublicKeyInfo)\n\nconst PrivateKey = asn1.define('PrivateKey', require('./private_key'))\ntypes.set('PrivateKey', PrivateKey)\n\nconst OneAsymmetricKey = asn1.define('OneAsymmetricKey', require('./one_asymmetric_key')(AlgorithmIdentifier, PrivateKey))\ntypes.set('OneAsymmetricKey', OneAsymmetricKey)\n\nconst RSAPrivateKey = asn1.define('RSAPrivateKey', require('./rsa_private_key'))\ntypes.set('RSAPrivateKey', RSAPrivateKey)\n\nconst RSAPublicKey = asn1.define('RSAPublicKey', require('./rsa_public_key'))\ntypes.set('RSAPublicKey', RSAPublicKey)\n\nmodule.exports = types\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAEtC,MAAMC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;AAEvB,MAAMC,mBAAmB,GAAGJ,IAAI,CAACK,MAAM,CAAC,qBAAqB,EAAEJ,OAAO,CAAC,wBAAwB,CAAC,CAAC;AACjGC,KAAK,CAACI,GAAG,CAAC,qBAAqB,EAAEF,mBAAmB,CAAC;AAErD,MAAMG,YAAY,GAAGP,IAAI,CAACK,MAAM,CAAC,cAAc,EAAEJ,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC7EC,KAAK,CAACI,GAAG,CAAC,cAAc,EAAEC,YAAY,CAAC;AAEvC,MAAMC,cAAc,GAAGR,IAAI,CAACK,MAAM,CAAC,gBAAgB,EAAEJ,OAAO,CAAC,oBAAoB,CAAC,CAACG,mBAAmB,CAAC,CAAC;AACxGF,KAAK,CAACI,GAAG,CAAC,gBAAgB,EAAEE,cAAc,CAAC;AAE3C,MAAMC,aAAa,GAAGT,IAAI,CAACK,MAAM,CAAC,eAAe,EAAEJ,OAAO,CAAC,mBAAmB,CAAC,CAACG,mBAAmB,CAAC,CAAC;AACrGF,KAAK,CAACI,GAAG,CAAC,eAAe,EAAEG,aAAa,CAAC;AAEzC,MAAMC,UAAU,GAAGV,IAAI,CAACK,MAAM,CAAC,YAAY,EAAEJ,OAAO,CAAC,eAAe,CAAC,CAAC;AACtEC,KAAK,CAACI,GAAG,CAAC,YAAY,EAAEI,UAAU,CAAC;AAEnC,MAAMC,gBAAgB,GAAGX,IAAI,CAACK,MAAM,CAAC,kBAAkB,EAAEJ,OAAO,CAAC,sBAAsB,CAAC,CAACG,mBAAmB,EAAEM,UAAU,CAAC,CAAC;AAC1HR,KAAK,CAACI,GAAG,CAAC,kBAAkB,EAAEK,gBAAgB,CAAC;AAE/C,MAAMC,aAAa,GAAGZ,IAAI,CAACK,MAAM,CAAC,eAAe,EAAEJ,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAChFC,KAAK,CAACI,GAAG,CAAC,eAAe,EAAEM,aAAa,CAAC;AAEzC,MAAMC,YAAY,GAAGb,IAAI,CAACK,MAAM,CAAC,cAAc,EAAEJ,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC7EC,KAAK,CAACI,GAAG,CAAC,cAAc,EAAEO,YAAY,CAAC;AAEvCC,MAAM,CAACC,OAAO,GAAGb,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}