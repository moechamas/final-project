{"ast":null,"code":"const Joi = require('joi');\nconst crypto = require('crypto');\nconst {\n  defaultState: getLoginState\n} = require('./hooks/getLoginState');\nconst isHttps = /^https:/i;\nconst defaultSessionIdGenerator = () => crypto.randomBytes(16).toString('hex');\nconst paramsSchema = Joi.object({\n  secret: Joi.alternatives([Joi.string().min(8), Joi.binary().min(8), Joi.array().items(Joi.string().min(8), Joi.binary().min(8))]).required(),\n  session: Joi.object({\n    rolling: Joi.boolean().optional().default(true),\n    rollingDuration: Joi.when(Joi.ref('rolling'), {\n      is: true,\n      then: Joi.number().integer().messages({\n        'number.base': '\"session.rollingDuration\" must be provided an integer value when \"session.rolling\" is true'\n      }),\n      otherwise: Joi.boolean().valid(false).messages({\n        'any.only': '\"session.rollingDuration\" must be false when \"session.rolling\" is disabled'\n      })\n    }).optional().default(parent => parent.rolling ? 24 * 60 * 60 : false),\n    // 1 day when rolling is enabled, else false\n    absoluteDuration: Joi.when(Joi.ref('rolling'), {\n      is: false,\n      then: Joi.number().integer().messages({\n        'number.base': '\"session.absoluteDuration\" must be provided an integer value when \"session.rolling\" is false'\n      }),\n      otherwise: Joi.alternatives([Joi.number().integer(), Joi.boolean().valid(false)])\n    }).optional().default(7 * 24 * 60 * 60),\n    // 7 days,\n    name: Joi.string().pattern(/^[0-9a-zA-Z_.-]+$/, {\n      name: 'cookie name'\n    }).optional().default('appSession'),\n    store: Joi.object().optional().when(Joi.ref('/backchannelLogout'), {\n      not: false,\n      then: Joi.when('/backchannelLogout.store', {\n        not: Joi.exist(),\n        then: Joi.when('/backchannelLogout.isLoggedOut', {\n          not: Joi.exist(),\n          then: Joi.object().required().messages({\n            'any.required': `Back-Channel Logout requires a \"backchannelLogout.store\" (you can also reuse \"session.store\" if you have stateful sessions) or custom hooks for \"isLoggedOut\" and \"onLogoutToken\".`\n          })\n        })\n      })\n    }),\n    genid: Joi.function().maxArity(1).optional().default(() => defaultSessionIdGenerator),\n    signSessionStoreCookie: Joi.boolean().optional().default(false),\n    requireSignedSessionStoreCookie: Joi.boolean().optional().default(Joi.ref('signSessionStoreCookie')),\n    cookie: Joi.object({\n      domain: Joi.string().optional(),\n      transient: Joi.boolean().optional().default(false),\n      httpOnly: Joi.boolean().optional().default(true),\n      sameSite: Joi.string().valid('Lax', 'Strict', 'None').optional().default('Lax'),\n      secure: Joi.when(Joi.ref('/baseURL'), {\n        is: Joi.string().pattern(isHttps),\n        then: Joi.boolean().default(true).custom((value, {\n          warn\n        }) => {\n          if (!value) warn('insecure.cookie');\n          return value;\n        }).messages({\n          'insecure.cookie': \"Setting your cookie to insecure when over https is not recommended, I hope you know what you're doing.\"\n        }),\n        otherwise: Joi.boolean().valid(false).default(false).messages({\n          'any.only': 'Cookies set with the `Secure` property wont be attached to http requests'\n        })\n      }),\n      path: Joi.string().uri({\n        relativeOnly: true\n      }).optional()\n    }).default().unknown(false)\n  }).default().unknown(false),\n  transactionCookie: Joi.object({\n    sameSite: Joi.string().valid('Lax', 'Strict', 'None').optional().default(Joi.ref('...session.cookie.sameSite')),\n    name: Joi.string().optional().default('auth_verification')\n  }).default().unknown(false),\n  auth0Logout: Joi.boolean().optional(),\n  tokenEndpointParams: Joi.object().optional(),\n  authorizationParams: Joi.object({\n    response_type: Joi.string().optional().valid('id_token', 'code id_token', 'code').default('id_token'),\n    scope: Joi.string().optional().pattern(/\\bopenid\\b/, 'contains openid').default('openid profile email'),\n    response_mode: Joi.string().optional().when('response_type', {\n      is: 'code',\n      then: Joi.valid('query', 'form_post'),\n      otherwise: Joi.valid('form_post').default('form_post')\n    })\n  }).optional().unknown(true).default(),\n  logoutParams: Joi.object().optional(),\n  backchannelLogout: Joi.alternatives([Joi.object({\n    store: Joi.object().optional(),\n    onLogin: Joi.alternatives([Joi.function(), Joi.boolean().valid(false)]).optional(),\n    isLoggedOut: Joi.alternatives([Joi.function(), Joi.boolean().valid(false)]).optional(),\n    onLogoutToken: Joi.function().optional()\n  }), Joi.boolean()]).default(false),\n  baseURL: Joi.string().uri().required().when(Joi.ref('authorizationParams.response_mode'), {\n    is: 'form_post',\n    then: Joi.string().pattern(isHttps).rule({\n      warn: true,\n      message: `Using 'form_post' for response_mode may cause issues for you logging in over http, see https://github.com/auth0/express-openid-connect/blob/master/FAQ.md`\n    })\n  }),\n  clientID: Joi.string().required(),\n  clientSecret: Joi.string().when(Joi.ref('clientAuthMethod', {\n    adjust: value => value && value.includes('client_secret')\n  }), {\n    is: true,\n    then: Joi.string().required().messages({\n      'any.required': `\"clientSecret\" is required for the \"clientAuthMethod\" \"{{clientAuthMethod}}\"`\n    })\n  }).when(Joi.ref('idTokenSigningAlg', {\n    adjust: value => value && value.startsWith('HS')\n  }), {\n    is: true,\n    then: Joi.string().required().messages({\n      'any.required': '\"clientSecret\" is required for ID tokens with HMAC based algorithms'\n    })\n  }),\n  clockTolerance: Joi.number().optional().default(60),\n  enableTelemetry: Joi.boolean().optional().default(true),\n  errorOnRequiredAuth: Joi.boolean().optional().default(false),\n  attemptSilentLogin: Joi.boolean().optional().default(false),\n  getLoginState: Joi.function().optional().default(() => getLoginState),\n  afterCallback: Joi.function().optional(),\n  identityClaimFilter: Joi.array().optional().default(['aud', 'iss', 'iat', 'exp', 'nbf', 'nonce', 'azp', 'auth_time', 's_hash', 'at_hash', 'c_hash']),\n  idpLogout: Joi.boolean().optional().default(parent => parent.auth0Logout || false),\n  idTokenSigningAlg: Joi.string().insensitive().not('none').optional().default('RS256'),\n  issuerBaseURL: Joi.string().uri().required(),\n  legacySameSiteCookie: Joi.boolean().optional().default(true),\n  authRequired: Joi.boolean().optional().default(true),\n  pushedAuthorizationRequests: Joi.boolean().optional().default(false),\n  routes: Joi.object({\n    login: Joi.alternatives([Joi.string().uri({\n      relativeOnly: true\n    }), Joi.boolean().valid(false)]).default('/login'),\n    logout: Joi.alternatives([Joi.string().uri({\n      relativeOnly: true\n    }), Joi.boolean().valid(false)]).default('/logout'),\n    callback: Joi.alternatives([Joi.string().uri({\n      relativeOnly: true\n    }), Joi.boolean().valid(false)]).default('/callback'),\n    postLogoutRedirect: Joi.string().uri({\n      allowRelative: true\n    }).default(''),\n    backchannelLogout: Joi.string().uri({\n      allowRelative: true\n    }).default('/backchannel-logout')\n  }).default().unknown(false),\n  clientAuthMethod: Joi.string().valid('client_secret_basic', 'client_secret_post', 'client_secret_jwt', 'private_key_jwt', 'none').optional().default(parent => {\n    if (parent.authorizationParams.response_type === 'id_token' && !parent.pushedAuthorizationRequests) {\n      return 'none';\n    }\n    if (parent.clientAssertionSigningKey) {\n      return 'private_key_jwt';\n    }\n    return 'client_secret_basic';\n  }).when(Joi.ref('authorizationParams.response_type', {\n    adjust: value => value && value.includes('code')\n  }), {\n    is: true,\n    then: Joi.string().invalid('none').messages({\n      'any.only': 'Public code flow clients are not supported.'\n    })\n  }).when(Joi.ref('pushedAuthorizationRequests'), {\n    is: true,\n    then: Joi.string().invalid('none').messages({\n      'any.only': 'Public PAR clients are not supported.'\n    })\n  }),\n  clientAssertionSigningKey: Joi.any().optional().when(Joi.ref('clientAuthMethod'), {\n    is: 'private_key_jwt',\n    then: Joi.any().required().messages({\n      'any.required': '\"clientAssertionSigningKey\" is required for a \"clientAuthMethod\" of \"private_key_jwt\"'\n    })\n  }),\n  // <Object> | <string> | <Buffer> | <KeyObject>,\n  clientAssertionSigningAlg: Joi.string().valid('RS256', 'RS384', 'RS512', 'PS256', 'PS384', 'PS512', 'ES256', 'ES256K', 'ES384', 'ES512', 'EdDSA').optional(),\n  discoveryCacheMaxAge: Joi.number().optional().min(0).default(10 * 60 * 1000),\n  httpTimeout: Joi.number().optional().min(500).default(5000),\n  httpUserAgent: Joi.string().optional(),\n  httpAgent: Joi.object().optional()\n});\nmodule.exports.get = function (config = {}) {\n  config = {\n    secret: process.env.SECRET,\n    issuerBaseURL: process.env.ISSUER_BASE_URL,\n    baseURL: process.env.BASE_URL,\n    clientID: process.env.CLIENT_ID,\n    clientSecret: process.env.CLIENT_SECRET,\n    ...config\n  };\n  const {\n    value,\n    error,\n    warning\n  } = paramsSchema.validate(config);\n  if (error) {\n    throw new TypeError(error.details[0].message);\n  }\n  if (warning) {\n    console.warn(warning.message);\n  }\n  return value;\n};","map":{"version":3,"names":["Joi","require","crypto","defaultState","getLoginState","isHttps","defaultSessionIdGenerator","randomBytes","toString","paramsSchema","object","secret","alternatives","string","min","binary","array","items","required","session","rolling","boolean","optional","default","rollingDuration","when","ref","is","then","number","integer","messages","otherwise","valid","parent","absoluteDuration","name","pattern","store","not","exist","genid","function","maxArity","signSessionStoreCookie","requireSignedSessionStoreCookie","cookie","domain","transient","httpOnly","sameSite","secure","custom","value","warn","path","uri","relativeOnly","unknown","transactionCookie","auth0Logout","tokenEndpointParams","authorizationParams","response_type","scope","response_mode","logoutParams","backchannelLogout","onLogin","isLoggedOut","onLogoutToken","baseURL","rule","message","clientID","clientSecret","adjust","includes","startsWith","clockTolerance","enableTelemetry","errorOnRequiredAuth","attemptSilentLogin","afterCallback","identityClaimFilter","idpLogout","idTokenSigningAlg","insensitive","issuerBaseURL","legacySameSiteCookie","authRequired","pushedAuthorizationRequests","routes","login","logout","callback","postLogoutRedirect","allowRelative","clientAuthMethod","clientAssertionSigningKey","invalid","any","clientAssertionSigningAlg","discoveryCacheMaxAge","httpTimeout","httpUserAgent","httpAgent","module","exports","get","config","process","env","SECRET","ISSUER_BASE_URL","BASE_URL","CLIENT_ID","CLIENT_SECRET","error","warning","validate","TypeError","details","console"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/express-openid-connect/lib/config.js"],"sourcesContent":["const Joi = require('joi');\nconst crypto = require('crypto');\nconst { defaultState: getLoginState } = require('./hooks/getLoginState');\nconst isHttps = /^https:/i;\n\nconst defaultSessionIdGenerator = () => crypto.randomBytes(16).toString('hex');\n\nconst paramsSchema = Joi.object({\n  secret: Joi.alternatives([\n    Joi.string().min(8),\n    Joi.binary().min(8),\n    Joi.array().items(Joi.string().min(8), Joi.binary().min(8)),\n  ]).required(),\n  session: Joi.object({\n    rolling: Joi.boolean().optional().default(true),\n    rollingDuration: Joi.when(Joi.ref('rolling'), {\n      is: true,\n      then: Joi.number().integer().messages({\n        'number.base':\n          '\"session.rollingDuration\" must be provided an integer value when \"session.rolling\" is true',\n      }),\n      otherwise: Joi.boolean().valid(false).messages({\n        'any.only':\n          '\"session.rollingDuration\" must be false when \"session.rolling\" is disabled',\n      }),\n    })\n      .optional()\n      .default((parent) => (parent.rolling ? 24 * 60 * 60 : false)), // 1 day when rolling is enabled, else false\n    absoluteDuration: Joi.when(Joi.ref('rolling'), {\n      is: false,\n      then: Joi.number().integer().messages({\n        'number.base':\n          '\"session.absoluteDuration\" must be provided an integer value when \"session.rolling\" is false',\n      }),\n      otherwise: Joi.alternatives([\n        Joi.number().integer(),\n        Joi.boolean().valid(false),\n      ]),\n    })\n      .optional()\n      .default(7 * 24 * 60 * 60), // 7 days,\n    name: Joi.string()\n      .pattern(/^[0-9a-zA-Z_.-]+$/, { name: 'cookie name' })\n      .optional()\n      .default('appSession'),\n    store: Joi.object()\n      .optional()\n      .when(Joi.ref('/backchannelLogout'), {\n        not: false,\n        then: Joi.when('/backchannelLogout.store', {\n          not: Joi.exist(),\n          then: Joi.when('/backchannelLogout.isLoggedOut', {\n            not: Joi.exist(),\n            then: Joi.object().required().messages({\n              'any.required': `Back-Channel Logout requires a \"backchannelLogout.store\" (you can also reuse \"session.store\" if you have stateful sessions) or custom hooks for \"isLoggedOut\" and \"onLogoutToken\".`,\n            }),\n          }),\n        }),\n      }),\n    genid: Joi.function()\n      .maxArity(1)\n      .optional()\n      .default(() => defaultSessionIdGenerator),\n    signSessionStoreCookie: Joi.boolean().optional().default(false),\n    requireSignedSessionStoreCookie: Joi.boolean()\n      .optional()\n      .default(Joi.ref('signSessionStoreCookie')),\n    cookie: Joi.object({\n      domain: Joi.string().optional(),\n      transient: Joi.boolean().optional().default(false),\n      httpOnly: Joi.boolean().optional().default(true),\n      sameSite: Joi.string()\n        .valid('Lax', 'Strict', 'None')\n        .optional()\n        .default('Lax'),\n      secure: Joi.when(Joi.ref('/baseURL'), {\n        is: Joi.string().pattern(isHttps),\n        then: Joi.boolean()\n          .default(true)\n          .custom((value, { warn }) => {\n            if (!value) warn('insecure.cookie');\n            return value;\n          })\n          .messages({\n            'insecure.cookie':\n              \"Setting your cookie to insecure when over https is not recommended, I hope you know what you're doing.\",\n          }),\n        otherwise: Joi.boolean().valid(false).default(false).messages({\n          'any.only':\n            'Cookies set with the `Secure` property wont be attached to http requests',\n        }),\n      }),\n      path: Joi.string().uri({ relativeOnly: true }).optional(),\n    })\n      .default()\n      .unknown(false),\n  })\n    .default()\n    .unknown(false),\n  transactionCookie: Joi.object({\n    sameSite: Joi.string()\n      .valid('Lax', 'Strict', 'None')\n      .optional()\n      .default(Joi.ref('...session.cookie.sameSite')),\n    name: Joi.string().optional().default('auth_verification'),\n  })\n    .default()\n    .unknown(false),\n  auth0Logout: Joi.boolean().optional(),\n  tokenEndpointParams: Joi.object().optional(),\n  authorizationParams: Joi.object({\n    response_type: Joi.string()\n      .optional()\n      .valid('id_token', 'code id_token', 'code')\n      .default('id_token'),\n    scope: Joi.string()\n      .optional()\n      .pattern(/\\bopenid\\b/, 'contains openid')\n      .default('openid profile email'),\n    response_mode: Joi.string()\n      .optional()\n      .when('response_type', {\n        is: 'code',\n        then: Joi.valid('query', 'form_post'),\n        otherwise: Joi.valid('form_post').default('form_post'),\n      }),\n  })\n    .optional()\n    .unknown(true)\n    .default(),\n  logoutParams: Joi.object().optional(),\n  backchannelLogout: Joi.alternatives([\n    Joi.object({\n      store: Joi.object().optional(),\n      onLogin: Joi.alternatives([\n        Joi.function(),\n        Joi.boolean().valid(false),\n      ]).optional(),\n      isLoggedOut: Joi.alternatives([\n        Joi.function(),\n        Joi.boolean().valid(false),\n      ]).optional(),\n      onLogoutToken: Joi.function().optional(),\n    }),\n    Joi.boolean(),\n  ]).default(false),\n  baseURL: Joi.string()\n    .uri()\n    .required()\n    .when(Joi.ref('authorizationParams.response_mode'), {\n      is: 'form_post',\n      then: Joi.string().pattern(isHttps).rule({\n        warn: true,\n        message: `Using 'form_post' for response_mode may cause issues for you logging in over http, see https://github.com/auth0/express-openid-connect/blob/master/FAQ.md`,\n      }),\n    }),\n  clientID: Joi.string().required(),\n  clientSecret: Joi.string()\n    .when(\n      Joi.ref('clientAuthMethod', {\n        adjust: (value) => value && value.includes('client_secret'),\n      }),\n      {\n        is: true,\n        then: Joi.string().required().messages({\n          'any.required': `\"clientSecret\" is required for the \"clientAuthMethod\" \"{{clientAuthMethod}}\"`,\n        }),\n      }\n    )\n    .when(\n      Joi.ref('idTokenSigningAlg', {\n        adjust: (value) => value && value.startsWith('HS'),\n      }),\n      {\n        is: true,\n        then: Joi.string().required().messages({\n          'any.required':\n            '\"clientSecret\" is required for ID tokens with HMAC based algorithms',\n        }),\n      }\n    ),\n  clockTolerance: Joi.number().optional().default(60),\n  enableTelemetry: Joi.boolean().optional().default(true),\n  errorOnRequiredAuth: Joi.boolean().optional().default(false),\n  attemptSilentLogin: Joi.boolean().optional().default(false),\n  getLoginState: Joi.function()\n    .optional()\n    .default(() => getLoginState),\n  afterCallback: Joi.function().optional(),\n  identityClaimFilter: Joi.array()\n    .optional()\n    .default([\n      'aud',\n      'iss',\n      'iat',\n      'exp',\n      'nbf',\n      'nonce',\n      'azp',\n      'auth_time',\n      's_hash',\n      'at_hash',\n      'c_hash',\n    ]),\n  idpLogout: Joi.boolean()\n    .optional()\n    .default((parent) => parent.auth0Logout || false),\n  idTokenSigningAlg: Joi.string()\n    .insensitive()\n    .not('none')\n    .optional()\n    .default('RS256'),\n  issuerBaseURL: Joi.string().uri().required(),\n  legacySameSiteCookie: Joi.boolean().optional().default(true),\n  authRequired: Joi.boolean().optional().default(true),\n  pushedAuthorizationRequests: Joi.boolean().optional().default(false),\n  routes: Joi.object({\n    login: Joi.alternatives([\n      Joi.string().uri({ relativeOnly: true }),\n      Joi.boolean().valid(false),\n    ]).default('/login'),\n    logout: Joi.alternatives([\n      Joi.string().uri({ relativeOnly: true }),\n      Joi.boolean().valid(false),\n    ]).default('/logout'),\n    callback: Joi.alternatives([\n      Joi.string().uri({ relativeOnly: true }),\n      Joi.boolean().valid(false),\n    ]).default('/callback'),\n    postLogoutRedirect: Joi.string().uri({ allowRelative: true }).default(''),\n    backchannelLogout: Joi.string()\n      .uri({ allowRelative: true })\n      .default('/backchannel-logout'),\n  })\n    .default()\n    .unknown(false),\n  clientAuthMethod: Joi.string()\n    .valid(\n      'client_secret_basic',\n      'client_secret_post',\n      'client_secret_jwt',\n      'private_key_jwt',\n      'none'\n    )\n    .optional()\n    .default((parent) => {\n      if (\n        parent.authorizationParams.response_type === 'id_token' &&\n        !parent.pushedAuthorizationRequests\n      ) {\n        return 'none';\n      }\n      if (parent.clientAssertionSigningKey) {\n        return 'private_key_jwt';\n      }\n      return 'client_secret_basic';\n    })\n    .when(\n      Joi.ref('authorizationParams.response_type', {\n        adjust: (value) => value && value.includes('code'),\n      }),\n      {\n        is: true,\n        then: Joi.string().invalid('none').messages({\n          'any.only': 'Public code flow clients are not supported.',\n        }),\n      }\n    )\n    .when(Joi.ref('pushedAuthorizationRequests'), {\n      is: true,\n      then: Joi.string().invalid('none').messages({\n        'any.only': 'Public PAR clients are not supported.',\n      }),\n    }),\n  clientAssertionSigningKey: Joi.any()\n    .optional()\n    .when(Joi.ref('clientAuthMethod'), {\n      is: 'private_key_jwt',\n      then: Joi.any().required().messages({\n        'any.required':\n          '\"clientAssertionSigningKey\" is required for a \"clientAuthMethod\" of \"private_key_jwt\"',\n      }),\n    }), // <Object> | <string> | <Buffer> | <KeyObject>,\n  clientAssertionSigningAlg: Joi.string()\n    .valid(\n      'RS256',\n      'RS384',\n      'RS512',\n      'PS256',\n      'PS384',\n      'PS512',\n      'ES256',\n      'ES256K',\n      'ES384',\n      'ES512',\n      'EdDSA'\n    )\n    .optional(),\n  discoveryCacheMaxAge: Joi.number()\n    .optional()\n    .min(0)\n    .default(10 * 60 * 1000),\n  httpTimeout: Joi.number().optional().min(500).default(5000),\n  httpUserAgent: Joi.string().optional(),\n  httpAgent: Joi.object().optional(),\n});\n\nmodule.exports.get = function (config = {}) {\n  config = {\n    secret: process.env.SECRET,\n    issuerBaseURL: process.env.ISSUER_BASE_URL,\n    baseURL: process.env.BASE_URL,\n    clientID: process.env.CLIENT_ID,\n    clientSecret: process.env.CLIENT_SECRET,\n    ...config,\n  };\n\n  const { value, error, warning } = paramsSchema.validate(config);\n  if (error) {\n    throw new TypeError(error.details[0].message);\n  }\n  if (warning) {\n    console.warn(warning.message);\n  }\n  return value;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}