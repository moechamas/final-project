{"ast":null,"code":"const Got = require('got');\nconst pkg = require('../../package.json');\nconst {\n  deep: defaultsDeep\n} = require('./defaults');\nconst isAbsoluteUrl = require('./is_absolute_url');\nconst {\n  HTTP_OPTIONS\n} = require('./consts');\nlet DEFAULT_HTTP_OPTIONS;\nlet got;\nconst setDefaults = options => {\n  DEFAULT_HTTP_OPTIONS = defaultsDeep({}, options, DEFAULT_HTTP_OPTIONS);\n  got = Got.extend(DEFAULT_HTTP_OPTIONS);\n};\nsetDefaults({\n  followRedirect: false,\n  headers: {\n    'User-Agent': `${pkg.name}/${pkg.version} (${pkg.homepage})`\n  },\n  retry: 0,\n  timeout: 3500,\n  throwHttpErrors: false\n});\nmodule.exports = async function request(options, {\n  accessToken,\n  mTLS = false,\n  DPoP\n} = {}) {\n  const {\n    url\n  } = options;\n  isAbsoluteUrl(url);\n  const optsFn = this[HTTP_OPTIONS];\n  let opts = options;\n  if (DPoP && 'dpopProof' in this) {\n    opts.headers = opts.headers || {};\n    opts.headers.DPoP = this.dpopProof({\n      htu: url,\n      htm: options.method\n    }, DPoP, accessToken);\n  }\n  if (optsFn) {\n    opts = optsFn.call(this, defaultsDeep({}, opts, DEFAULT_HTTP_OPTIONS));\n  }\n  if (mTLS && (!opts.key || !opts.cert) && (!opts.https || !(opts.https.key && opts.https.certificate || opts.https.pfx))) {\n    throw new TypeError('mutual-TLS certificate and key not set');\n  }\n  return got(opts);\n};\nmodule.exports.setDefaults = setDefaults;","map":{"version":3,"names":["Got","require","pkg","deep","defaultsDeep","isAbsoluteUrl","HTTP_OPTIONS","DEFAULT_HTTP_OPTIONS","got","setDefaults","options","extend","followRedirect","headers","name","version","homepage","retry","timeout","throwHttpErrors","module","exports","request","accessToken","mTLS","DPoP","url","optsFn","opts","dpopProof","htu","htm","method","call","key","cert","https","certificate","pfx","TypeError"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/openid-client/lib/helpers/request.js"],"sourcesContent":["const Got = require('got');\n\nconst pkg = require('../../package.json');\n\nconst { deep: defaultsDeep } = require('./defaults');\nconst isAbsoluteUrl = require('./is_absolute_url');\nconst { HTTP_OPTIONS } = require('./consts');\n\nlet DEFAULT_HTTP_OPTIONS;\nlet got;\n\nconst setDefaults = (options) => {\n  DEFAULT_HTTP_OPTIONS = defaultsDeep({}, options, DEFAULT_HTTP_OPTIONS);\n  got = Got.extend(DEFAULT_HTTP_OPTIONS);\n};\n\nsetDefaults({\n  followRedirect: false,\n  headers: { 'User-Agent': `${pkg.name}/${pkg.version} (${pkg.homepage})` },\n  retry: 0,\n  timeout: 3500,\n  throwHttpErrors: false,\n});\n\nmodule.exports = async function request(options, { accessToken, mTLS = false, DPoP } = {}) {\n  const { url } = options;\n  isAbsoluteUrl(url);\n  const optsFn = this[HTTP_OPTIONS];\n  let opts = options;\n\n  if (DPoP && 'dpopProof' in this) {\n    opts.headers = opts.headers || {};\n    opts.headers.DPoP = this.dpopProof({\n      htu: url,\n      htm: options.method,\n    }, DPoP, accessToken);\n  }\n\n  if (optsFn) {\n    opts = optsFn.call(this, defaultsDeep({}, opts, DEFAULT_HTTP_OPTIONS));\n  }\n\n  if (\n    mTLS\n    && (\n      (!opts.key || !opts.cert)\n      && (!opts.https || !((opts.https.key && opts.https.certificate) || opts.https.pfx))\n    )\n  ) {\n    throw new TypeError('mutual-TLS certificate and key not set');\n  }\n\n  return got(opts);\n};\n\nmodule.exports.setDefaults = setDefaults;\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;AAE1B,MAAMC,GAAG,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAEzC,MAAM;EAAEE,IAAI,EAAEC;AAAa,CAAC,GAAGH,OAAO,CAAC,YAAY,CAAC;AACpD,MAAMI,aAAa,GAAGJ,OAAO,CAAC,mBAAmB,CAAC;AAClD,MAAM;EAAEK;AAAa,CAAC,GAAGL,OAAO,CAAC,UAAU,CAAC;AAE5C,IAAIM,oBAAoB;AACxB,IAAIC,GAAG;AAEP,MAAMC,WAAW,GAAIC,OAAO,IAAK;EAC/BH,oBAAoB,GAAGH,YAAY,CAAC,CAAC,CAAC,EAAEM,OAAO,EAAEH,oBAAoB,CAAC;EACtEC,GAAG,GAAGR,GAAG,CAACW,MAAM,CAACJ,oBAAoB,CAAC;AACxC,CAAC;AAEDE,WAAW,CAAC;EACVG,cAAc,EAAE,KAAK;EACrBC,OAAO,EAAE;IAAE,YAAY,EAAG,GAAEX,GAAG,CAACY,IAAK,IAAGZ,GAAG,CAACa,OAAQ,KAAIb,GAAG,CAACc,QAAS;EAAG,CAAC;EACzEC,KAAK,EAAE,CAAC;EACRC,OAAO,EAAE,IAAI;EACbC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAG,eAAeC,OAAOA,CAACZ,OAAO,EAAE;EAAEa,WAAW;EAAEC,IAAI,GAAG,KAAK;EAAEC;AAAK,CAAC,GAAG,CAAC,CAAC,EAAE;EACzF,MAAM;IAAEC;EAAI,CAAC,GAAGhB,OAAO;EACvBL,aAAa,CAACqB,GAAG,CAAC;EAClB,MAAMC,MAAM,GAAG,IAAI,CAACrB,YAAY,CAAC;EACjC,IAAIsB,IAAI,GAAGlB,OAAO;EAElB,IAAIe,IAAI,IAAI,WAAW,IAAI,IAAI,EAAE;IAC/BG,IAAI,CAACf,OAAO,GAAGe,IAAI,CAACf,OAAO,IAAI,CAAC,CAAC;IACjCe,IAAI,CAACf,OAAO,CAACY,IAAI,GAAG,IAAI,CAACI,SAAS,CAAC;MACjCC,GAAG,EAAEJ,GAAG;MACRK,GAAG,EAAErB,OAAO,CAACsB;IACf,CAAC,EAAEP,IAAI,EAAEF,WAAW,CAAC;EACvB;EAEA,IAAII,MAAM,EAAE;IACVC,IAAI,GAAGD,MAAM,CAACM,IAAI,CAAC,IAAI,EAAE7B,YAAY,CAAC,CAAC,CAAC,EAAEwB,IAAI,EAAErB,oBAAoB,CAAC,CAAC;EACxE;EAEA,IACEiB,IAAI,IAEF,CAAC,CAACI,IAAI,CAACM,GAAG,IAAI,CAACN,IAAI,CAACO,IAAI,MACpB,CAACP,IAAI,CAACQ,KAAK,IAAI,EAAGR,IAAI,CAACQ,KAAK,CAACF,GAAG,IAAIN,IAAI,CAACQ,KAAK,CAACC,WAAW,IAAKT,IAAI,CAACQ,KAAK,CAACE,GAAG,CAAC,CACnF,EACD;IACA,MAAM,IAAIC,SAAS,CAAC,wCAAwC,CAAC;EAC/D;EAEA,OAAO/B,GAAG,CAACoB,IAAI,CAAC;AAClB,CAAC;AAEDR,MAAM,CAACC,OAAO,CAACZ,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}