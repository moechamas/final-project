{"ast":null,"code":"var _jsxFileName = \"/Users/chamas/Final-Project/final-project/src/components/CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [totalCost, setTotalCost] = useState(0);\n  const addToCart = newItem => {\n    // Ensure newItem has a MongoDB _id\n    if (!newItem || typeof newItem.id === 'undefined') {\n      console.error(\"Attempted to add an item without a valid MongoDB _id:\", newItem);\n      return; // Do not add the item if _id is missing or undefined\n    }\n    const existingItemIndex = cart.findIndex(item => item._id === newItem._id);\n    if (existingItemIndex > -1) {\n      // Item exists, update the quantity\n      const updatedCart = cart.map((item, index) => {\n        if (index === existingItemIndex) {\n          return {\n            ...item,\n            quantity: item.quantity + newItem.quantity || 1\n          };\n        }\n        return item;\n      });\n      setCart(updatedCart);\n    } else {\n      // Item does not exist, add new item with MongoDB _id\n      setCart([...cart, {\n        ...newItem,\n        quantity: newItem.quantity || 1\n      }]);\n    }\n  };\n  const removeFromCart = _id => {\n    if (typeof _id === 'undefined') {\n      console.error(\"Attempted to remove an item without specifying an _id\");\n      return; // Do not attempt to remove if _id is undefined\n    }\n    const existingItemIndex = cart.findIndex(item => item._id === _id);\n    if (existingItemIndex > -1) {\n      // Found the item, now decide to decrement or remove\n      const updatedCart = cart[existingItemIndex].quantity > 1 ? cart.map(item => item._id === _id ? {\n        ...item,\n        quantity: item.quantity - 1\n      } : item) : cart.filter(item => item._id !== _id); // Remove the item if quantity is 1 or less\n      setCart(updatedCart);\n    }\n  };\n  useEffect(() => {\n    // Calculate and update total cost whenever the cart changes\n    const total = cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    setTotalCost(total);\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      totalCost\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"VHo73zjNy6wE9tLd94aYTh14kHE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","totalCost","setTotalCost","addToCart","newItem","id","console","error","existingItemIndex","findIndex","item","_id","updatedCart","map","index","quantity","removeFromCart","filter","total","reduce","acc","price","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chamas/Final-Project/final-project/src/components/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const [totalCost, setTotalCost] = useState(0);\n  \n  const addToCart = (newItem) => {\n    // Ensure newItem has a MongoDB _id\n    if (!newItem || typeof newItem.id === 'undefined') {\n      console.error(\"Attempted to add an item without a valid MongoDB _id:\", newItem);\n      return; // Do not add the item if _id is missing or undefined\n    }\n  \n    const existingItemIndex = cart.findIndex(item => item._id === newItem._id);\n    if (existingItemIndex > -1) {\n      // Item exists, update the quantity\n      const updatedCart = cart.map((item, index) => {\n        if (index === existingItemIndex) {\n          return { ...item, quantity: item.quantity + newItem.quantity || 1 };\n        }\n        return item;\n      });\n      setCart(updatedCart);\n    } else {\n      // Item does not exist, add new item with MongoDB _id\n      setCart([...cart, { ...newItem, quantity: newItem.quantity || 1 }]);\n    }\n  };\n  \n  const removeFromCart = (_id) => {\n    if (typeof _id === 'undefined') {\n      console.error(\"Attempted to remove an item without specifying an _id\");\n      return; // Do not attempt to remove if _id is undefined\n    }\n  \n    const existingItemIndex = cart.findIndex(item => item._id === _id);\n    if (existingItemIndex > -1) {\n      // Found the item, now decide to decrement or remove\n      const updatedCart = cart[existingItemIndex].quantity > 1 \n        ? cart.map(item => item._id === _id ? { ...item, quantity: item.quantity - 1 } : item)\n        : cart.filter(item => item._id !== _id); // Remove the item if quantity is 1 or less\n      setCart(updatedCart);\n    }\n  };\n  \n\n  useEffect(() => {\n    // Calculate and update total cost whenever the cart changes\n    const total = cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    setTotalCost(total);\n  }, [cart]);\n\n  return (\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, totalCost }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}