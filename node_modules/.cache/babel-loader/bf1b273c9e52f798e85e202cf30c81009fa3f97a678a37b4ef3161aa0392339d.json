{"ast":null,"code":"var _jsxFileName = \"/Users/chamas/Final-Project/final-project/src/components/CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [totalCost, setTotalCost] = useState(0);\n  const addToCart = newItem => {\n    // Ensure newItem has an eventId\n    if (!newItem || typeof newItem.eventId === 'undefined') {\n      console.error(\"Attempted to add an item without a valid eventId:\", newItem);\n      return; // Do not add the item if eventId is missing or undefined\n    }\n    const existingItemIndex = cart.findIndex(item => item.eventId === newItem.eventId);\n    if (existingItemIndex > -1) {\n      // Item exists, update the quantity\n      const updatedCart = cart.map((item, index) => {\n        if (index === existingItemIndex) {\n          return {\n            ...item,\n            quantity: item.quantity + newItem.quantity || 1\n          }; // Update quantity, defaulting to adding 1 if not specified\n        }\n        return item;\n      });\n      setCart(updatedCart);\n    } else {\n      // Item does not exist, add new item\n      setCart([...cart, {\n        ...newItem,\n        quantity: newItem.quantity || 1\n      }]); // Ensure newItem includes a quantity, defaulting to 1\n    }\n  };\n  const removeFromCart = eventId => {\n    if (typeof eventId === 'undefined') {\n      console.error(\"Attempted to remove an item without specifying an eventId\");\n      return; // Do not attempt to remove if eventId is undefined\n    }\n    const existingItemIndex = cart.findIndex(item => item.eventId === eventId);\n    if (existingItemIndex > -1) {\n      // Found the item, now decide to decrement or remove\n      const updatedCart = cart[existingItemIndex].quantity > 1 ? cart.map(item => item.eventId === eventId ? {\n        ...item,\n        quantity: item.quantity - 1\n      } : item) : cart.filter(item => item.eventId !== eventId); // Remove the item if quantity is 1 or less\n      setCart(updatedCart);\n    }\n  };\n  useEffect(() => {\n    // Calculate and update total cost whenever the cart changes\n    const total = cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    setTotalCost(total);\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      totalCost\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"VHo73zjNy6wE9tLd94aYTh14kHE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","totalCost","setTotalCost","addToCart","newItem","eventId","console","error","existingItemIndex","findIndex","item","updatedCart","map","index","quantity","removeFromCart","filter","total","reduce","acc","price","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chamas/Final-Project/final-project/src/components/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n  const [totalCost, setTotalCost] = useState(0);\n\n  const addToCart = (newItem) => {\n    // Ensure newItem has an eventId\n    if (!newItem || typeof newItem.eventId === 'undefined') {\n      console.error(\"Attempted to add an item without a valid eventId:\", newItem);\n      return; // Do not add the item if eventId is missing or undefined\n    }\n\n    const existingItemIndex = cart.findIndex(item => item.eventId === newItem.eventId);\n    if (existingItemIndex > -1) {\n      // Item exists, update the quantity\n      const updatedCart = cart.map((item, index) => {\n        if (index === existingItemIndex) {\n          return { ...item, quantity: item.quantity + newItem.quantity || 1 }; // Update quantity, defaulting to adding 1 if not specified\n        }\n        return item;\n      });\n      setCart(updatedCart);\n    } else {\n      // Item does not exist, add new item\n      setCart([...cart, { ...newItem, quantity: newItem.quantity || 1 }]); // Ensure newItem includes a quantity, defaulting to 1\n    }\n  };\n\n  const removeFromCart = (eventId) => {\n    if (typeof eventId === 'undefined') {\n      console.error(\"Attempted to remove an item without specifying an eventId\");\n      return; // Do not attempt to remove if eventId is undefined\n    }\n\n    const existingItemIndex = cart.findIndex(item => item.eventId === eventId);\n    if (existingItemIndex > -1) {\n      // Found the item, now decide to decrement or remove\n      const updatedCart = cart[existingItemIndex].quantity > 1 \n        ? cart.map(item => item.eventId === eventId ? { ...item, quantity: item.quantity - 1 } : item) \n        : cart.filter(item => item.eventId !== eventId); // Remove the item if quantity is 1 or less\n      setCart(updatedCart);\n    }\n  };\n\n  useEffect(() => {\n    // Calculate and update total cost whenever the cart changes\n    const total = cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\n    setTotalCost(total);\n  }, [cart]);\n\n  return (\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, totalCost }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}