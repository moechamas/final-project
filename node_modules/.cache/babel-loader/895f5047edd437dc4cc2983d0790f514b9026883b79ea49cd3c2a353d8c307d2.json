{"ast":null,"code":"const stripe = require('stripe')(process.env.sk_test_51ObW35JuImlUjwClMcXxCRaL1p4Dz7H3BL7ySfC67MWmPjY0vEwmqjeqhfnjqrwI2qV6Q7Xi2PVFXN7uCluFHPu000vLRfrBXf);\nconst {\n  v4: uuidv4\n} = require('uuid'); // Import uuid\n\n// Function to generate a unique reservation ID\nconst generateReservationId = () => {\n  const reservationId = uuidv4();\n  console.log(`Generated Reservation ID: ${reservationId}`);\n  return reservationId; // Generates and returns a unique ID\n};\nconst createPaymentIntent = async (eventId, amount) => {\n  console.log(`Creating Payment Intent for Event ID: ${eventId} with Amount: ${amount}`);\n  try {\n    const paymentIntent = await stripe.paymentIntents.create({\n      amount,\n      currency: 'usd'\n    });\n    console.log(`Payment Intent Created: ${paymentIntent.id}`);\n    return paymentIntent.client_secret;\n  } catch (error) {\n    console.error('Error creating payment intent:', error);\n    throw error;\n  }\n};\nconst getEvents = async () => {\n  console.log('Fetching events...');\n  try {\n    const response = await fetch('/api/events');\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const events = await response.json();\n    console.log(`Fetched ${events.length} events.`);\n    return events;\n  } catch (error) {\n    console.error('Error fetching events:', error);\n    throw error;\n  }\n};\n\n// Function to get reservation details\nconst getReservationDetails = (cart, totalCost) => {\n  const reservationDetails = {\n    reservationId: generateReservationId(),\n    items: cart,\n    total: totalCost,\n    user: 'currentUser'\n  };\n  console.log('Generated Reservation Details:', reservationDetails);\n  return reservationDetails;\n};\n\n// Function to handle proceeding to payment\nconst handleProceedToPayment = async (cart, totalCost, navigate) => {\n  console.log('Proceeding to payment with cart:', cart);\n  try {\n    const response = await fetch('/reservations', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        items: cart,\n        totalCost: totalCost,\n        user: 'currentUser'\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const reservationDetails = await response.json();\n    console.log('Reservation Details:', reservationDetails);\n    navigate('/my-orders', {\n      state: {\n        reservationId: reservationDetails.reservationId\n      }\n    });\n  } catch (error) {\n    console.error('Error processing payment:', error);\n  }\n};\nexport { getEvents, getReservationDetails, handleProceedToPayment };","map":{"version":3,"names":["stripe","require","process","env","sk_test_51ObW35JuImlUjwClMcXxCRaL1p4Dz7H3BL7ySfC67MWmPjY0vEwmqjeqhfnjqrwI2qV6Q7Xi2PVFXN7uCluFHPu000vLRfrBXf","v4","uuidv4","generateReservationId","reservationId","console","log","createPaymentIntent","eventId","amount","paymentIntent","paymentIntents","create","currency","id","client_secret","error","getEvents","response","fetch","ok","Error","events","json","length","getReservationDetails","cart","totalCost","reservationDetails","items","total","user","handleProceedToPayment","navigate","method","headers","body","JSON","stringify","state"],"sources":["/Users/chamas/Final-Project/final-project/src/backend/handlers.js"],"sourcesContent":["const stripe = require('stripe')(process.env.sk_test_51ObW35JuImlUjwClMcXxCRaL1p4Dz7H3BL7ySfC67MWmPjY0vEwmqjeqhfnjqrwI2qV6Q7Xi2PVFXN7uCluFHPu000vLRfrBXf);\nconst { v4: uuidv4 } = require('uuid'); // Import uuid\n\n// Function to generate a unique reservation ID\nconst generateReservationId = () => {\n  const reservationId = uuidv4();\n  console.log(`Generated Reservation ID: ${reservationId}`);\n  return reservationId; // Generates and returns a unique ID\n};\n\nconst createPaymentIntent = async (eventId, amount) => {\n  console.log(`Creating Payment Intent for Event ID: ${eventId} with Amount: ${amount}`);\n  try {\n    const paymentIntent = await stripe.paymentIntents.create({\n      amount,\n      currency: 'usd',\n    });\n    console.log(`Payment Intent Created: ${paymentIntent.id}`);\n    return paymentIntent.client_secret;\n  } catch (error) {\n    console.error('Error creating payment intent:', error);\n    throw error;\n  }\n};\n\nconst getEvents = async () => {\n  console.log('Fetching events...');\n  try {\n    const response = await fetch('/api/events');\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const events = await response.json();\n    console.log(`Fetched ${events.length} events.`);\n    return events;\n  } catch (error) {\n    console.error('Error fetching events:', error);\n    throw error;\n  }\n};\n\n// Function to get reservation details\nconst getReservationDetails = (cart, totalCost) => {\n  const reservationDetails = {\n    reservationId: generateReservationId(),\n    items: cart,\n    total: totalCost,\n    user: 'currentUser',\n  };\n  console.log('Generated Reservation Details:', reservationDetails);\n  return reservationDetails;\n};\n\n// Function to handle proceeding to payment\nconst handleProceedToPayment = async (cart, totalCost, navigate) => {\n  console.log('Proceeding to payment with cart:', cart);\n  try {\n    const response = await fetch('/reservations', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ items: cart, totalCost: totalCost, user: 'currentUser' }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    const reservationDetails = await response.json();\n    console.log('Reservation Details:', reservationDetails);\n    navigate('/my-orders', { state: { reservationId: reservationDetails.reservationId } });\n  } catch (error) {\n    console.error('Error processing payment:', error);\n  }\n};\n\nexport { getEvents, getReservationDetails, handleProceedToPayment };\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACC,OAAO,CAACC,GAAG,CAACC,2GAA2G,CAAC;AACzJ,MAAM;EAAEC,EAAE,EAAEC;AAAO,CAAC,GAAGL,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;;AAExC;AACA,MAAMM,qBAAqB,GAAGA,CAAA,KAAM;EAClC,MAAMC,aAAa,GAAGF,MAAM,CAAC,CAAC;EAC9BG,OAAO,CAACC,GAAG,CAAE,6BAA4BF,aAAc,EAAC,CAAC;EACzD,OAAOA,aAAa,CAAC,CAAC;AACxB,CAAC;AAED,MAAMG,mBAAmB,GAAG,MAAAA,CAAOC,OAAO,EAAEC,MAAM,KAAK;EACrDJ,OAAO,CAACC,GAAG,CAAE,yCAAwCE,OAAQ,iBAAgBC,MAAO,EAAC,CAAC;EACtF,IAAI;IACF,MAAMC,aAAa,GAAG,MAAMd,MAAM,CAACe,cAAc,CAACC,MAAM,CAAC;MACvDH,MAAM;MACNI,QAAQ,EAAE;IACZ,CAAC,CAAC;IACFR,OAAO,CAACC,GAAG,CAAE,2BAA0BI,aAAa,CAACI,EAAG,EAAC,CAAC;IAC1D,OAAOJ,aAAa,CAACK,aAAa;EACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdX,OAAO,CAACW,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC5BZ,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACjC,IAAI;IACF,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;IAC3C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACpClB,OAAO,CAACC,GAAG,CAAE,WAAUgB,MAAM,CAACE,MAAO,UAAS,CAAC;IAC/C,OAAOF,MAAM;EACf,CAAC,CAAC,OAAON,KAAK,EAAE;IACdX,OAAO,CAACW,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMS,qBAAqB,GAAGA,CAACC,IAAI,EAAEC,SAAS,KAAK;EACjD,MAAMC,kBAAkB,GAAG;IACzBxB,aAAa,EAAED,qBAAqB,CAAC,CAAC;IACtC0B,KAAK,EAAEH,IAAI;IACXI,KAAK,EAAEH,SAAS;IAChBI,IAAI,EAAE;EACR,CAAC;EACD1B,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEsB,kBAAkB,CAAC;EACjE,OAAOA,kBAAkB;AAC3B,CAAC;;AAED;AACA,MAAMI,sBAAsB,GAAG,MAAAA,CAAON,IAAI,EAAEC,SAAS,EAAEM,QAAQ,KAAK;EAClE5B,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEoB,IAAI,CAAC;EACrD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;MAC5Ce,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET,KAAK,EAAEH,IAAI;QAAEC,SAAS,EAAEA,SAAS;QAAEI,IAAI,EAAE;MAAc,CAAC;IACjF,CAAC,CAAC;IAEF,IAAI,CAACb,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,MAAMO,kBAAkB,GAAG,MAAMV,QAAQ,CAACK,IAAI,CAAC,CAAC;IAChDlB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEsB,kBAAkB,CAAC;IACvDK,QAAQ,CAAC,YAAY,EAAE;MAAEM,KAAK,EAAE;QAAEnC,aAAa,EAAEwB,kBAAkB,CAACxB;MAAc;IAAE,CAAC,CAAC;EACxF,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdX,OAAO,CAACW,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACnD;AACF,CAAC;AAED,SAASC,SAAS,EAAEQ,qBAAqB,EAAEO,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}