{"ast":null,"code":"const {\n  improvedDH\n} = require('../../help/runtime_support');\nconst {\n  KEYOBJECT\n} = require('../../help/consts');\nconst {\n  generateSync\n} = require('../../jwk/generate');\nconst {\n  ECDH_DERIVE_LENGTHS\n} = require('../../registry');\nconst derive = require('./derive');\nconst wrapKey = (wrap, derive, key, payload) => {\n  const epk = generateSync(key.kty, key.crv);\n  const derivedKey = derive(epk, key, payload);\n  const result = wrap({\n    [KEYOBJECT]: derivedKey\n  }, payload);\n  result.header = result.header || {};\n  Object.assign(result.header, {\n    epk: {\n      kty: key.kty,\n      crv: key.crv,\n      x: epk.x,\n      y: epk.y\n    }\n  });\n  return result;\n};\nconst unwrapKey = (unwrap, derive, key, payload, header) => {\n  const {\n    epk\n  } = header;\n  const derivedKey = derive(key, epk, header);\n  return unwrap({\n    [KEYOBJECT]: derivedKey\n  }, payload, header);\n};\nmodule.exports = (JWA, JWK) => {\n  ['ECDH-ES+A128KW', 'ECDH-ES+A192KW', 'ECDH-ES+A256KW'].forEach(jwaAlg => {\n    const kw = jwaAlg.substr(-6);\n    const kwWrap = JWA.keyManagementEncrypt.get(kw);\n    const kwUnwrap = JWA.keyManagementDecrypt.get(kw);\n    const keylen = parseInt(jwaAlg.substr(9, 3), 10);\n    ECDH_DERIVE_LENGTHS.set(jwaAlg, keylen);\n    if (kwWrap && kwUnwrap) {\n      JWA.keyManagementEncrypt.set(jwaAlg, wrapKey.bind(undefined, kwWrap, derive.bind(undefined, jwaAlg, keylen)));\n      JWA.keyManagementDecrypt.set(jwaAlg, unwrapKey.bind(undefined, kwUnwrap, derive.bind(undefined, jwaAlg, keylen)));\n      JWK.EC.deriveKey[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.crv !== 'secp256k1';\n      if (improvedDH) {\n        JWK.OKP.deriveKey[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.keyObject.asymmetricKeyType.startsWith('x');\n      }\n    }\n  });\n};\nmodule.exports.wrapKey = wrapKey;\nmodule.exports.unwrapKey = unwrapKey;","map":{"version":3,"names":["improvedDH","require","KEYOBJECT","generateSync","ECDH_DERIVE_LENGTHS","derive","wrapKey","wrap","key","payload","epk","kty","crv","derivedKey","result","header","Object","assign","x","y","unwrapKey","unwrap","module","exports","JWA","JWK","forEach","jwaAlg","kw","substr","kwWrap","keyManagementEncrypt","get","kwUnwrap","keyManagementDecrypt","keylen","parseInt","set","bind","undefined","EC","deriveKey","use","OKP","keyObject","asymmetricKeyType","startsWith"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/jwa/ecdh/kw.js"],"sourcesContent":["const { improvedDH } = require('../../help/runtime_support')\nconst { KEYOBJECT } = require('../../help/consts')\nconst { generateSync } = require('../../jwk/generate')\nconst { ECDH_DERIVE_LENGTHS } = require('../../registry')\n\nconst derive = require('./derive')\n\nconst wrapKey = (wrap, derive, key, payload) => {\n  const epk = generateSync(key.kty, key.crv)\n\n  const derivedKey = derive(epk, key, payload)\n\n  const result = wrap({ [KEYOBJECT]: derivedKey }, payload)\n  result.header = result.header || {}\n  Object.assign(result.header, { epk: { kty: key.kty, crv: key.crv, x: epk.x, y: epk.y } })\n\n  return result\n}\n\nconst unwrapKey = (unwrap, derive, key, payload, header) => {\n  const { epk } = header\n  const derivedKey = derive(key, epk, header)\n\n  return unwrap({ [KEYOBJECT]: derivedKey }, payload, header)\n}\n\nmodule.exports = (JWA, JWK) => {\n  ['ECDH-ES+A128KW', 'ECDH-ES+A192KW', 'ECDH-ES+A256KW'].forEach((jwaAlg) => {\n    const kw = jwaAlg.substr(-6)\n    const kwWrap = JWA.keyManagementEncrypt.get(kw)\n    const kwUnwrap = JWA.keyManagementDecrypt.get(kw)\n    const keylen = parseInt(jwaAlg.substr(9, 3), 10)\n    ECDH_DERIVE_LENGTHS.set(jwaAlg, keylen)\n\n    if (kwWrap && kwUnwrap) {\n      JWA.keyManagementEncrypt.set(jwaAlg, wrapKey.bind(undefined, kwWrap, derive.bind(undefined, jwaAlg, keylen)))\n      JWA.keyManagementDecrypt.set(jwaAlg, unwrapKey.bind(undefined, kwUnwrap, derive.bind(undefined, jwaAlg, keylen)))\n      JWK.EC.deriveKey[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.crv !== 'secp256k1'\n\n      if (improvedDH) {\n        JWK.OKP.deriveKey[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.keyObject.asymmetricKeyType.startsWith('x')\n      }\n    }\n  })\n}\nmodule.exports.wrapKey = wrapKey\nmodule.exports.unwrapKey = unwrapKey\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}