{"ast":null,"code":"const {\n  publicEncrypt,\n  privateDecrypt,\n  constants\n} = require('crypto');\nconst {\n  oaepHashSupported\n} = require('../help/runtime_support');\nconst {\n  KEYOBJECT\n} = require('../help/consts');\nconst {\n  asInput\n} = require('../help/key_object');\nconst resolvePadding = alg => {\n  switch (alg) {\n    case 'RSA-OAEP':\n    case 'RSA-OAEP-256':\n    case 'RSA-OAEP-384':\n    case 'RSA-OAEP-512':\n      return constants.RSA_PKCS1_OAEP_PADDING;\n    case 'RSA1_5':\n      return constants.RSA_PKCS1_PADDING;\n  }\n};\nconst resolveOaepHash = alg => {\n  switch (alg) {\n    case 'RSA-OAEP':\n      return 'sha1';\n    case 'RSA-OAEP-256':\n      return 'sha256';\n    case 'RSA-OAEP-384':\n      return 'sha384';\n    case 'RSA-OAEP-512':\n      return 'sha512';\n    default:\n      return undefined;\n  }\n};\nconst wrapKey = (padding, oaepHash, {\n  [KEYOBJECT]: keyObject\n}, payload) => {\n  const key = asInput(keyObject, true);\n  return {\n    wrapped: publicEncrypt({\n      key,\n      oaepHash,\n      padding\n    }, payload)\n  };\n};\nconst unwrapKey = (padding, oaepHash, {\n  [KEYOBJECT]: keyObject\n}, payload) => {\n  const key = asInput(keyObject, false);\n  return privateDecrypt({\n    key,\n    oaepHash,\n    padding\n  }, payload);\n};\nconst LENGTHS = {\n  RSA1_5: 0,\n  'RSA-OAEP': 592,\n  'RSA-OAEP-256': 784,\n  'RSA-OAEP-384': 1040,\n  'RSA-OAEP-512': 1296\n};\nmodule.exports = (JWA, JWK) => {\n  const algs = ['RSA-OAEP', 'RSA1_5'];\n  if (oaepHashSupported) {\n    algs.splice(1, 0, 'RSA-OAEP-256', 'RSA-OAEP-384', 'RSA-OAEP-512');\n  }\n  algs.forEach(jwaAlg => {\n    const padding = resolvePadding(jwaAlg);\n    const oaepHash = resolveOaepHash(jwaAlg);\n    JWA.keyManagementEncrypt.set(jwaAlg, wrapKey.bind(undefined, padding, oaepHash));\n    JWA.keyManagementDecrypt.set(jwaAlg, unwrapKey.bind(undefined, padding, oaepHash));\n    JWK.RSA.wrapKey[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.length >= LENGTHS[jwaAlg];\n    JWK.RSA.unwrapKey[jwaAlg] = key => key.private && (key.use === 'enc' || key.use === undefined) && key.length >= LENGTHS[jwaAlg];\n  });\n};","map":{"version":3,"names":["publicEncrypt","privateDecrypt","constants","require","oaepHashSupported","KEYOBJECT","asInput","resolvePadding","alg","RSA_PKCS1_OAEP_PADDING","RSA_PKCS1_PADDING","resolveOaepHash","undefined","wrapKey","padding","oaepHash","keyObject","payload","key","wrapped","unwrapKey","LENGTHS","RSA1_5","module","exports","JWA","JWK","algs","splice","forEach","jwaAlg","keyManagementEncrypt","set","bind","keyManagementDecrypt","RSA","use","length","private"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/jwa/rsaes.js"],"sourcesContent":["const { publicEncrypt, privateDecrypt, constants } = require('crypto')\n\nconst { oaepHashSupported } = require('../help/runtime_support')\nconst { KEYOBJECT } = require('../help/consts')\nconst { asInput } = require('../help/key_object')\n\nconst resolvePadding = (alg) => {\n  switch (alg) {\n    case 'RSA-OAEP':\n    case 'RSA-OAEP-256':\n    case 'RSA-OAEP-384':\n    case 'RSA-OAEP-512':\n      return constants.RSA_PKCS1_OAEP_PADDING\n    case 'RSA1_5':\n      return constants.RSA_PKCS1_PADDING\n  }\n}\n\nconst resolveOaepHash = (alg) => {\n  switch (alg) {\n    case 'RSA-OAEP':\n      return 'sha1'\n    case 'RSA-OAEP-256':\n      return 'sha256'\n    case 'RSA-OAEP-384':\n      return 'sha384'\n    case 'RSA-OAEP-512':\n      return 'sha512'\n    default:\n      return undefined\n  }\n}\n\nconst wrapKey = (padding, oaepHash, { [KEYOBJECT]: keyObject }, payload) => {\n  const key = asInput(keyObject, true)\n  return { wrapped: publicEncrypt({ key, oaepHash, padding }, payload) }\n}\n\nconst unwrapKey = (padding, oaepHash, { [KEYOBJECT]: keyObject }, payload) => {\n  const key = asInput(keyObject, false)\n  return privateDecrypt({ key, oaepHash, padding }, payload)\n}\n\nconst LENGTHS = {\n  RSA1_5: 0,\n  'RSA-OAEP': 592,\n  'RSA-OAEP-256': 784,\n  'RSA-OAEP-384': 1040,\n  'RSA-OAEP-512': 1296\n}\n\nmodule.exports = (JWA, JWK) => {\n  const algs = ['RSA-OAEP', 'RSA1_5']\n\n  if (oaepHashSupported) {\n    algs.splice(1, 0, 'RSA-OAEP-256', 'RSA-OAEP-384', 'RSA-OAEP-512')\n  }\n\n  algs.forEach((jwaAlg) => {\n    const padding = resolvePadding(jwaAlg)\n    const oaepHash = resolveOaepHash(jwaAlg)\n    JWA.keyManagementEncrypt.set(jwaAlg, wrapKey.bind(undefined, padding, oaepHash))\n    JWA.keyManagementDecrypt.set(jwaAlg, unwrapKey.bind(undefined, padding, oaepHash))\n    JWK.RSA.wrapKey[jwaAlg] = key => (key.use === 'enc' || key.use === undefined) && key.length >= LENGTHS[jwaAlg]\n    JWK.RSA.unwrapKey[jwaAlg] = key => key.private && (key.use === 'enc' || key.use === undefined) && key.length >= LENGTHS[jwaAlg]\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}