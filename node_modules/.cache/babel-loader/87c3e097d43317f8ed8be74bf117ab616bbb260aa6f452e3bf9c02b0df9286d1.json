{"ast":null,"code":"let encode;\nlet encodeBuffer;\nif (Buffer.isEncoding('base64url')) {\n  encode = (input, encoding = 'utf8') => Buffer.from(input, encoding).toString('base64url');\n  encodeBuffer = buf => buf.toString('base64url');\n} else {\n  const fromBase64 = base64 => base64.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n  encode = (input, encoding = 'utf8') => fromBase64(Buffer.from(input, encoding).toString('base64'));\n  encodeBuffer = buf => fromBase64(buf.toString('base64'));\n}\nconst decodeToBuffer = input => {\n  return Buffer.from(input, 'base64');\n};\nconst decode = (input, encoding = 'utf8') => {\n  return decodeToBuffer(input).toString(encoding);\n};\nconst b64uJSON = {\n  encode: input => {\n    return encode(JSON.stringify(input));\n  },\n  decode: (input, encoding = 'utf8') => {\n    return JSON.parse(decode(input, encoding));\n  }\n};\nb64uJSON.decode.try = (input, encoding = 'utf8') => {\n  try {\n    return b64uJSON.decode(input, encoding);\n  } catch (err) {\n    return decode(input, encoding);\n  }\n};\nconst bnToBuf = bn => {\n  let hex = BigInt(bn).toString(16);\n  if (hex.length % 2) {\n    hex = `0${hex}`;\n  }\n  const len = hex.length / 2;\n  const u8 = new Uint8Array(len);\n  let i = 0;\n  let j = 0;\n  while (i < len) {\n    u8[i] = parseInt(hex.slice(j, j + 2), 16);\n    i += 1;\n    j += 2;\n  }\n  return u8;\n};\nconst encodeBigInt = bn => encodeBuffer(Buffer.from(bnToBuf(bn)));\nmodule.exports.decode = decode;\nmodule.exports.decodeToBuffer = decodeToBuffer;\nmodule.exports.encode = encode;\nmodule.exports.encodeBuffer = encodeBuffer;\nmodule.exports.JSON = b64uJSON;\nmodule.exports.encodeBigInt = encodeBigInt;","map":{"version":3,"names":["encode","encodeBuffer","Buffer","isEncoding","input","encoding","from","toString","buf","fromBase64","base64","replace","decodeToBuffer","decode","b64uJSON","JSON","stringify","parse","try","err","bnToBuf","bn","hex","BigInt","length","len","u8","Uint8Array","i","j","parseInt","slice","encodeBigInt","module","exports"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/help/base64url.js"],"sourcesContent":["let encode\nlet encodeBuffer\nif (Buffer.isEncoding('base64url')) {\n  encode = (input, encoding = 'utf8') => Buffer.from(input, encoding).toString('base64url')\n  encodeBuffer = (buf) => buf.toString('base64url')\n} else {\n  const fromBase64 = (base64) => base64.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n  encode = (input, encoding = 'utf8') => fromBase64(Buffer.from(input, encoding).toString('base64'))\n  encodeBuffer = (buf) => fromBase64(buf.toString('base64'))\n}\n\nconst decodeToBuffer = (input) => {\n  return Buffer.from(input, 'base64')\n}\n\nconst decode = (input, encoding = 'utf8') => {\n  return decodeToBuffer(input).toString(encoding)\n}\n\nconst b64uJSON = {\n  encode: (input) => {\n    return encode(JSON.stringify(input))\n  },\n  decode: (input, encoding = 'utf8') => {\n    return JSON.parse(decode(input, encoding))\n  }\n}\n\nb64uJSON.decode.try = (input, encoding = 'utf8') => {\n  try {\n    return b64uJSON.decode(input, encoding)\n  } catch (err) {\n    return decode(input, encoding)\n  }\n}\n\nconst bnToBuf = (bn) => {\n  let hex = BigInt(bn).toString(16)\n  if (hex.length % 2) {\n    hex = `0${hex}`\n  }\n\n  const len = hex.length / 2\n  const u8 = new Uint8Array(len)\n\n  let i = 0\n  let j = 0\n  while (i < len) {\n    u8[i] = parseInt(hex.slice(j, j + 2), 16)\n    i += 1\n    j += 2\n  }\n\n  return u8\n}\n\nconst encodeBigInt = (bn) => encodeBuffer(Buffer.from(bnToBuf(bn)))\n\nmodule.exports.decode = decode\nmodule.exports.decodeToBuffer = decodeToBuffer\nmodule.exports.encode = encode\nmodule.exports.encodeBuffer = encodeBuffer\nmodule.exports.JSON = b64uJSON\nmodule.exports.encodeBigInt = encodeBigInt\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}