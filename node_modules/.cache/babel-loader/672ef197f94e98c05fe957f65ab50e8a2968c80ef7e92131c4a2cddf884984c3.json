{"ast":null,"code":"const stripe = require('stripe')(process.env.sk_test_51ObW35JuImlUjwClMcXxCRaL1p4Dz7H3BL7ySfC67MWmPjY0vEwmqjeqhfnjqrwI2qV6Q7Xi2PVFXN7uCluFHPu000vLRfrBXf);\nconst {\n  v4: uuidv4\n} = require('uuid');\n\n// Function to generate a reservation ID\nconst generateReservationId = () => {\n  return 'res-' + uuidv4();\n};\nconst handlePayment = async (stripe, cart, navigate, totalCost) => {\n  try {\n    // Create a payment intent using Stripe\n    const paymentIntent = await stripe.paymentIntents.create({\n      amount: totalCost * 100,\n      // Convert totalCost to cents\n      currency: 'usd'\n    });\n\n    // Redirect to the payment form page with the client secret\n    navigate('/payment', {\n      state: {\n        clientSecret: paymentIntent.client_secret\n      }\n    });\n  } catch (error) {\n    console.error('Error processing payment:', error);\n  }\n};\n\n// Function to get reservation details\nconst getReservationDetails = (cart, totalCost) => {\n  const reservationDetails = {\n    reservationId: generateReservationId(),\n    items: cart,\n    total: totalCost,\n    user: 'currentUser'\n  };\n  console.log('Generated Reservation Details:', reservationDetails);\n  return reservationDetails;\n};\nmodule.exports = {\n  getReservationDetails,\n  generateReservationId\n};","map":{"version":3,"names":["stripe","require","process","env","sk_test_51ObW35JuImlUjwClMcXxCRaL1p4Dz7H3BL7ySfC67MWmPjY0vEwmqjeqhfnjqrwI2qV6Q7Xi2PVFXN7uCluFHPu000vLRfrBXf","v4","uuidv4","generateReservationId","handlePayment","cart","navigate","totalCost","paymentIntent","paymentIntents","create","amount","currency","state","clientSecret","client_secret","error","console","getReservationDetails","reservationDetails","reservationId","items","total","user","log","module","exports"],"sources":["/Users/chamas/Final-Project/final-project/src/backend/handlers.js"],"sourcesContent":["const stripe = require('stripe')(process.env.sk_test_51ObW35JuImlUjwClMcXxCRaL1p4Dz7H3BL7ySfC67MWmPjY0vEwmqjeqhfnjqrwI2qV6Q7Xi2PVFXN7uCluFHPu000vLRfrBXf);\nconst { v4: uuidv4 } = require('uuid');\n\n// Function to generate a reservation ID\nconst generateReservationId = () => {\n  return 'res-' + uuidv4();\n};\n\nconst handlePayment = async (stripe, cart, navigate, totalCost) => {\n  try {\n    // Create a payment intent using Stripe\n    const paymentIntent = await stripe.paymentIntents.create({\n      amount: totalCost * 100, // Convert totalCost to cents\n      currency: 'usd',\n    });\n\n    // Redirect to the payment form page with the client secret\n    navigate('/payment', { state: { clientSecret: paymentIntent.client_secret } });\n  } catch (error) {\n    console.error('Error processing payment:', error);\n  }\n};\n\n// Function to get reservation details\nconst getReservationDetails = (cart, totalCost) => {\n  const reservationDetails = {\n    reservationId: generateReservationId(),\n    items: cart,\n    total: totalCost,\n    user: 'currentUser',\n  };\n  console.log('Generated Reservation Details:', reservationDetails);\n  return reservationDetails;\n};\n\n\n\nmodule.exports = {\n  getReservationDetails,\n  generateReservationId,\n};\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACC,OAAO,CAACC,GAAG,CAACC,2GAA2G,CAAC;AACzJ,MAAM;EAAEC,EAAE,EAAEC;AAAO,CAAC,GAAGL,OAAO,CAAC,MAAM,CAAC;;AAEtC;AACA,MAAMM,qBAAqB,GAAGA,CAAA,KAAM;EAClC,OAAO,MAAM,GAAGD,MAAM,CAAC,CAAC;AAC1B,CAAC;AAED,MAAME,aAAa,GAAG,MAAAA,CAAOR,MAAM,EAAES,IAAI,EAAEC,QAAQ,EAAEC,SAAS,KAAK;EACjE,IAAI;IACF;IACA,MAAMC,aAAa,GAAG,MAAMZ,MAAM,CAACa,cAAc,CAACC,MAAM,CAAC;MACvDC,MAAM,EAAEJ,SAAS,GAAG,GAAG;MAAE;MACzBK,QAAQ,EAAE;IACZ,CAAC,CAAC;;IAEF;IACAN,QAAQ,CAAC,UAAU,EAAE;MAAEO,KAAK,EAAE;QAAEC,YAAY,EAAEN,aAAa,CAACO;MAAc;IAAE,CAAC,CAAC;EAChF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACnD;AACF,CAAC;;AAED;AACA,MAAME,qBAAqB,GAAGA,CAACb,IAAI,EAAEE,SAAS,KAAK;EACjD,MAAMY,kBAAkB,GAAG;IACzBC,aAAa,EAAEjB,qBAAqB,CAAC,CAAC;IACtCkB,KAAK,EAAEhB,IAAI;IACXiB,KAAK,EAAEf,SAAS;IAChBgB,IAAI,EAAE;EACR,CAAC;EACDN,OAAO,CAACO,GAAG,CAAC,gCAAgC,EAAEL,kBAAkB,CAAC;EACjE,OAAOA,kBAAkB;AAC3B,CAAC;AAIDM,MAAM,CAACC,OAAO,GAAG;EACfR,qBAAqB;EACrBf;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}