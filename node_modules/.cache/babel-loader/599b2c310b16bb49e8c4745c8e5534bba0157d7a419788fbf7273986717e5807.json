{"ast":null,"code":"const {\n  sign: signOneShot,\n  verify: verifyOneShot,\n  createSign,\n  createVerify,\n  getCurves\n} = require('crypto');\nconst {\n  derToJose,\n  joseToDer\n} = require('../help/ecdsa_signatures');\nconst {\n  KEYOBJECT\n} = require('../help/consts');\nconst resolveNodeAlg = require('../help/node_alg');\nconst {\n  asInput\n} = require('../help/key_object');\nconst {\n  dsaEncodingSupported\n} = require('../help/runtime_support');\nlet sign, verify;\nif (dsaEncodingSupported) {\n  sign = (jwaAlg, nodeAlg, {\n    [KEYOBJECT]: keyObject\n  }, payload) => {\n    if (typeof payload === 'string') {\n      payload = Buffer.from(payload);\n    }\n    return signOneShot(nodeAlg, payload, {\n      key: asInput(keyObject, false),\n      dsaEncoding: 'ieee-p1363'\n    });\n  };\n  verify = (jwaAlg, nodeAlg, {\n    [KEYOBJECT]: keyObject\n  }, payload, signature) => {\n    try {\n      return verifyOneShot(nodeAlg, payload, {\n        key: asInput(keyObject, true),\n        dsaEncoding: 'ieee-p1363'\n      }, signature);\n    } catch (err) {\n      return false;\n    }\n  };\n} else {\n  sign = (jwaAlg, nodeAlg, {\n    [KEYOBJECT]: keyObject\n  }, payload) => {\n    return derToJose(createSign(nodeAlg).update(payload).sign(asInput(keyObject, false)), jwaAlg);\n  };\n  verify = (jwaAlg, nodeAlg, {\n    [KEYOBJECT]: keyObject\n  }, payload, signature) => {\n    try {\n      return createVerify(nodeAlg).update(payload).verify(asInput(keyObject, true), joseToDer(signature, jwaAlg));\n    } catch (err) {\n      return false;\n    }\n  };\n}\nconst crvToAlg = crv => {\n  switch (crv) {\n    case 'P-256':\n      return 'ES256';\n    case 'secp256k1':\n      return 'ES256K';\n    case 'P-384':\n      return 'ES384';\n    case 'P-521':\n      return 'ES512';\n  }\n};\nmodule.exports = (JWA, JWK) => {\n  const algs = [];\n  if (getCurves().includes('prime256v1')) {\n    algs.push('ES256');\n  }\n  if (getCurves().includes('secp256k1')) {\n    algs.push('ES256K');\n  }\n  if (getCurves().includes('secp384r1')) {\n    algs.push('ES384');\n  }\n  if (getCurves().includes('secp521r1')) {\n    algs.push('ES512');\n  }\n  algs.forEach(jwaAlg => {\n    const nodeAlg = resolveNodeAlg(jwaAlg);\n    JWA.sign.set(jwaAlg, sign.bind(undefined, jwaAlg, nodeAlg));\n    JWA.verify.set(jwaAlg, verify.bind(undefined, jwaAlg, nodeAlg));\n    JWK.EC.sign[jwaAlg] = key => key.private && JWK.EC.verify[jwaAlg](key);\n    JWK.EC.verify[jwaAlg] = key => (key.use === 'sig' || key.use === undefined) && crvToAlg(key.crv) === jwaAlg;\n  });\n};","map":{"version":3,"names":["sign","signOneShot","verify","verifyOneShot","createSign","createVerify","getCurves","require","derToJose","joseToDer","KEYOBJECT","resolveNodeAlg","asInput","dsaEncodingSupported","jwaAlg","nodeAlg","keyObject","payload","Buffer","from","key","dsaEncoding","signature","err","update","crvToAlg","crv","module","exports","JWA","JWK","algs","includes","push","forEach","set","bind","undefined","EC","private","use"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/jose/lib/jwa/ecdsa.js"],"sourcesContent":["const { sign: signOneShot, verify: verifyOneShot, createSign, createVerify, getCurves } = require('crypto')\n\nconst { derToJose, joseToDer } = require('../help/ecdsa_signatures')\nconst { KEYOBJECT } = require('../help/consts')\nconst resolveNodeAlg = require('../help/node_alg')\nconst { asInput } = require('../help/key_object')\nconst { dsaEncodingSupported } = require('../help/runtime_support')\n\nlet sign, verify\n\nif (dsaEncodingSupported) {\n  sign = (jwaAlg, nodeAlg, { [KEYOBJECT]: keyObject }, payload) => {\n    if (typeof payload === 'string') {\n      payload = Buffer.from(payload)\n    }\n    return signOneShot(nodeAlg, payload, { key: asInput(keyObject, false), dsaEncoding: 'ieee-p1363' })\n  }\n  verify = (jwaAlg, nodeAlg, { [KEYOBJECT]: keyObject }, payload, signature) => {\n    try {\n      return verifyOneShot(nodeAlg, payload, { key: asInput(keyObject, true), dsaEncoding: 'ieee-p1363' }, signature)\n    } catch (err) {\n      return false\n    }\n  }\n} else {\n  sign = (jwaAlg, nodeAlg, { [KEYOBJECT]: keyObject }, payload) => {\n    return derToJose(createSign(nodeAlg).update(payload).sign(asInput(keyObject, false)), jwaAlg)\n  }\n  verify = (jwaAlg, nodeAlg, { [KEYOBJECT]: keyObject }, payload, signature) => {\n    try {\n      return createVerify(nodeAlg).update(payload).verify(asInput(keyObject, true), joseToDer(signature, jwaAlg))\n    } catch (err) {\n      return false\n    }\n  }\n}\n\nconst crvToAlg = (crv) => {\n  switch (crv) {\n    case 'P-256':\n      return 'ES256'\n    case 'secp256k1':\n      return 'ES256K'\n    case 'P-384':\n      return 'ES384'\n    case 'P-521':\n      return 'ES512'\n  }\n}\n\nmodule.exports = (JWA, JWK) => {\n  const algs = []\n\n  if (getCurves().includes('prime256v1')) {\n    algs.push('ES256')\n  }\n\n  if (getCurves().includes('secp256k1')) {\n    algs.push('ES256K')\n  }\n\n  if (getCurves().includes('secp384r1')) {\n    algs.push('ES384')\n  }\n\n  if (getCurves().includes('secp521r1')) {\n    algs.push('ES512')\n  }\n\n  algs.forEach((jwaAlg) => {\n    const nodeAlg = resolveNodeAlg(jwaAlg)\n    JWA.sign.set(jwaAlg, sign.bind(undefined, jwaAlg, nodeAlg))\n    JWA.verify.set(jwaAlg, verify.bind(undefined, jwaAlg, nodeAlg))\n    JWK.EC.sign[jwaAlg] = key => key.private && JWK.EC.verify[jwaAlg](key)\n    JWK.EC.verify[jwaAlg] = key => (key.use === 'sig' || key.use === undefined) && crvToAlg(key.crv) === jwaAlg\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}