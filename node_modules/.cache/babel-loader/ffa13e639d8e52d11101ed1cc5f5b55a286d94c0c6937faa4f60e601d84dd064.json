{"ast":null,"code":"const express = require('express');\nconst debug = require('../lib/debug')('auth');\nconst {\n  get: getConfig\n} = require('../lib/config');\nconst {\n  requiresAuth\n} = require('./requiresAuth');\nconst attemptSilentLogin = require('./attemptSilentLogin');\nconst TransientCookieHandler = require('../lib/transientHandler');\nconst {\n  RequestContext,\n  ResponseContext\n} = require('../lib/context');\nconst appSession = require('../lib/appSession');\nconst isLoggedOut = require('../lib/hooks/backchannelLogout/isLoggedOut');\nconst enforceLeadingSlash = path => {\n  return path.split('')[0] === '/' ? path : '/' + path;\n};\n\n/**\n * Returns a router with two routes /login and /callback\n *\n * @param {Object} [params] The parameters object; see index.d.ts for types and descriptions.\n *\n * @returns {express.Router} the router\n */\nconst auth = function (params) {\n  const config = getConfig(params);\n  debug('configuration object processed, resulting configuration: %O', config);\n  const router = new express.Router();\n  const transient = new TransientCookieHandler(config);\n  router.use(appSession(config));\n\n  // Express context and OpenID Issuer discovery.\n  router.use(async (req, res, next) => {\n    req.oidc = new RequestContext(config, req, res, next);\n    res.oidc = new ResponseContext(config, req, res, next, transient);\n    next();\n  });\n\n  // Login route, configurable with routes.login\n  if (config.routes.login) {\n    const path = enforceLeadingSlash(config.routes.login);\n    debug('adding GET %s route', path);\n    router.get(path, express.urlencoded({\n      extended: false\n    }), (req, res) => res.oidc.login({\n      returnTo: config.baseURL\n    }));\n  } else {\n    debug('login handling route not applied');\n  }\n\n  // Logout route, configurable with routes.logout\n  if (config.routes.logout) {\n    const path = enforceLeadingSlash(config.routes.logout);\n    debug('adding GET %s route', path);\n    router.get(path, (req, res) => res.oidc.logout());\n  } else {\n    debug('logout handling route not applied');\n  }\n\n  // Callback route, configured with routes.callback.\n  if (config.routes.callback) {\n    const path = enforceLeadingSlash(config.routes.callback);\n    debug('adding GET %s route', path);\n    router.get(path, (req, res) => res.oidc.callback());\n    debug('adding POST %s route', path);\n    router.post(path, express.urlencoded({\n      extended: false\n    }), (req, res) => res.oidc.callback());\n  } else {\n    debug('callback handling route not applied');\n  }\n  if (config.backchannelLogout) {\n    const path = enforceLeadingSlash(config.routes.backchannelLogout);\n    debug('adding POST %s route', path);\n    router.post(path, express.urlencoded({\n      extended: false\n    }), (req, res) => res.oidc.backchannelLogout());\n    if (config.backchannelLogout.isLoggedOut !== false) {\n      const isLoggedOutFn = config.backchannelLogout.isLoggedOut || isLoggedOut;\n      router.use(async (req, res, next) => {\n        if (!req.oidc.isAuthenticated()) {\n          next();\n          return;\n        }\n        try {\n          const loggedOut = await isLoggedOutFn(req, config);\n          if (loggedOut) {\n            req[config.session.name] = undefined;\n          }\n          next();\n        } catch (e) {\n          next(e);\n        }\n      });\n    }\n  }\n  if (config.authRequired) {\n    debug('authentication is required for all routes this middleware is applied to');\n    router.use(requiresAuth());\n  } else {\n    debug('authentication is not required for any of the routes this middleware is applied to ' + 'see and apply `requiresAuth` middlewares to your protected resources');\n  }\n  if (config.attemptSilentLogin) {\n    debug(\"silent login will be attempted on end-user's initial HTML request\");\n    router.use(attemptSilentLogin());\n  }\n  return router;\n};\n\n/**\n * Used for instantiating a custom session store. eg\n *\n * ```js\n * const { auth } = require('express-openid-connect');\n * const MemoryStore = require('memorystore')(auth);\n * ```\n *\n * @constructor\n */\nauth.Store = function () {};\nmodule.exports = auth;","map":{"version":3,"names":["express","require","debug","get","getConfig","requiresAuth","attemptSilentLogin","TransientCookieHandler","RequestContext","ResponseContext","appSession","isLoggedOut","enforceLeadingSlash","path","split","auth","params","config","router","Router","transient","use","req","res","next","oidc","routes","login","urlencoded","extended","returnTo","baseURL","logout","callback","post","backchannelLogout","isLoggedOutFn","isAuthenticated","loggedOut","session","name","undefined","e","authRequired","Store","module","exports"],"sources":["/Users/chamas/Final-Project/final-project/node_modules/express-openid-connect/middleware/auth.js"],"sourcesContent":["const express = require('express');\n\nconst debug = require('../lib/debug')('auth');\nconst { get: getConfig } = require('../lib/config');\nconst { requiresAuth } = require('./requiresAuth');\nconst attemptSilentLogin = require('./attemptSilentLogin');\nconst TransientCookieHandler = require('../lib/transientHandler');\nconst { RequestContext, ResponseContext } = require('../lib/context');\nconst appSession = require('../lib/appSession');\nconst isLoggedOut = require('../lib/hooks/backchannelLogout/isLoggedOut');\n\nconst enforceLeadingSlash = (path) => {\n  return path.split('')[0] === '/' ? path : '/' + path;\n};\n\n/**\n * Returns a router with two routes /login and /callback\n *\n * @param {Object} [params] The parameters object; see index.d.ts for types and descriptions.\n *\n * @returns {express.Router} the router\n */\nconst auth = function (params) {\n  const config = getConfig(params);\n  debug('configuration object processed, resulting configuration: %O', config);\n  const router = new express.Router();\n  const transient = new TransientCookieHandler(config);\n\n  router.use(appSession(config));\n\n  // Express context and OpenID Issuer discovery.\n  router.use(async (req, res, next) => {\n    req.oidc = new RequestContext(config, req, res, next);\n    res.oidc = new ResponseContext(config, req, res, next, transient);\n    next();\n  });\n\n  // Login route, configurable with routes.login\n  if (config.routes.login) {\n    const path = enforceLeadingSlash(config.routes.login);\n    debug('adding GET %s route', path);\n    router.get(path, express.urlencoded({ extended: false }), (req, res) =>\n      res.oidc.login({ returnTo: config.baseURL })\n    );\n  } else {\n    debug('login handling route not applied');\n  }\n\n  // Logout route, configurable with routes.logout\n  if (config.routes.logout) {\n    const path = enforceLeadingSlash(config.routes.logout);\n    debug('adding GET %s route', path);\n    router.get(path, (req, res) => res.oidc.logout());\n  } else {\n    debug('logout handling route not applied');\n  }\n\n  // Callback route, configured with routes.callback.\n  if (config.routes.callback) {\n    const path = enforceLeadingSlash(config.routes.callback);\n    debug('adding GET %s route', path);\n    router.get(path, (req, res) => res.oidc.callback());\n    debug('adding POST %s route', path);\n    router.post(path, express.urlencoded({ extended: false }), (req, res) =>\n      res.oidc.callback()\n    );\n  } else {\n    debug('callback handling route not applied');\n  }\n\n  if (config.backchannelLogout) {\n    const path = enforceLeadingSlash(config.routes.backchannelLogout);\n    debug('adding POST %s route', path);\n    router.post(path, express.urlencoded({ extended: false }), (req, res) =>\n      res.oidc.backchannelLogout()\n    );\n\n    if (config.backchannelLogout.isLoggedOut !== false) {\n      const isLoggedOutFn = config.backchannelLogout.isLoggedOut || isLoggedOut;\n      router.use(async (req, res, next) => {\n        if (!req.oidc.isAuthenticated()) {\n          next();\n          return;\n        }\n        try {\n          const loggedOut = await isLoggedOutFn(req, config);\n          if (loggedOut) {\n            req[config.session.name] = undefined;\n          }\n          next();\n        } catch (e) {\n          next(e);\n        }\n      });\n    }\n  }\n\n  if (config.authRequired) {\n    debug(\n      'authentication is required for all routes this middleware is applied to'\n    );\n    router.use(requiresAuth());\n  } else {\n    debug(\n      'authentication is not required for any of the routes this middleware is applied to ' +\n        'see and apply `requiresAuth` middlewares to your protected resources'\n    );\n  }\n  if (config.attemptSilentLogin) {\n    debug(\"silent login will be attempted on end-user's initial HTML request\");\n    router.use(attemptSilentLogin());\n  }\n\n  return router;\n};\n\n/**\n * Used for instantiating a custom session store. eg\n *\n * ```js\n * const { auth } = require('express-openid-connect');\n * const MemoryStore = require('memorystore')(auth);\n * ```\n *\n * @constructor\n */\nauth.Store = function () {};\n\nmodule.exports = auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}